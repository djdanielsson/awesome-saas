---
name: Python application

on:
  push:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.TOKEN }}
        repository: djdanielsson/awesome-saas

    - name: Run JSON Lint
      env:
        REPORT_ONLY: true
        SHOW_ERRORS: true
      run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/json-lint/master/pipeline.sh)

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

# TODO get python lint working
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run python script
      run: cd Template; python build_list.py

    # - name: Get current date
    #   id: date
    #   run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.TOKEN }}
        branch: auto_update # ${{ steps.date.outputs.date }}

    - name: Test
      if: ${{ failure() }}
      run: echo -e "test" >> README.md

    - name: Auto commit if PR fails
      id: auto_commit
      if: ${{ failure() }}
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: auto_update # ${{ steps.date.outputs.date }}
        create_branch: true

    - name: Create Pull Request
      if: steps.auto_commit.outcome == 'success'
      run: |
        curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/djdanielsson/awesome-saas/pulls \
          -d '{"title":"Auto PR","body":"Please check to see if these changes break in portainer before merging.","head":"auto_update","base":"main"}'

...
