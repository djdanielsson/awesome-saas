{
  "version": "3",
  "templates": [
    {
      "title": "Adguard",
      "description": "AdGuard Home is a network-wide software for blocking ads & tracking. After you set it up, it’ll cover ALL your home devices, and you don’t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "adguard",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/adguard.png",
      "image": "adguard/adguardhome:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH",
          "set": "adguard home"
        }
      ],
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "68:68/tcp",
        "68:68/udp",
        "80:80/tcp",
        "443:443/tcp",
        "853:853/tcp",
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Adguard/Workdir",
          "container": "/opt/adguardhome/work"
        },
        {
          "bind": "/portainer/Files/AppData/Adguard/Conf",
          "container": "/opt/adguardhome/conf"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 1
    },
    {
      "title": "Adguardhome",
      "description": "AdGuard Home is a network-wide software for blocking ads & tracking.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Adguardhome",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/AdguardTeam/AdGuardHome/wiki/Docker\" target=\"_blank\">https://github.com/AdguardTeam/AdGuardHome/wiki/Docker</a><br><br><br>",
      "logo": "https://developer.asustor.com/uploadIcons/0020_999_1595573028_AdGuardhome_256.png",
      "image": "adguard/adguardhome:latest",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "80:80/tcp",
        "443:443/tcp",
        "443:443/udp",
        "3001:3000/tcp",
        "853:853/tcp",
        "784:784/udp",
        "853:853/udp",
        "8853:8853/udp",
        "5443:5443/tcp",
        "5443:5443/udp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/AdguardHome/config",
          "container": "/opt/adguardhome/conf"
        },
        {
          "bind": "/portainer/Files/AppData/Config/AdguardHome/work",
          "container": "/opt/adguardhome/work"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 2
    },
    {
      "title": "Adguardhome-sync",
      "description": "[Adguardhome-sync](https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Adguardhome-sync",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/linuxserver/docker-adguardhome-sync#usage\" target=\"_blank\">https://github.com/linuxserver/docker-adguardhome-sync#usage</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
      "image": "linuxserver/adguardhome-sync:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/New_York",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "CONFIGFILE",
          "label": "CONFIGFILE",
          "default": "/config/adguardhome-sync.yaml",
          "description": "Set a custom config file."
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/adguardhome-sync/config",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 3
    },
    {
      "title": "Airsonic",
      "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "airsonic",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/airsonic-logo.png",
      "image": "linuxserver/airsonic:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH",
          "set": "airsonic"
        },
        {
          "label": "JAVA_OPTS",
          "name": "JAVA_OPTS",
          "set": "-Xms256m -Xmx512m"
        }
      ],
      "ports": [
        "4040:4040/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Music",
          "container": "/music"
        },
        {
          "bind": "/portainer/Files/AppData/Airsonic/Playlists",
          "container": "/playlists"
        },
        {
          "bind": "/portainer/Podcasts",
          "container": "/podcasts"
        },
        {
          "bind": "/portainer/Files/AppData/Airsonic/Media",
          "container": "/media"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Airsonic/",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 4
    },
    {
      "title": "Airsonic Advanced",
      "description": "Airsonic Advanced is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "airsonic-advanced",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/airsonic-advanced/airsonic-advanced\" target=\"_blank\">https://github.com/airsonic-advanced/airsonic-advanced</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/linuxserver/docker-airsonic-advanced\" target=\"_blank\">https://github.com/linuxserver/docker-airsonic-advanced</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/airsonic-logo.png",
      "image": "linuxserver/airsonic-advanced:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "airsonic",
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH"
        },
        {
          "default": "-Xms256m -Xmx512m",
          "label": "JAVA_OPTS",
          "name": "JAVA_OPTS"
        }
      ],
      "ports": [
        "4040:4040/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Music",
          "container": "/music"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/Playlists",
          "container": "/playlists"
        },
        {
          "bind": "/portainer/Podcasts",
          "container": "/podcasts"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/Media",
          "container": "/media"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/config/",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 5
    },
    {
      "title": "Alexa Wake On Lan",
      "description": "A Fauxmo frontend that facilitates multi-device control via Alexa services by emulating wemo devices, enabling users to turn computers on/off seamlessly using voice commands.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "HomeAutomation",
        "Other",
        "Tools"
      ],
      "name": "Alexa-Wake-On-Lan",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Docker Documentation: </b><a href=\"https://github.com/CristianEduardMihai/alexa-wol\" target=\"_blank\">https://github.com/CristianEduardMihai/alexa-wol</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/CristianEduardMihai/alexa-wol/main/images/logo.jpg",
      "image": "cristianeduardmihai/alexa-wol:latest",
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/AlexaWakeOnLan/config",
          "container": "/alexa/api/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 6
    },
    {
      "title": "Alpine Xfce4 noVNC",
      "description": "Alpine xfce4 novnc",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "alpine-xfce4-novnc",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/novaspirit/Alpine_xfce4_noVNC\" target=\"_blank\">https://github.com/novaspirit/Alpine_xfce4_noVNC</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/novaspirit/Alpine_xfce4_noVNC\" target=\"_blank\">https://github.com/novaspirit/Alpine_xfce4_noVNC</a><br><br><br>Default username/password will be alpine/alpine.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/novnc.png",
      "image": "novaspirit/alpine_xfce4_novnc:latest",
      "ports": [
        "6080:6080/tcp",
        "56780:56780/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/alpine-xfce4-novnc/home/alpine/downloads",
          "container": "/home/alpine/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 7
    },
    {
      "title": "Altus",
      "description": "[Altus](https://github.com/amanharwara/altus) is an Electron-based WhatsApp client with themes and multiple account support.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Chat"
      ],
      "name": "Altus",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/altus/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/altus-logo.png",
      "image": "linuxserver/altus:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/altus/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 8
    },
    {
      "title": "Apache Httpd",
      "description": "The Apache HTTP Server is a free and open-source cross-platform web server software, released under the terms of Apache License 2.0. Apache is developed and maintained by an open community of developers under the auspices of the Apache Software Foundation.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web",
        "Proxy"
      ],
      "name": "apache-httpd",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://httpd.apache.org/\" target=\"_blank\">https://httpd.apache.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/httpd\" target=\"_blank\">https://hub.docker.com/_/httpd</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/apache-httpd.png",
      "image": "httpd:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8080:80/tcp",
        "8443:443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/apache-httpd",
          "container": "/usr/local/apache2/htdocs/"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 9
    },
    {
      "title": "Apprise-api",
      "description": "[Apprise-api](https://github.com/caronc/apprise-api) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API. * Send notifications to more than 100 services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. * A Simple Website to verify and test your configuration with. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Monitoring"
      ],
      "name": "Apprise-api",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/apprise-api/config<br>mkdir -p /srv/lsio/apprise-api/attachments</p>",
      "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
      "image": "linuxserver/apprise-api:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "APPRISE_ATTACH_SIZE",
          "label": "APPRISE_ATTACH_SIZE",
          "default": "0",
          "description": "Max attachment size in Mb. `0` disables attachments. Must have `/attachments` mounted to set to a positive value. [OPTIONAL]"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/apprise-api/config"
        },
        {
          "container": "/attachments",
          "bind": "/srv/lsio/apprise-api/attachments"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 10
    },
    {
      "title": "ArchiSteamFarm",
      "description": "C# application with primary purpose of farming Steam cards from multiple accounts simultaneously.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "Games"
      ],
      "name": "archisteamfarm",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/JustArchiNET/ArchiSteamFarm/main/resources/ASF_184x184.png",
      "image": "justarchi/archisteamfarm:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "1242:1242/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/config",
          "container": "/app/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/plugins",
          "container": "/app/plugins"
        },
        {
          "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/logs",
          "container": "/app/logs"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 11
    },
    {
      "title": "Archivebox",
      "description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "archivebox",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://archivebox.io/\" target=\"_blank\">https://archivebox.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki/Docker\" target=\"_blank\">https://github.com/ArchiveBox/ArchiveBox/wiki/Docker</a><br><br><br>By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available <a href='https://github.com/ArchiveBox/ArchiveBox/wiki'>here</a>.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/archivebox.png",
      "image": "archivebox/archivebox:latest",
      "env": [
        {
          "default": "*",
          "label": "ALLOWED_HOSTS",
          "name": "ALLOWED_HOSTS"
        },
        {
          "default": "750m",
          "label": "MEDIA_MAX_SIZE",
          "name": "MEDIA_MAX_SIZE"
        },
        {
          "default": "true",
          "label": "PUBLIC_INDEX",
          "name": "PUBLIC_INDEX"
        },
        {
          "default": "true",
          "label": "PUBLIC_SNAPSHOTS",
          "name": "PUBLIC_SNAPSHOTS"
        },
        {
          "default": "false",
          "label": "PUBLIC_ADD_VIEW",
          "name": "PUBLIC_ADD_VIEW"
        }
      ],
      "ports": [
        "8002:8000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/archivebox",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 12
    },
    {
      "title": "Ardour",
      "description": "[Ardour](https://ardour.org/) is an open source, collaborative effort of a worldwide team including musicians, programmers, and professional recording engineers.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Audio Processing"
      ],
      "name": "Ardour",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/ardour/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ardour-logo.png",
      "image": "linuxserver/ardour:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/` [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/ardour/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 13
    },
    {
      "title": "AriaNG",
      "description": "AriaNg is a modern web frontend making aria2 easier to use. AriaNg is written in pure html & javascript, thus it does not need any compilers or runtime environment. You can just put AriaNg in your web server and open it in your browser. AriaNg uses responsive layout, and supports any desktop or mobile devices.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloader"
      ],
      "name": "AriaNG",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/hurlenko/aria2-ariang-docker\" target=\"_blank\">https://github.com/hurlenko/aria2-ariang-docker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/hurlenko/aria2-ariang-docker\" target=\"_blank\">https://github.com/hurlenko/aria2-ariang-docker</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/ariang.png",
      "image": "hurlenko/aria2-ariang:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "443",
          "label": "ARIA2RPCPORT",
          "name": "ARIA2RPCPORT"
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/AriaNG",
          "container": "/aria2/conf"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/aria2/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 14
    },
    {
      "title": "Audacity",
      "description": "[Audacity](https://www.audacityteam.org/) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Audio Processing"
      ],
      "name": "Audacity",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/audacity/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
      "image": "linuxserver/audacity:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/audacity/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 15
    },
    {
      "title": "Authelia",
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "Authentication"
      ],
      "name": "authelia",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.authelia.com/\" target=\"_blank\">https://www.authelia.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.authelia.com/docs/configuration/\" target=\"_blank\">https://www.authelia.com/docs/configuration/</a><br><br><br>Requires a configuration.yml file in order to work. Documentation is Available <a href='https://www.authelia.com/configuration/prologue/introduction/'>here</a>.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/authelia.png",
      "image": "authelia/authelia:latest",
      "env": [
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "9091:9091/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Authelia",
          "container": "/etc/authelia/"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 16
    },
    {
      "title": "Authentik",
      "description": "Authentik is an open-source Identity Provider focused on flexibility and versatility.  This will start the stack with basic options, to customize further ie. adding email settings then use the editor under the deployed stack and 'Update the stack'",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Authentication",
        "Cloud",
        "Management",
        "Security"
      ],
      "name": "authentik",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://goauthentik.io/\" target=\"_blank\">https://goauthentik.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://goauthentik.io/docs/\" target=\"_blank\">https://goauthentik.io/docs/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_authentik.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_authentik.sh | bash</h3><br><br>For this to work properly you will need a GeoIP account.  Go to https://www.maxmind.com/en/geolite2/signup, once done generate a license key and copy in your user number.  For info on emailing in the system see, https://goauthentik.io/docs/installation/docker-compose#email-configuration-optional-but-recommended",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/authentik.svg",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted/",
        "stackfile": "/stack/authentik.yml"
      },
      "id": 17
    },
    {
      "title": "Babybuddy",
      "description": "[Babybuddy](https://github.com/babybuddy/babybuddy) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Family"
      ],
      "name": "Babybuddy",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/babybuddy/config</p>",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
      "image": "linuxserver/babybuddy:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "CSRF_TRUSTED_ORIGINS",
          "label": "CSRF_TRUSTED_ORIGINS",
          "default": "http://127.0.0.1:8000,https://babybuddy.domain.com",
          "description": "Add any address you'd like to access babybuddy at (comma separated, no spaces)"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/babybuddy/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 18
    },
    {
      "title": "Bambustudio",
      "description": "[Bambu Studio](https://bambulab.com/en/download/studio) is an open-source, cutting-edge, feature-rich slicing software. It contains project-based workflows, systematically optimized slicing algorithms, and an easy-to-use graphical interface, bringing users an incredibly smooth printing experience.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Printing"
      ],
      "name": "Bambustudio",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/bambustudio/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bambustudio-logo.png",
      "image": "linuxserver/bambustudio:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DARK_MODE",
          "label": "DARK_MODE",
          "default": "true",
          "description": "Set this to true to enable dark mode for Bambu Studio. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/bambustudio/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 19
    },
    {
      "title": "Baserow",
      "description": "Open source no-code database and Airtable alternative",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Tools"
      ],
      "name": "baserow",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/baserow.png",
      "image": "baserow/baserow:1.22.3",
      "env": [
        {
          "name": "BASEROW_PUBLIC_URL",
          "label": "BASEROW_PUBLIC_URL",
          "preset": false
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/baserow/data",
          "bind": "/opt/mediadepot/apps/baserow"
        }
      ],
      "id": 20
    },
    {
      "title": "Bazarr",
      "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video",
        "Music"
      ],
      "name": "bazarr",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.bazarr.media/\" target=\"_blank\">https://www.bazarr.media/</a><br><b>Official Docker Documentation: </b><a href=\"https://wiki.bazarr.media/Getting-Started/Installation/Docker/docker/\" target=\"_blank\">https://wiki.bazarr.media/Getting-Started/Installation/Docker/docker/</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/bazarr.png",
      "image": "linuxserver/bazarr:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "6767:6767/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Bazarr",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 21
    },
    {
      "title": "Beets",
      "description": "The purpose of beets is to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a bouquet of tools for manipulating and accessing your music.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "beets",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://beets.io/\" target=\"_blank\">https://beets.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-beets\" target=\"_blank\">https://docs.linuxserver.io/images/docker-beets</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/beets-icon.png",
      "image": "linuxserver/beets:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8337:8337/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Beets",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 22
    },
    {
      "title": "Bind9",
      "description": "BIND 9 provides software for Domain Name System (DNS) management including both defining domain names authoritatively for a given DNS zone, and recursively resolving domain names to their IP addresses. In addition to BIND 9's DNS server itself, named, this container also includes tools for performing DNS queries and dynamic updates. Read more on the BIND 9 https://www.isc.org/bind/",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "DNS",
        "Tools"
      ],
      "name": "bind9",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/ubuntu/bind9\" target=\"_blank\">https://hub.docker.com/r/ubuntu/bind9</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/ubuntu/bind9\" target=\"_blank\">https://hub.docker.com/r/ubuntu/bind9</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_bind9.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_bind9.sh | bash</h3><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/bind9.png",
      "image": "ubuntu/bind9:latest",
      "env": [
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "53:53/tcp",
        "53:53/udp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/bind9/named.conf",
          "container": "/etc/bind/named.conf"
        },
        {
          "bind": "/portainer/Files/AppData/Config/bind9/cache",
          "container": "/var/cache/bind"
        },
        {
          "bind": "/portainer/Files/AppData/Config/bind9/bind",
          "container": "/var/lib/bind"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 23
    },
    {
      "title": "Bitwarden RS",
      "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "bitwardenrs",
      "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
      "image": "bitwardenrs/server:latest",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Bitwarden-rs",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 24
    },
    {
      "title": "Blender",
      "description": "[Blender](https://www.blender.org/) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Modeling"
      ],
      "name": "Blender",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/blender/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png",
      "image": "linuxserver/blender:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/` [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/blender/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 25
    },
    {
      "title": "Boinc",
      "description": "[BOINC](https://boinc.berkeley.edu/) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Science"
      ],
      "name": "Boinc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/boinc/config</p>",
      "logo": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
      "image": "linuxserver/boinc:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "PASSWORD",
          "label": "PASSWORD",
          "default": "",
          "description": "Optionally set a password for the gui. [OPTIONAL]"
        }
      ],
      "ports": [
        "8080:8080/tcp",
        "8181:8181/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/boinc/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 26
    },
    {
      "title": "Booksonic",
      "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Books",
        "Other"
      ],
      "name": "booksonic",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/booksonic.png",
      "image": "linuxserver/booksonic:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "booksonic",
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH"
        }
      ],
      "ports": [
        "4040:4040/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Books",
          "container": "/books"
        },
        {
          "bind": "/portainer/Files/Podcasts",
          "container": "/podcast"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Booksonic",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 27
    },
    {
      "title": "Bookstack",
      "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Wiki"
      ],
      "name": "bookstack",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.bookstackapp.com/\" target=\"_blank\">https://www.bookstackapp.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.bookstackapp.com/docs/admin/installation/#docker\" target=\"_blank\">https://www.bookstackapp.com/docs/admin/installation/#docker</a><br><br><br>Default login is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/bookstack2.png",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted/",
        "stackfile": "/stack/bookstack.yml"
      },
      "id": 28
    },
    {
      "title": "Brave",
      "description": "[The Brave browser](https://brave.com/) is a fast, private and secure web browser for PC, Mac and mobile.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Brave",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/brave/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/brave-logo.png",
      "image": "linuxserver/brave:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/brave/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 29
    },
    {
      "title": "Budge",
      "description": "[Budge](https://github.com/linuxserver/budge) is an open source 'budgeting with envelopes' personal finance app.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Finance"
      ],
      "name": "Budge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/budge/config</p>",
      "image": "linuxserver/budge:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/budge/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 30
    },
    {
      "title": "Caddy",
      "description": "Caddy - The Ultimate Server with Automatic HTTPS.  Need to run tools/install_caddy.sh before installing the template.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Web",
        "Webserver"
      ],
      "name": "caddy",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://caddyserver.com/\" target=\"_blank\">https://caddyserver.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/caddy\" target=\"_blank\">https://hub.docker.com/_/caddy</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_caddy.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_caddy.sh | bash</h3><br><br>Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/caddy.png",
      "image": "caddy:latest",
      "ports": [
        "80:80/tcp",
        "443:443/tcp",
        "2019:2019/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Caddy/Data",
          "container": "/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Caddy/Config",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Caddy/Caddyfile",
          "container": "/etc/caddy/Caddyfile"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 31
    },
    {
      "title": "Calibre",
      "description": "calibre is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Books"
      ],
      "name": "calibre",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://calibre-ebook.com/\" target=\"_blank\">https://calibre-ebook.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-calibre\" target=\"_blank\">https://docs.linuxserver.io/images/docker-calibre</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/calibre-web-icon.png",
      "image": "linuxserver/calibre:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "8084:8080/tcp",
        "8085:8081/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Books",
          "container": "/books"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Calibre",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 32
    },
    {
      "title": "Calibre Web",
      "description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.\n\n  [br][br]\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\n  [b]/config[/b] Where Calibre-web should store it's database[br]\n  [b]/books[/b] Path to your calibre library metadata.db file[br]",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Books"
      ],
      "name": "calibre-web",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://calibre-ebook.com/\" target=\"_blank\">https://calibre-ebook.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-calibre-web\" target=\"_blank\">https://docs.linuxserver.io/images/docker-calibre-web</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/calibre-web-icon.png",
      "image": "linuxserver/calibre-web:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8083:8083/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Books",
          "container": "/books"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Calibre-web",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 33
    },
    {
      "title": "Calligra",
      "description": "[Calligra](https://calligra.org/) is an office and graphic art suite by KDE. It is available for desktop PCs, tablet computers, and smartphones. It contains applications for word processing, spreadsheets, presentation, vector graphics, and editing databases.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents"
      ],
      "name": "Calligra",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/calligra/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calligra-logo.png",
      "image": "linuxserver/calligra:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/calligra/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 34
    },
    {
      "title": "Cardigann",
      "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "cardigann",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/cardigann.png",
      "image": "linuxserver/cardigann:latest",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        }
      ],
      "ports": [
        "5060/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/cardigann"
        }
      ],
      "id": 35
    },
    {
      "title": "ChangeDetection",
      "description": "changedetection.io - The best and simplest self-hosted open source website change detection monitoring and notification service. An alternative to Visualping, Watchtower",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents",
        "Networkother",
        "Tools"
      ],
      "name": "changedetection",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/changedetection.jpg",
      "image": "ghcr.io/dgtlmoon/changedetection.io:latest",
      "env": [],
      "ports": [
        "5000/tcp"
      ],
      "volumes": [
        {
          "container": "/datastore",
          "bind": "/opt/mediadepot/apps/changedetection"
        }
      ],
      "id": 36
    },
    {
      "title": "Changedetection.io",
      "description": "[Changedetection.io](https://github.com/dgtlmoon/changedetection.io) provides free, open-source web page monitoring, notification and change detection.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Tools",
        "Automation"
      ],
      "name": "Changedetection.io",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/changedetection.io/config</p>",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/changedetection-icon.png",
      "image": "linuxserver/changedetection.io:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "BASE_URL",
          "label": "BASE_URL",
          "default": "",
          "description": "Specify the full URL (including protocol) when running behind a reverse proxy [OPTIONAL]"
        },
        {
          "name": "PLAYWRIGHT_DRIVER_URL",
          "label": "PLAYWRIGHT_DRIVER_URL",
          "default": "",
          "description": "Specify the full URL to your chrome driver instance. See the [wiki](https://github.com/dgtlmoon/changedetection.io/wiki/Playwright-content-fetcher) for details. [OPTIONAL]"
        }
      ],
      "ports": [
        "5000:5000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/changedetection.io/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 37
    },
    {
      "title": "Chevereto",
      "description": "Chevereto is a powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. Please note that this offers only the free Chevereto version..",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "Photo"
      ],
      "name": "Chevereto",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://chevereto.com/\" target=\"_blank\">https://chevereto.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/nmtan/chevereto\" target=\"_blank\">https://hub.docker.com/r/nmtan/chevereto</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/Chevereto.png",
      "image": "nmtan/chevereto:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "",
          "label": "CHEVERETO_DB_HOST",
          "name": "CHEVERETO_DB_HOST"
        },
        {
          "default": "",
          "label": "CHEVERETO_DB_USERNAME",
          "name": "CHEVERETO_DB_USERNAME"
        },
        {
          "default": "",
          "label": "CHEVERETO_DB_PASSWORD",
          "name": "CHEVERETO_DB_PASSWORD"
        },
        {
          "default": "",
          "label": "CHEVERETO_DB_NAME",
          "name": "CHEVERETO_DB_NAME"
        },
        {
          "default": "",
          "label": "CHEVERETO_DB_PREFIX",
          "name": "CHEVERETO_DB_PREFIX"
        }
      ],
      "ports": [
        "7382:80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html/images"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 38
    },
    {
      "title": "Chowdown",
      "description": "ave recipes in seconds with plain text formatting and create beatiful recipe pages with automated ease.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Chowdown",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/chowdown.png",
      "image": "gregyankovoy/chowdown:latest",
      "ports": [
        "4000:4000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Chowdown",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 39
    },
    {
      "title": "Chrome",
      "description": "[Chrome](https://www.google.com/chrome/) is the official web browser from Google, built to be fast, secure, and customizable.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Browser"
      ],
      "name": "Chrome",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/chrome/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/chrome-logo.png",
      "image": "linuxserver/chrome:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "CHROME_CLI",
          "label": "CHROME_CLI",
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple Chrome CLI flags, this string will be passed to the application in full. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/chrome/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 40
    },
    {
      "title": "Chromium",
      "description": "[Chromium](https://www.chromium.org/chromium-projects/) is an open-source browser project that aims to build a safer, faster, and more stable way for all users to experience the web.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Browser"
      ],
      "name": "Chromium",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/chromium/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/chromium-logo.png",
      "image": "linuxserver/chromium:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "CHROME_CLI",
          "label": "CHROME_CLI",
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/chromium/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 41
    },
    {
      "title": "Chrony NTP",
      "description": "chrony is a versatile implementation of the Network Time Protocol (NTP). It can synchronise the system clock with NTP servers, reference clocks (e.g. GPS receiver), and manual input using wristwatch and keyboard. It can also operate as an NTPv4 (RFC 5905) server and peer to provide a time service to other computers in the network.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "tools"
      ],
      "name": "chrony-ntp",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/cturra/docker-ntp\" target=\"_blank\">https://github.com/cturra/docker-ntp</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/cturra/docker-ntp/blob/main/README.md\" target=\"_blank\">https://github.com/cturra/docker-ntp/blob/main/README.md</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/chrony.png",
      "image": "cturra/ntp:latest",
      "env": [
        {
          "default": "0",
          "label": "LOG_LEVEL",
          "name": "LOG_LEVEL"
        },
        {
          "description": "Additional Example: time1.google.com,time2.google.com,time3.google.com,time4.google.com",
          "default": "time.cloudflare.com",
          "label": "NTP_SERVERS",
          "name": "NTP_SERVERS"
        }
      ],
      "ports": [
        "123:123/udp"
      ],
      "restart_policy": "unless-stopped",
      "id": 42
    },
    {
      "title": "Clamav",
      "description": "ClamAV® is an open source antivirus engine for detecting trojans, viruses, malware & other malicious threats.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Anitvirus"
      ],
      "name": "clamav",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.clamav.net/\" target=\"_blank\">https://docs.clamav.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mkodockx/docker-clamav\" target=\"_blank\">https://hub.docker.com/r/mkodockx/docker-clamav</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_clamav.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_clamav.sh | bash</h3><br><br>",
      "logo": "http://www.clamav.net/assets/clamav-trademark.png",
      "image": "mkodockx/docker-clamav:alpine",
      "ports": [
        "3310:3310/tcp"
      ],
      "volumes": [
        {
          "bind": "/etc/timezone",
          "container": "/etc/timezone"
        },
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime"
        },
        {
          "bind": "/portainer/Files/AppData/Config/clamav/config",
          "container": "/etc/clamav"
        },
        {
          "bind": "/portainer/Files/AppData/Config/clamav/virus_definitions",
          "container": "/var/lib/clamav"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 43
    },
    {
      "title": "Cloud Commander",
      "description": "Cloud Commander a file manager for the web with console and editor.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents",
        "Networkother",
        "Tools"
      ],
      "name": "cloudcmd",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/cloudcmd-logo.png",
      "image": "coderaiser/cloudcmd",
      "env": [],
      "ports": [
        "8000/tcp"
      ],
      "volumes": [
        {
          "container": "/media/host/opt/mediadepot",
          "bind": "/opt/mediadepot/apps"
        },
        {
          "container": "/media/host/media/storage",
          "bind": "/media/storage"
        },
        {
          "container": "/media/host/media/temp",
          "bind": "/media/temp"
        }
      ],
      "id": 44
    },
    {
      "title": "Cloudflare DDNS",
      "description": "A robust Cloudflare DDNS updater with a small footprint. The program will detect your machine's public IP addresses and update DNS records using the Cloudflare API.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "DNS",
        "Tools"
      ],
      "name": "cloudflare-ddns",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/\" target=\"_blank\">https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/favonia/cloudflare-ddns/\" target=\"_blank\">https://github.com/favonia/cloudflare-ddns/</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflare-ddns.png",
      "image": "favonia/cloudflare-ddns:latest",
      "env": [
        {
          "default": "",
          "label": "CLOUDFLARE_API_TOKEN",
          "name": "CLOUDFLARE_API_TOKEN"
        },
        {
          "default": "",
          "label": "DOMAINS (Comma Separated List)",
          "name": "DOMAINS"
        },
        {
          "default": "true",
          "label": "PROXIED",
          "name": "PROXIED"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 45
    },
    {
      "title": "Cloudflared Tunnel",
      "description": "Cloudflare Tunnel provides you with a secure way to connect your resources to Cloudflare without a publicly routable IP address. With Tunnel, you do not send traffic to an external IP — instead, a lightweight daemon in your infrastructure (cloudflared) creates outbound-only connections to Cloudflare's edge.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "VPN",
        "Proxy"
      ],
      "name": "cloudflared-tunnel",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/products/tunnel/\" target=\"_blank\">https://www.cloudflare.com/products/tunnel/</a><br><b>Official Docker Documentation: </b><a href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/\" target=\"_blank\">https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/</a><br><br><br>Requires a token in order to work. You can find the dashboard <a href='https://dash.teams.cloudflare.com/'>here</a>. Once you logged in, go to Access followed by Tunnels. Create a tunnel. After you gave it a name you'll see in the command section a long string of chacters. This is your token you must copy.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflared.svg",
      "image": "cloudflare/cloudflared:latest",
      "env": [
        {
          "default": "Your_Tunnel_Token_From_The_Zero_Dashboard_Access_Tunnel",
          "label": "token",
          "name": "TUNNEL_TOKEN"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 46
    },
    {
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "CockroachDB",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/cockroachdb/docker-stack.yml"
      },
      "id": 47
    },
    {
      "title": "Code Server",
      "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "code-server",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://coder.com/\" target=\"_blank\">https://coder.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-code-server\" target=\"_blank\">https://docs.linuxserver.io/images/docker-code-server</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/code-server.png",
      "image": "linuxserver/code-server:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "GUID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "label": "SUDO_PASSWORD",
          "name": "SUDO_PASSWORD"
        },
        {
          "default": "example.my.domain",
          "label": "PROXY_DOMAIN",
          "name": "PROXY_DOMAIN"
        }
      ],
      "ports": [
        "8443:8443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Code-Server",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 48
    },
    {
      "title": "Codiad",
      "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Productivity"
      ],
      "name": "codiad",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/codiad-icon.png",
      "image": "linuxserver/codiad:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Codiad",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 49
    },
    {
      "title": "Collabora Online Development Edition (CODE)",
      "description": "Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs for instructions on installing the template to work with NextCloud.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "tools"
      ],
      "name": "collabora",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.collaboraoffice.com/\" target=\"_blank\">https://www.collaboraoffice.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://sdk.collaboraonline.com/docs/installation/CODE_Docker_image.html\" target=\"_blank\">https://sdk.collaboraonline.com/docs/installation/CODE_Docker_image.html</a><br><br><br>",
      "logo": "https://www.collaboraoffice.com/wp-content/uploads/2022/03/collabora-productivity-nav-icon.png",
      "image": "collabora/code:latest",
      "env": [
        {
          "description": "User name for the admin console.",
          "default": "admin",
          "label": "username",
          "name": "username"
        },
        {
          "description": "Password for the admin console.",
          "default": "z#wYaMnS4!?9RK",
          "label": "password",
          "name": "password"
        },
        {
          "description": "When this environment variable is set (is not “”), then startup script will not generate a new SSL certificate signed by a dummy CA. It is useful, if you want to use your own SSL certificate for some reason.",
          "default": "",
          "label": "DONT_GEN_SSL_CERT",
          "name": "DONT_GEN_SSL_CERT"
        },
        {
          "description": "When this environment variable is set (is not “”), then startup script will generate a new SSL certificate signed by a dummy CA for this domain, not for localhost",
          "default": "",
          "label": "cert_domain",
          "name": "cert_domain"
        },
        {
          "description": "When this environment variable is set (is not “”), then its value will be used as server name in /etc/coolwsd/coolwsd.xml. Without this, CODE is not delivering a correct host for the websocket connection in case of a proxy in front of it.",
          "default": "collabora.domain.tld | http://IP:Port",
          "label": "server_name",
          "name": "server_name"
        },
        {
          "description": "By default only limited set of spelling dictionaries and thesauri are configured for CODE, mainly for performance reasons. The default set of languages is the following: de_DE en_GB en_US es_ES fr_FR it nl pt_BR pt_PT ru. With the dictionaries environment variable you can change this list. The dictionaries environment variable should contain the space separated list of language codes (optionally followed by country code). In order to save resources, it makes sense to load only those dictionaries that are actually needed.",
          "default": "",
          "label": "dictionaries",
          "name": "dictionaries"
        },
        {
          "description": "You can pass extra command line parameters to coolwsd via this environment variable. For example, if you want to start coolwsd without SSL, when you test or develop, the syntax is: -e ''extra_params=--o:ssl.enable=false''. To learn about all possible options, refer to the self-documented /etc/coolwsd/coolwsd.xml configuration file in the Docker image.",
          "default": "--o:ssl.enable=false --o:ssl.termination=true",
          "label": "extra_params",
          "name": "extra_params"
        },
        {
          "description": "The domain of your NextCloud instance.",
          "default": "nextcloud.domain.tld",
          "label": "domain",
          "name": "domain"
        }
      ],
      "ports": [
        "9980:9980/tcp"
      ],
      "restart_policy": "unless-stopped",
      "id": 50
    },
    {
      "title": "CommandBox",
      "description": "ColdFusion (CFML) CLI",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Development"
      ],
      "name": "CommandBox",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
      "image": "ortussolutions/commandbox:latest",
      "env": [
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": [
        "8080/tcp",
        "8443/tcp"
      ],
      "id": 51
    },
    {
      "title": "ContentBox",
      "description": "Open-source modular CMS",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cms"
      ],
      "name": "ContentBox",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
      "image": "ortussolutions/contentbox:latest",
      "env": [
        {
          "name": "express",
          "default": "true",
          "preset": true
        },
        {
          "name": "install",
          "default": "true",
          "preset": true
        },
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": [
        "8080/tcp",
        "8443/tcp"
      ],
      "volumes": [
        {
          "container": "/data/contentbox/db"
        },
        {
          "container": "/app/includes/shared/media"
        }
      ],
      "id": 52
    },
    {
      "title": "COPS",
      "description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Books"
      ],
      "name": "cops",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://blog.slucas.fr/projects/calibre-opds-php-server/\" target=\"_blank\">https://blog.slucas.fr/projects/calibre-opds-php-server/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-cops\" target=\"_blank\">https://docs.linuxserver.io/images/docker-cops</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cops-icon.png",
      "image": "linuxserver/cops:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8945:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Books",
          "container": "/books"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Cops",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 53
    },
    {
      "title": "CouchPotato",
      "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Video"
      ],
      "name": "couchpotato",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/couchpotato-icon.png",
      "image": "linuxserver/couchpotato:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "5050:5050/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Couchpotato",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 54
    },
    {
      "title": "CrateDB",
      "description": "An open-source distributed SQL database",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "CrateDB",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
      "image": "crate:latest",
      "ports": [
        "4200/tcp",
        "4300/tcp"
      ],
      "volumes": [
        {
          "container": "/data"
        }
      ],
      "id": 55
    },
    {
      "title": "Cura",
      "description": "[UltiMaker Cura](https://ultimaker.com/software/ultimaker-cura/) is free, easy-to-use 3D printing software trusted by millions of users. Fine-tune your 3D model with 400+ settings for the best slicing and printing results.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Printing"
      ],
      "name": "Cura",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/cura/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cura-logo.png",
      "image": "linuxserver/cura:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/cura/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 56
    },
    {
      "title": "Cura-NoVNC",
      "description": "This is a super basic noVNC build using supervisor to serve Cura in your favorite web browser.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools"
      ],
      "name": "CuraNoVNC",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/mikeah/cura-novnc\" target=\"_blank\">https://hub.docker.com/r/mikeah/cura-novnc</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/helfrichmichael/cura-novnc\" target=\"_blank\">https://github.com/helfrichmichael/cura-novnc</a><br><br><br>",
      "logo": "https://upload.wikimedia.org/wikipedia/en/thumb/9/9b/Logo_for_Cura_Software.png/120px-Logo_for_Cura_Software.png",
      "image": "mikeah/cura-novnc",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "9080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/configs"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 57
    },
    {
      "title": "Daapd",
      "description": "DAAP (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), MPD and internet radio.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "daapd",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://owntone.github.io/owntone-server/\" target=\"_blank\">https://owntone.github.io/owntone-server/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-daapd\" target=\"_blank\">https://docs.linuxserver.io/images/docker-daapd</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-icon.png",
      "image": "linuxserver/daapd:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "3689:3689/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Daapd",
          "container": "/config"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 58
    },
    {
      "title": "Darktable",
      "description": "[darktable](https://www.darktable.org/) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Photos"
      ],
      "name": "Darktable",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/darktable/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
      "image": "linuxserver/darktable:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/darktable/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 59
    },
    {
      "title": "DashMachine",
      "description": "Another application bookmark dashboard, with fun features.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "dashmachine",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/rmountjoy92/DashMachine\" target=\"_blank\">https://github.com/rmountjoy92/DashMachine</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/rmountjoy92/DashMachine\" target=\"_blank\">https://github.com/rmountjoy92/DashMachine</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dashmachine_logo.png",
      "image": "failed2run/dashmachine:latest",
      "ports": [
        "5100:5000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Dashmachine",
          "container": "/dashmachine/dashmachine/user_data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 60
    },
    {
      "title": "Dashy",
      "description": "Dashy helps you organize your self-hosted services by making them accessible from a single place",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Dashboard"
      ],
      "name": "Dashy",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dashy.to\" target=\"_blank\">https://dashy.to</a><br><b>Official Docker Documentation: </b><a href=\"https://dashy.to/docs/quick-start\" target=\"_blank\">https://dashy.to/docs/quick-start</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_dashy.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_dashy.sh | bash</h3><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dashy.png",
      "image": "lissy93/dashy:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "9100:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Dashy/local-conf.yml",
          "container": "/app/public/conf.yml"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 61
    },
    {
      "title": "Datadog agent",
      "description": "Collect events and metrics",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Monitoring"
      ],
      "name": "Datadog agent",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "image": "datadog/agent:latest",
      "env": [
        {
          "name": "DD_API_KEY",
          "label": "Datadog API key"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/host/sys/fs/cgroup",
          "bind": "/sys/fs/cgroup",
          "readonly": true
        },
        {
          "container": "/host/proc",
          "bind": "/proc",
          "readonly": true
        }
      ],
      "id": 62
    },
    {
      "title": "DaVinci Postgres Server",
      "description": "DaVinci Resolve Postgresql Server, Davinci requires a specific version of postgres db, this container will install the version needed",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tool"
      ],
      "name": "DaVinci Postgres Server",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md\" target=\"_blank\">https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md</a><br><b>Official Docker Documentation: </b><a href=\"https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md\" target=\"_blank\">https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/resolve.png",
      "image": "postgres:13",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "database",
          "label": "POSTGRES_DB",
          "name": "POSTGRES_DB"
        },
        {
          "default": "postgres",
          "label": "POSTGRES_USER",
          "name": "POSTGRES_USER"
        },
        {
          "default": "DaVinci",
          "label": "POSTGRES_PASSWORD",
          "name": "POSTGRES_PASSWORD"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "5432:5432/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/DavinciServer/",
          "container": "/var/lib/postgresql/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 63
    },
    {
      "title": "Davos",
      "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "FTP",
        "Other",
        "Tools"
      ],
      "name": "davos",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/linuxserver/davos\" target=\"_blank\">https://github.com/linuxserver/davos</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-davos\" target=\"_blank\">https://docs.linuxserver.io/images/docker-davos</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/davos.png",
      "image": "linuxserver/davos:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "7136:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Davos",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 64
    },
    {
      "title": "Ddclient",
      "description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Network",
        "DNS"
      ],
      "name": "Ddclient",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/ddclient/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
      "image": "linuxserver/ddclient:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/ddclient/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 65
    },
    {
      "title": "DeeMix",
      "description": "Deemix is a deezer downloader built from the ashes of Deezloader Remix.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Music"
      ],
      "name": "deemix",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://deemix.app/\" target=\"_blank\">https://deemix.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://gitlab.com/Bockiii/deemix-docker\" target=\"_blank\">https://gitlab.com/Bockiii/deemix-docker</a><br><br><br>Deemix may take a few minutes to install. Be sure to check the logs for details. Refer to <a href='https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken'>this page</a> for userToken details.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/deemix.png",
      "image": "registry.gitlab.com/bockiii/deemix-docker:latest",
      "ports": [
        "9666:6595/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/DeeMix",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 66
    },
    {
      "title": "Deluge",
      "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "deluge",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.deluge-torrent.org/\" target=\"_blank\">https://www.deluge-torrent.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-deluge\" target=\"_blank\">https://docs.linuxserver.io/images/docker-deluge</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=IWj1-j2QWvo target=\"_blank\">Novaspirit Tech - Route Docker Traffic Through VPN Container</a><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/deluge-icon.png",
      "image": "linuxserver/deluge:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "022",
          "label": "UMASK",
          "name": "UMASK"
        }
      ],
      "ports": [
        "6881:6881/tcp",
        "8112:8112/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Deluge",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 67
    },
    {
      "title": "Digikam",
      "description": "[digiKam](https://www.digikam.org/): Professional Photo Management with the Power of Open Source",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Photos"
      ],
      "name": "Digikam",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/digikam/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
      "image": "linuxserver/digikam:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/` [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/digikam/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 68
    },
    {
      "title": "Diskover",
      "description": "[Diskover](https://github.com/diskoverdata/diskover-community) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Storage",
        "Monitoring"
      ],
      "name": "Diskover",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/diskover/config<br>mkdir -p /srv/lsio/diskover/data</p>",
      "logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
      "image": "linuxserver/diskover:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "ES_HOST",
          "label": "ES_HOST",
          "default": "elasticsearch",
          "description": "ElasticSearch host (optional)"
        },
        {
          "name": "ES_PORT",
          "label": "ES_PORT",
          "default": "9200",
          "description": "ElasticSearch port (optional)"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/diskover/config"
        },
        {
          "container": "/data",
          "bind": "/srv/lsio/diskover/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 69
    },
    {
      "title": "Dokku",
      "description": "Dokku setup as a container",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Paas"
      ],
      "name": "Dokku",
      "note": "",
      "image": "dokku/dokku",
      "env": [
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "default": "/var/lib/dokku/home/dokku",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
        }
      ],
      "ports": [
        "22/tcp",
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "container": "/mnt/dokku",
          "bind": "/var/lib/dokku"
        },
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "id": 70
    },
    {
      "title": "Dokuwiki",
      "description": "[Dokuwiki](https://www.dokuwiki.org/dokuwiki/) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Content Management"
      ],
      "name": "Dokuwiki",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/dokuwiki/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
      "image": "linuxserver/dokuwiki:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/dokuwiki/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 71
    },
    {
      "title": "Dolphin",
      "description": "[Dolphin Emulator](https://dolphin-emu.org/) lets you play GameCube and Wii games with various graphical enhancements and other features are available to improve your game experience.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Dolphin",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/dolphin/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dolphin-logo.png",
      "image": "linuxserver/dolphin:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/dolphin/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 72
    },
    {
      "title": "Domoticz",
      "description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "HomeAutomation",
        "Management"
      ],
      "name": "domoticz",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://domoticz.com/\" target=\"_blank\">https://domoticz.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-domoticz\" target=\"_blank\">https://docs.linuxserver.io/images/docker-domoticz</a><br><br><br>",
      "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
      "image": "linuxserver/domoticz:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "1443:1443/tcp",
        "6144:6144/tcp",
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Domoticz",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 73
    },
    {
      "title": "Doplarr",
      "description": "[Doplarr](https://github.com/kiranshila/Doplarr) is an *arr request bot for Discord.'",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media Requesters"
      ],
      "name": "Doplarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/doplarr/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png",
      "image": "linuxserver/doplarr:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DISCORD__TOKEN",
          "label": "DISCORD__TOKEN",
          "default": "",
          "description": "Specify your discord bot token."
        },
        {
          "name": "OVERSEERR__API",
          "label": "OVERSEERR__API",
          "default": "",
          "description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr."
        },
        {
          "name": "OVERSEERR__URL",
          "label": "OVERSEERR__URL",
          "default": "http://localhost:5055",
          "description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr."
        },
        {
          "name": "RADARR__API",
          "label": "RADARR__API",
          "default": "",
          "description": "Specify your Radarr API key. Leave blank if using Overseerr."
        },
        {
          "name": "RADARR__URL",
          "label": "RADARR__URL",
          "default": "http://localhost:7878",
          "description": "Specify your Radarr URL. Leave blank if using Overseerr."
        },
        {
          "name": "SONARR__API",
          "label": "SONARR__API",
          "default": "",
          "description": "Specify your Sonarr API key. Leave blank if using Overseerr."
        },
        {
          "name": "SONARR__URL",
          "label": "SONARR__URL",
          "default": "http://localhost:8989",
          "description": "Specify your Sonarr URL. Leave blank if using Overseerr."
        },
        {
          "name": "DISCORD__MAX_RESULTS",
          "label": "DISCORD__MAX_RESULTS",
          "default": "25",
          "description": "Sets the maximum size of the search results selection [OPTIONAL]"
        },
        {
          "name": "DISCORD__REQUESTED_MSG_STYLE",
          "label": "DISCORD__REQUESTED_MSG_STYLE",
          "default": ":plain",
          "description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none` [OPTIONAL]"
        },
        {
          "name": "SONARR__QUALITY_PROFILE",
          "label": "SONARR__QUALITY_PROFILE",
          "default": "",
          "description": "The name of the quality profile to use by default for Sonarr [OPTIONAL]"
        },
        {
          "name": "RADARR__QUALITY_PROFILE",
          "label": "RADARR__QUALITY_PROFILE",
          "default": "",
          "description": "The name of the quality profile to use by default for Radarr [OPTIONAL]"
        },
        {
          "name": "SONARR__ROOTFOLDER",
          "label": "SONARR__ROOTFOLDER",
          "default": "",
          "description": "The root folder to use by default for Sonarr [OPTIONAL]"
        },
        {
          "name": "RADARR__ROOTFOLDER",
          "label": "RADARR__ROOTFOLDER",
          "default": "",
          "description": "The root folder to use by default for Radarr [OPTIONAL]"
        },
        {
          "name": "SONARR__LANGUAGE_PROFILE",
          "label": "SONARR__LANGUAGE_PROFILE",
          "default": "",
          "description": "The name of the language profile to use by default for Sonarr [OPTIONAL]"
        },
        {
          "name": "OVERSEERR__DEFAULT_ID",
          "label": "OVERSEERR__DEFAULT_ID",
          "default": "",
          "description": "The Overseerr user id to use by default if there is no associated discord account for the requester [OPTIONAL]"
        },
        {
          "name": "PARTIAL_SEASONS",
          "label": "PARTIAL_SEASONS",
          "default": "true",
          "description": "Sets whether users can request partial seasons. [OPTIONAL]"
        },
        {
          "name": "LOG_LEVEL",
          "label": "LOG_LEVEL",
          "default": ":info",
          "description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report` [OPTIONAL]"
        },
        {
          "name": "JAVA_OPTS",
          "label": "JAVA_OPTS",
          "default": "",
          "description": "For passing additional java options. [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/doplarr/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 74
    },
    {
      "title": "doublecommander",
      "description": "Double Commander",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Files",
        "Management"
      ],
      "name": "doublecommander",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/doublecommander.png",
      "image": "lscr.io/linuxserver/doublecommander:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "11500:3000/tcp",
        "11502:3001/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/doublecommander",
          "container": "/config"
        }
      ],
      "id": 75
    },
    {
      "title": "Dozzle",
      "description": "Dozzle is a real-time log viewer for docker containers.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "dozzle",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dozzle.dev/\" target=\"_blank\">https://dozzle.dev/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/amir20/dozzle\" target=\"_blank\">https://github.com/amir20/dozzle</a><br><br><br>View logs for docker containers.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dozzle.png",
      "image": "amir20/dozzle:latest",
      "ports": [
        "8888:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 76
    },
    {
      "title": "Dradis",
      "description": "Dradis Framework: Collaboration and reporting for IT Security teams http://dradisframework.org",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Security"
      ],
      "name": "dradis",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dradisframework.com/\" target=\"_blank\">https://dradisframework.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/raesene/dockerized-security-tools\" target=\"_blank\">https://github.com/raesene/dockerized-security-tools</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dradis-logo.png",
      "image": "raesene/dradis:latest",
      "ports": [
        "3100:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "id": 77
    },
    {
      "title": "Droid Docker VNC",
      "description": "Android in Docker! Run KVM Android x86 in Docker!",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "dock-droid-vnc",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/sickcodes/dock-droid\" target=\"_blank\">https://hub.docker.com/r/sickcodes/dock-droid</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/sickcodes/dock-droid\" target=\"_blank\">https://github.com/sickcodes/dock-droid</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=GTtdTksS6L0 target=\"_blank\">Novaspirit Tech - Run Android In Docker with this Container!</a><br><br>You will need QEMU and some other dependencies on your host:<br><b>sudo apt install qemu qemu-kvm libvirt-clients libvirt-daemon-system bridge-utils virt-manager</b><br><br>Then, enable libvirt and load the KVM kernel module:<br><b>sudo systemctl enable --now libvirtd<br>sudo systemctl enable --now virtlogd<br><br>sudo modprobe kvm<<br><br>echo 1 | sudo tee /sys/module/kvm/parameters/ignore_msrs</b><br><br>If you enable the password in the QEMU console, type change vnc password user<br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dock-droid.png",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted/",
        "stackfile": "/stack/dock-droid.yml"
      },
      "id": 78
    },
    {
      "title": "Droppy",
      "description": "Droppy is a self-hosted file storage server",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Networkweb",
        "Networkother"
      ],
      "name": "droppy",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/filebrowser-icon.png",
      "image": "silverwind/droppy:latest",
      "env": [
        {
          "name": "GID",
          "label": "GID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "UID",
          "label": "UID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "ports": [
        "8989/tcp"
      ],
      "volumes": [
        {
          "container": "/files/tvshows",
          "bind": "/media/storage/tvshows"
        },
        {
          "container": "/files/movies",
          "bind": "/media/storage/movies"
        },
        {
          "container": "/files/music",
          "bind": "/media/storage/music"
        },
        {
          "container": "/files/photos",
          "bind": "/media/storage/photos"
        },
        {
          "container": "/files/ebooks",
          "bind": "/media/storage/ebooks"
        },
        {
          "container": "/files/documents",
          "bind": "/media/storage/documents"
        },
        {
          "container": "/files/software",
          "bind": "/media/storage/software"
        },
        {
          "container": "/files/downloads",
          "bind": "/media/storage/downloads"
        },
        {
          "container": "/files/blackhole",
          "bind": "/media/temp/blackhole"
        },
        {
          "container": "/files/processing",
          "bind": "/media/temp/processing"
        },
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/droppy"
        }
      ],
      "id": 79
    },
    {
      "title": "Drupal",
      "description": "Drupal CMS.  Make sure you run the install script under tools before installing.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "CMD",
        "Web",
        "Tools"
      ],
      "name": "drupal",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.drupal.org/\" target=\"_blank\">https://www.drupal.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.drupal.org/docs/develop/local-server-setup/docker-development-environments/docker-with-solr-cloud-integration/docker-configuration\" target=\"_blank\">https://www.drupal.org/docs/develop/local-server-setup/docker-development-environments/docker-with-solr-cloud-integration/docker-configuration</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_drupal.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_drupal.sh | bash</h3><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/drupal.png",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted/",
        "stackfile": "/stack/drupal.yml"
      },
      "id": 80
    },
    {
      "title": "Duck DNS",
      "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "DNS",
        "Tools"
      ],
      "name": "duckdns",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.duckdns.org/\" target=\"_blank\">https://www.duckdns.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-duckdns\" target=\"_blank\">https://docs.linuxserver.io/images/docker-duckdns</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/duckdns.png",
      "image": "linuxserver/duckdns:latest",
      "env": [
        {
          "default": "",
          "label": "SUBDOMAINS (Comma Separated List)",
          "name": "SUBDOMAINS"
        },
        {
          "default": "",
          "label": "TOKEN",
          "name": "TOKEN"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 81
    },
    {
      "title": "Duckstation",
      "description": "[DuckStation](https://duckstation.org/) is a PS1 Emulator aiming for the best accuracy and game support.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Duckstation",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/duckstation/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckstation-logo.png",
      "image": "linuxserver/duckstation:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/duckstation/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 82
    },
    {
      "title": "Duplicacy",
      "description": "Duplicacy backs up your files to many cloud storages with client-side encryption and the highest level of deduplication",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Utilitybackup"
      ],
      "name": "duplicacy",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/duplicacy-icon.png",
      "image": "mediadepot/duplicacy:latest",
      "env": [
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "ports": [
        "3875/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/duplicacy/config"
        },
        {
          "container": "/logs",
          "bind": "/opt/mediadepot/apps/duplicacy/logs"
        },
        {
          "container": "/cache",
          "bind": "/opt/mediadepot/apps/duplicacy/cache"
        },
        {
          "container": "/source/apps",
          "bind": "/opt/mediadepot/apps/"
        },
        {
          "container": "/source/storage",
          "bind": "/media/storage/"
        }
      ],
      "id": 83
    },
    {
      "title": "Duplicati",
      "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Productivity",
        "Tools"
      ],
      "name": "duplicati",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.duplicati.com/\" target=\"_blank\">https://www.duplicati.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-duplicati\" target=\"_blank\">https://docs.linuxserver.io/images/docker-duplicati</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/duplicati-icon.png",
      "image": "linuxserver/duplicati:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8200:8200/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Duplicati",
          "container": "/config"
        },
        {
          "container": "/tmp"
        },
        {
          "container": "/backups"
        },
        {
          "container": "/source"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 84
    },
    {
      "title": "Eclipse Mosquitto MQTT",
      "description": "Eclipse Mosquitto is an open source message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1. Mosquitto is lightweight and is suitable for use on all devices from low power single board computers to full servers.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "eclipse-mosquitto",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_mosquitto.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_mosquitto.sh | bash</h3><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/eclipse-mosquitto.png",
      "image": "eclipse-mosquitto:latest",
      "ports": [
        "1883:1883/tcp",
        "9001:9001/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/config",
          "container": "/mosquitto/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/data",
          "container": "/mosquitto/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/log",
          "container": "/mosquitto/log"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 85
    },
    {
      "title": "EdgeConnector 840D",
      "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "EdgeConnector 840D",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-840d",
      "ports": [
        "443/tcp",
        "8099/tcp",
        "4897/tcp"
      ],
      "id": 86
    },
    {
      "title": "EdgeConnector Aggregator",
      "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "EdgeConnector Aggregator",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeaggregator",
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ],
      "ports": [
        "443/tcp",
        "8099/tcp",
        "4897/tcp"
      ],
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/mqtt"
        }
      ],
      "id": 87
    },
    {
      "title": "EdgeConnector FANUC CNC",
      "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "EdgeConnector FANUC CNC",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-fanuc-cnc",
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ],
      "ports": [
        "443/tcp",
        "8099/tcp",
        "4897/tcp"
      ],
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/mqtt"
        }
      ],
      "id": 88
    },
    {
      "title": "EdgeConnector Modbus",
      "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "EdgeConnector Modbus",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-modbus:latest",
      "ports": [
        "443/tcp",
        "8099/tcp",
        "4897/tcp"
      ],
      "id": 89
    },
    {
      "title": "EdgeConnector Siemens",
      "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "EdgeConnector Siemens",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-siemens",
      "ports": [
        "443/tcp",
        "8099/tcp",
        "4897/tcp"
      ],
      "id": 90
    },
    {
      "title": "Elasticsearch",
      "description": "Open-source search and analytics engine",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "Elasticsearch",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
      "image": "docker.elastic.co/elasticsearch/elasticsearch:7.15.1",
      "ports": [
        "9200/tcp",
        "9300/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/share/elasticsearch/data"
        }
      ],
      "id": 91
    },
    {
      "title": "Emby",
      "description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "name": "emby",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://emby.media/\" target=\"_blank\">https://emby.media/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-emby\" target=\"_blank\">https://docs.linuxserver.io/images/docker-emby</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/emby.png",
      "image": "linuxserver/emby:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Emby",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/data/tvshows"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/data/movies"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 92
    },
    {
      "title": "EmbyStat",
      "description": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "embystat",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/mregni/EmbyStat\" target=\"_blank\">https://github.com/mregni/EmbyStat</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-embystat\" target=\"_blank\">https://docs.linuxserver.io/images/docker-embystat</a><br><br><br>Access the ui at your-ip:6555. Follow the setup wizard on initial install. Then configure the required services.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/embystat.png",
      "image": "linuxserver/embystat:latest",
      "ports": [
        "6555:6555/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/EmbyStat",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 93
    },
    {
      "title": "EmulatorJS",
      "description": "In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Games"
      ],
      "name": "EmulatorJS",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/linuxserver/emulatorjs\" target=\"_blank\">https://hub.docker.com/r/linuxserver/emulatorjs</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/EmulatorJS/EmulatorJS\" target=\"_blank\">https://github.com/EmulatorJS/EmulatorJS</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/EmulatorJS/EmulatorJS/main/docs/Logo-light.png",
      "image": "lscr.io/linuxserver/emulatorjs:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "3003:3000/tcp",
        "3008:80/tcp",
        "4001:4001/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/emulatorjs",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads/Roms",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 94
    },
    {
      "title": "Fail2ban",
      "description": "[Fail2ban](http://www.fail2ban.org/) is a daemon to ban hosts that cause multiple authentication errors.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Network",
        "Security"
      ],
      "name": "Fail2ban",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/fail2ban/config<br>mkdir -p /srv/lsio/fail2ban/var/log:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/airsonic:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/apache2:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/authelia:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/emby:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/filebrowser:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/homeassistant:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/lighttpd:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/nextcloud:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/nginx:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/nzbget:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/overseerr:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/prowlarr:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/radarr:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/sabnzbd:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/sonarr:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/unificontroller:ro<br>mkdir -p /srv/lsio/fail2ban/remotelogs/vaultwarden:ro</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/fail2ban-logo.png",
      "image": "linuxserver/fail2ban:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "VERBOSITY",
          "label": "VERBOSITY",
          "default": "-vv",
          "description": "Set the container log verbosity. Valid options are -v, -vv, -vvv, -vvvv, or leaving the value blank or not setting the variable. [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/fail2ban/config"
        },
        {
          "container": "/var/log:ro",
          "bind": "/srv/lsio/fail2ban/var/log:ro"
        },
        {
          "container": "/remotelogs/airsonic:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/airsonic:ro"
        },
        {
          "container": "/remotelogs/apache2:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/apache2:ro"
        },
        {
          "container": "/remotelogs/authelia:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/authelia:ro"
        },
        {
          "container": "/remotelogs/emby:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/emby:ro"
        },
        {
          "container": "/remotelogs/filebrowser:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/filebrowser:ro"
        },
        {
          "container": "/remotelogs/homeassistant:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/homeassistant:ro"
        },
        {
          "container": "/remotelogs/lighttpd:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/lighttpd:ro"
        },
        {
          "container": "/remotelogs/nextcloud:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/nextcloud:ro"
        },
        {
          "container": "/remotelogs/nginx:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/nginx:ro"
        },
        {
          "container": "/remotelogs/nzbget:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/nzbget:ro"
        },
        {
          "container": "/remotelogs/overseerr:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/overseerr:ro"
        },
        {
          "container": "/remotelogs/prowlarr:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/prowlarr:ro"
        },
        {
          "container": "/remotelogs/radarr:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/radarr:ro"
        },
        {
          "container": "/remotelogs/sabnzbd:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/sabnzbd:ro"
        },
        {
          "container": "/remotelogs/sonarr:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/sonarr:ro"
        },
        {
          "container": "/remotelogs/unificontroller:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/unificontroller:ro"
        },
        {
          "container": "/remotelogs/vaultwarden:ro",
          "bind": "/srv/lsio/fail2ban/remotelogs/vaultwarden:ro"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 95
    },
    {
      "title": "Faster-whisper",
      "description": "[Faster-whisper](https://github.com/SYSTRAN/faster-whisper) is a reimplementation of OpenAI's Whisper model using CTranslate2, which is a fast inference engine for Transformer models. This container provides a Wyoming protocol server for faster-whisper.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Machine Learning"
      ],
      "name": "Faster-whisper",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/faster-whisper/config</p>",
      "image": "linuxserver/faster-whisper:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "WHISPER_MODEL",
          "label": "WHISPER_MODEL",
          "default": "tiny-int8",
          "description": "Whisper model that will be used for transcription. From [here](https://github.com/SYSTRAN/faster-whisper/blob/master/faster_whisper/utils.py#L12-L31), all with `-int8` compressed variants"
        },
        {
          "name": "WHISPER_BEAM",
          "label": "WHISPER_BEAM",
          "default": "1",
          "description": "Number of candidates to consider simultaneously during transcription. [OPTIONAL]"
        },
        {
          "name": "WHISPER_LANG",
          "label": "WHISPER_LANG",
          "default": "en",
          "description": "Language that you will speak to the add-on. [OPTIONAL]"
        }
      ],
      "ports": [
        "10300:10300/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/faster-whisper/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 96
    },
    {
      "title": "FDO",
      "description": "FDO",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "FDO",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/fdo/docker-stack.yml"
      },
      "id": 97
    },
    {
      "title": "Feed2toot",
      "description": "[Feed2toot](https://gitlab.com/chaica/feed2toot) automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "RSS",
        "Social"
      ],
      "name": "Feed2toot",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/feed2toot/config</p>",
      "image": "linuxserver/feed2toot:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "FEED_LIMIT",
          "label": "FEED_LIMIT",
          "default": "5",
          "description": "Limit number of RSS entries published at each execution. [OPTIONAL]"
        }
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/feed2toot/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 98
    },
    {
      "title": "Ferdium",
      "description": "[Ferdium](https://ferdium.org/) is a desktop app that helps you organize how you use your favourite apps by combining them into one application.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Chat",
        "Social"
      ],
      "name": "Ferdium",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/ferdium/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ferdium-logo.png",
      "image": "linuxserver/ferdium:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/ferdium/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 99
    },
    {
      "title": "Ffmpeg",
      "description": "# This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media Tools"
      ],
      "name": "Ffmpeg",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/ffmpeg/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ffmpeg.png",
      "image": "linuxserver/ffmpeg:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/ffmpeg/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 100
    },
    {
      "title": "FileBrowser",
      "description": "Web File Browser which can be used as a middleware or standalone app.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "filebrowser",
      "note": "The default user and password is admin/admin.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/filebrowser.png",
      "image": "80x86/filebrowser:latest",
      "ports": [
        "8082:8082/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/FileBrowser",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config",
          "container": "/myfiles"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 101
    },
    {
      "title": "FileBrowser latest",
      "description": "Web File Browser which can be used as a middleware or standalone app.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "filebrowser-latest",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://filebrowser.org/\" target=\"_blank\">https://filebrowser.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://filebrowser.org/installation#docker\" target=\"_blank\">https://filebrowser.org/installation#docker</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4 target=\"_blank\">Novaspirit Tech - Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>The default user and password is admin/admin.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filebrowser.png",
      "image": "filebrowser/filebrowser:latest",
      "ports": [
        "8082:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Downloads",
          "container": "/srv"
        },
        {
          "bind": "/portainer/Files/AppData/Config/filebrowser/filebrowser.db",
          "container": "/database/filebrowser.db"
        },
        {
          "bind": "/portainer/Files/AppData/Config/filebrowser/settings.json",
          "container": "/config/settings.json"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 102
    },
    {
      "title": "FileBrowser S6",
      "description": "[arm][s6-version] Web File Browser which can be used as a middleware or standalone app.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "filebrowser",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://filebrowser.org/\" target=\"_blank\">https://filebrowser.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://filebrowser.org/installation#docker\" target=\"_blank\">https://filebrowser.org/installation#docker</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4 target=\"_blank\">Novaspirit Tech - Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>The default user and password is admin/admin.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filebrowser.png",
      "image": "filebrowser/filebrowser:s6",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8082:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Downloads",
          "container": "/srv"
        },
        {
          "bind": "/portainer/Files/AppData/Config/filebrowser/filebrowser.db",
          "container": "/database/filebrowser.db"
        },
        {
          "bind": "/portainer/Files/AppData/Config/filebrowser/settings.json",
          "container": "/config/settings.json"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 103
    },
    {
      "title": "Filerun",
      "description": "access your files anywhere through self-hosted secure cloud storage, file backup and sharing for your photos, videos, files and more.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents",
        "Networkother",
        "Tools"
      ],
      "name": "filerun",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/filerun-logo.png",
      "repository": {
        "url": "https://github.com/mediadepot/templates",
        "stackfile": "/stacks/filerun/docker-compose.yml"
      },
      "id": 104
    },
    {
      "title": "Filezilla",
      "description": "FIleZilla Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "File hosting"
      ],
      "name": "Filezilla",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/linuxserver/filezilla\" target=\"_blank\">https://hub.docker.com/r/linuxserver/filezilla</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/linuxserver/filezilla\" target=\"_blank\">https://hub.docker.com/r/linuxserver/filezilla</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filezilla.png",
      "image": "lscr.io/linuxserver/filezilla:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "Time Zone",
          "name": "TZ"
        }
      ],
      "ports": [
        "4048:3000/tcp",
        "4049:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/filezilla",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 105
    },
    {
      "title": "Firefox",
      "description": "Firefox in docker",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "browser"
      ],
      "name": "Firefox",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/linuxserver/firefox\" target=\"_blank\">https://hub.docker.com/r/linuxserver/firefox</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/firefox.png",
      "image": "linuxserver/firefox:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "4044:3000/tcp",
        "4045:3001/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/firefox",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 106
    },
    {
      "title": "Flame",
      "description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Flame",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/flame\" target=\"_blank\">https://github.com/pawelmalak/flame</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/flame#with-docker-recommended\" target=\"_blank\">https://github.com/pawelmalak/flame#with-docker-recommended</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/flame.png",
      "image": "pawelmalak/flame:multiarch",
      "env": [
        {
          "default": "",
          "label": "Flame Password",
          "name": "PASSWORD"
        }
      ],
      "ports": [
        "5005:5005/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Flame/data",
          "container": "/app/data"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 107
    },
    {
      "title": "FlareSolverr",
      "description": "FlareSolverr is a proxy server to bypass Cloudflare and DDoS-GUARD protection.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "FlareSolverr",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Docker Documentation: </b><a href=\"https://github.com/FlareSolverr/FlareSolverr#installation\" target=\"_blank\">https://github.com/FlareSolverr/FlareSolverr#installation</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/FlareSolverr/FlareSolverr/c48d342b9cfb65d7696b96e9867fcff0ae87a0e2/resources/flaresolverr_logo.svg",
      "image": "ghcr.io/flaresolverr/flaresolverr:latest",
      "env": [
        {
          "default": "info",
          "label": "LOG_LEVEL",
          "name": "LOG_LEVEL"
        },
        {
          "default": "false",
          "label": "LOG_HTML",
          "name": "LOG_HTML"
        },
        {
          "default": "none",
          "label": "CAPTCHA_SOLVER",
          "name": "CAPTCHA_SOLVER"
        },
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "8191:8191/tcp"
      ],
      "restart_policy": "unless-stopped",
      "id": 108
    },
    {
      "title": "flatnotes",
      "description": "A distraction-free, database-less note taking app that puts your content first.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "flatnotes",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Dullage/flatnotes\" target=\"_blank\">https://github.com/Dullage/flatnotes</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/dullage/flatnotes\" target=\"_blank\">https://hub.docker.com/r/dullage/flatnotes</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_flatnotes.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_flatnotes.sh | bash</h3><br><br>",
      "logo": "https://raw.githubusercontent.com/spandan13/pi-hosted/master/images/flatnotes.png",
      "image": "dullage/flatnotes:latest",
      "env": [
        {
          "default": "password",
          "label": "FLATNOTES_AUTH_TYPE",
          "name": "FLATNOTES_AUTH_TYPE"
        },
        {
          "default": "admin",
          "label": "FLATNOTES_USERNAME",
          "name": "FLATNOTES_USERNAME"
        },
        {
          "default": "changeme",
          "label": "FLATNOTES_PASSWORD",
          "name": "FLATNOTES_PASSWORD"
        },
        {
          "default": "aLongRandomSeriesOfCharacters",
          "label": "FLATNOTES_SECRET_KEY",
          "name": "FLATNOTES_SECRET_KEY"
        }
      ],
      "ports": [
        "8715:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/flatnotes/data",
          "container": "/app/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 109
    },
    {
      "title": "Flexget",
      "description": "[Flexget](http://flexget.com/) is a multipurpose automation tool for all of your media.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "Flexget",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/flexget/config<br>mkdir -p /srv/lsio/flexget/data</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/flexget-banner.png",
      "image": "linuxserver/flexget:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "FG_LOG_LEVEL",
          "label": "FG_LOG_LEVEL",
          "default": "info",
          "description": "Set the FlexGet logging level."
        },
        {
          "name": "FG_LOG_FILE",
          "label": "FG_LOG_FILE",
          "default": "/config/flexget.log",
          "description": "Set the FlexGet log file location."
        },
        {
          "name": "FG_CONFIG_FILE",
          "label": "FG_CONFIG_FILE",
          "default": "/config/.flexget/config.yml",
          "description": "Set the FlexGet config file location."
        },
        {
          "name": "FG_WEBUI_PASSWORD",
          "label": "FG_WEBUI_PASSWORD",
          "default": "info",
          "description": "Set the FlexGet webui password. Pay attention to Bash/YAML reserved characters. [OPTIONAL]"
        }
      ],
      "ports": [
        "5050:5050/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/flexget/config"
        },
        {
          "container": "/data",
          "bind": "/srv/lsio/flexget/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 110
    },
    {
      "title": "Floating License Server",
      "description": "License Server for Softing edgeConnector products",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "Floating License Server",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/floating-license-server:latest",
      "ports": [
        "6200/tcp"
      ],
      "volumes": [
        {
          "container": "/licsrv/licenses"
        }
      ],
      "id": 111
    },
    {
      "title": "Flycast",
      "description": "[Flycast](https://github.com/flyinghead/flycast) is a multi-platform Sega Dreamcast, Naomi, Naomi 2, and Atomiswave emulator derived from reicast.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Flycast",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/flycast/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/flycast-logo.png",
      "image": "linuxserver/flycast:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/flycast/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 112
    },
    {
      "title": "FoldingAtHome",
      "description": "Crunch numbers for scientists. just click deploy the stack, IMPORTANT!!! make sure you use firefox to open the site.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "tools"
      ],
      "name": "FoldingAtHome",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://foldingathome.org/?lng=en\" target=\"_blank\">https://foldingathome.org/?lng=en</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/folding-at-home-logo.png",
      "image": "lscr.io/linuxserver/foldingathome:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "7396:7396/tcp",
        "36330:36300/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/FoldingAthome/config",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/FoldingAtHome/data",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 113
    },
    {
      "title": "FoundryVTT Server",
      "description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Games"
      ],
      "name": "FoundryVTT",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://foundryvtt.com/\" target=\"_blank\">https://foundryvtt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/felddy/foundryvtt\" target=\"_blank\">https://hub.docker.com/r/felddy/foundryvtt</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/foundrylogo.png",
      "image": "felddy/foundryvtt:release",
      "env": [
        {
          "default": "John",
          "label": "Foundry Account Name",
          "name": "FOUNDRY_USERNAME"
        },
        {
          "default": "password",
          "label": "Foundry Password",
          "name": "FOUNDRY_PASSWORD"
        },
        {
          "default": "changeme",
          "label": "Instance Admin Password",
          "name": "FOUNDRY_ADMIN_KEY"
        },
        {
          "default": "true",
          "label": "CONTAINER_PRESERVE_CONFIG",
          "name": "CONTAINER_PRESERVE_CONFIG"
        }
      ],
      "ports": [
        "30000:30000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/foundryvtt",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 114
    },
    {
      "title": "Freecad",
      "description": "[FreeCAD](https://www.freecad.org/) is a general-purpose parametric 3D computer-aided design (CAD) modeler and a building information modeling (BIM) software application with finite element method (FEM) support.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Modeling"
      ],
      "name": "Freecad",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/freecad/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freecad-logo.png",
      "image": "linuxserver/freecad:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/freecad/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 115
    },
    {
      "title": "FreshRSS",
      "description": "A free, self-hostable rss aggregator…",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "freshrss",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.freshrss.org/\" target=\"_blank\">https://www.freshrss.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/FreshRSS/FreshRSS/tree/edge/Docker\" target=\"_blank\">https://github.com/FreshRSS/FreshRSS/tree/edge/Docker</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/freshrss-icon.png",
      "image": "linuxserver/freshrss:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8132:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/freshrss",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 116
    },
    {
      "title": "Gaps",
      "description": "Gaps searches through your Plex Server or local folders for all movies, then queries for known movies in the same collection.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Networkweb",
        "Networkother"
      ],
      "name": "gaps",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
      "image": "housewrecker/gaps:latest",
      "env": [
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "ports": [
        "8484/tcp"
      ],
      "volumes": [],
      "id": 117
    },
    {
      "title": "Gazee",
      "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web",
        "Books",
        "Tools"
      ],
      "name": "gazee",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/gazee-logo.png",
      "image": "linuxserver/gazee:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Gazee",
          "container": "/config"
        },
        {
          "bind": "/portainer/Comics",
          "container": "/comics"
        },
        {
          "bind": "/portainer/Files/AppData/Gazee",
          "container": "/mylar"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 118
    },
    {
      "title": "Ghost",
      "description": "Ghost is a free and open source blogging platform written in JavaScript and distributed under the MIT License, designed to simplify the process of online publishing for individual bloggers as well as online publications.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "ghost",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/docker-library/docs/tree/master/ghost\" target=\"_blank\">https://github.com/docker-library/docs/tree/master/ghost</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/ghost\" target=\"_blank\">https://hub.docker.com/_/ghost</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/ghost.png",
      "image": "ghost:latest",
      "env": [
        {
          "default": "development",
          "label": "NODE_ENV",
          "name": "NODE_ENV"
        },
        {
          "default": "http://localhost/",
          "label": "url",
          "name": "url"
        }
      ],
      "ports": [
        "2368:2368/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Ghost",
          "container": "/var/lib/ghost/content"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 119
    },
    {
      "title": "Ghostfolio",
      "description": "Ghostfolio is a privacy-first, open source dashboard for your personal finances. Break down your asset allocation, know your net worth and make solid, data-driven investment decisions.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "ghostfolio",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://ghostfol.io/\" target=\"_blank\">https://ghostfol.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ghostfolio/ghostfolio#self-hosting\" target=\"_blank\">https://github.com/ghostfolio/ghostfolio#self-hosting</a><br><br><br>",
      "logo": "https://ghostfol.io/assets/apple-touch-icon.png",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted/",
        "stackfile": "/stack/ghostfolio.yml"
      },
      "id": 120
    },
    {
      "title": "Gimp",
      "description": "[GIMP](https://www.gimp.org/) is a free and open-source raster graphics editor used for image manipulation (retouching) and image editing, free-form drawing, transcoding between different image file formats, and more specialized tasks. It is extensible by means of plugins, and scriptable.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Image Editor"
      ],
      "name": "Gimp",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/gimp/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gimp-logo.png",
      "image": "linuxserver/gimp:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/gimp/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 121
    },
    {
      "title": "Gitea",
      "description": "A painless self-hosted Git service.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "SCM",
        "Tools"
      ],
      "name": "gitea",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gitea.com/\" target=\"_blank\">https://gitea.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.gitea.io/en-us/install-with-docker/\" target=\"_blank\">https://docs.gitea.io/en-us/install-with-docker/</a><br><br><br>More possible Environment Variables: https://docs.gitea.io/en-us/install-with-docker/#managing-deployments-with-environment-variables",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gitea.png",
      "image": "gitea/gitea:latest",
      "env": [
        {
          "default": "1000",
          "label": "USER_UID",
          "name": "USER_UID"
        },
        {
          "default": "1000",
          "label": "USER_GID",
          "name": "USER_GID"
        }
      ],
      "ports": [
        "8124:3000/tcp",
        "222:22/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Gitea",
          "container": "/data"
        },
        {
          "bind": "/etc/timezone",
          "container": "/etc/timezone:ro"
        },
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime:ro"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 122
    },
    {
      "title": "Gitea with Mariadb",
      "description": "Gitea with Mariadb: A painless self-hosted Git service.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "SCM",
        "Tools"
      ],
      "name": "gitea-mysql",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gitea.com/\" target=\"_blank\">https://gitea.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.gitea.io/en-us/install-with-docker/#mysql-database\" target=\"_blank\">https://docs.gitea.io/en-us/install-with-docker/#mysql-database</a><br><br><br>More possible Environment Variables: https://docs.gitea.io/en-us/install-with-docker/#managing-deployments-with-environment-variables",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gitea.png",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted/",
        "stackfile": "/stack/gitea-mariadb.yml"
      },
      "id": 123
    },
    {
      "title": "Github-desktop",
      "description": "[Github Desktop](https://desktop.github.com/) is an open source Electron-based GitHub app. It is written in TypeScript and uses React.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Programming"
      ],
      "name": "Github-desktop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/github-desktop/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/github-desktop-icon.png",
      "image": "linuxserver/github-desktop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/github-desktop/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 124
    },
    {
      "title": "GitLab CE",
      "description": "Open-source end-to-end software development platform",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Development",
        "Projectmanagement"
      ],
      "name": "GitLab CE",
      "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/ee/install/docker.html\" target=\"_blank\">GitLab documentation</a> to get started.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "image": "gitlab/gitlab-ce:latest",
      "ports": [
        "80/tcp",
        "443/tcp",
        "22/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/gitlab"
        },
        {
          "container": "/var/log/gitlab"
        },
        {
          "container": "/var/opt/gitlab"
        }
      ],
      "id": 125
    },
    {
      "title": "Gitqlient",
      "description": "[GitQlient](https://github.com/francescmm/GitQlient) is a multi-platform Git client originally forked from QGit. Nowadays it goes beyond of just a fork and adds a lot of new functionality.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Programming"
      ],
      "name": "Gitqlient",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/gitqlient/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gitqlient-icon.png",
      "image": "linuxserver/gitqlient:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/gitqlient/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 126
    },
    {
      "title": "Go-Socks5-Proxy",
      "description": "Simple socks5 server using go-socks5 with authentication options",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Proxy"
      ],
      "name": "socks5-proxy",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/serjs/go-socks5-proxy\" target=\"_blank\">https://hub.docker.com/r/serjs/go-socks5-proxy</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/serjs/go-socks5-proxy\" target=\"_blank\">https://hub.docker.com/r/serjs/go-socks5-proxy</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=IWj1-j2QWvo target=\"_blank\">Novaspirit Tech - Route Docker Traffic Through VPN Container</a><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/socks5.png",
      "image": "serjs/go-socks5-proxy:latest",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "id": 127
    },
    {
      "title": "Gotify",
      "description": "A simple server for sending and receiving messages",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "gotify",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gotify.net/\" target=\"_blank\">https://gotify.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://gotify.net/docs/install\" target=\"_blank\">https://gotify.net/docs/install</a><br><br><br>ARM7 Image. Documentation is Available <a href='https://gotify.net/docs/index'>here</a>.",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gotify.png",
      "image": "gotify/server-arm64:latest",
      "env": [
        {
          "default": "America/New_York",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "admin",
          "label": "GOTIFY_DEFAULTUSER_NAME",
          "name": "GOTIFY_DEFAULTUSER_NAME"
        },
        {
          "default": "admin123",
          "label": "GOTIFY_DEFAULTUSER_PASS",
          "name": "GOTIFY_DEFAULTUSER_PASS"
        }
      ],
      "ports": [
        "9008:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/gotify",
          "container": "/app/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 128
    },
    {
      "title": "Grafana",
      "description": "Grafana Dashboard anything. Observe everything.  Query, visualize, alert on, and understand your data no matter where it’s stored. With Grafana you can create, explore, and share all of your data through beautiful, flexible dashboards.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Monitor",
        "Tools"
      ],
      "name": "grafana",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://grafana.com/grafana/\" target=\"_blank\">https://grafana.com/grafana/</a><br><b>Official Docker Documentation: </b><a href=\"https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/\" target=\"_blank\">https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_grafana.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_grafana.sh | bash</h3><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/grafana.png",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted",
        "stackfile": "/stack/grafana.yml"
      },
      "id": 129
    },
    {
      "title": "Grav",
      "description": "[Grav](https://github.com/getgrav/grav/) is a Fast, Simple, and Flexible, file-based Web-platform.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Content Management"
      ],
      "name": "Grav",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/grav/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png",
      "image": "linuxserver/grav:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/grav/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 130
    },
    {
      "title": "Graylog",
      "description": "Graylog is a centralized logging solution that allows the user to aggregate and search through logs. It provides a powerful query language, a processing pipeline for data transformation, alerting abilities, and much more.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Management",
        "Monitor",
        "Web",
        "Tools"
      ],
      "name": "graylog",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.graylog.org\" target=\"_blank\">https://www.graylog.org</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.graylog.org/docs/docker\" target=\"_blank\">https://docs.graylog.org/docs/docker</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/graylog_install.md\" target=\"_blank\">graylog_install.md</a></h3><br><br><br>",
      "logo": "https://assets-global.website-files.com/5e9fae47f9a5b161fc3f7024/621813dfcf02a2fcaf04b6f3_gl_logo_horiz.svg",
      "repository": {
        "url": "https://github.com/pi-hosted/pi-hosted",
        "stackfile": "/stack/graylog.yml"
      },
      "id": 131
    },
    {
      "title": "Grocy",
      "description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utulity.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "Finance"
      ],
      "name": "grocy",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://grocy.info/\" target=\"_blank\">https://grocy.info/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-grocy\" target=\"_blank\">https://docs.linuxserver.io/images/docker-grocy</a><br><br><br>",
      "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/grocy_logo.png",
      "image": "linuxserver/grocy:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/New_York",
          "label": "Timezone",
          "name": "TZ"
        }
      ],
      "ports": [
        "9283:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Grocy",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 132
    },
    {
      "title": "Guacamole",
      "description": "A clientless remote desktop gateway.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "guacamole",
      "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/guacamole.png",
      "image": "oznu/guacamole:latest",
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Guacamole",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 133
    },
    {
      "title": "Habridge",
      "description": "[Habridge](https://github.com/bwssytems/ha-bridge/) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as On, Off and brightness commands of the hue protocol. This bridge can control most devices that have a distinct API.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Home Automation"
      ],
      "name": "Habridge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/habridge/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/habridge-logo.png",
      "image": "linuxserver/habridge:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SEC_KEY",
          "label": "SEC_KEY",
          "default": "",
          "description": "Key used to secure communication."
        }
      ],
      "ports": [
        "8080:8080/tcp",
        "50000:50000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/habridge/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 134
    },
    {
      "title": "HandBrake",
      "description": "This project implements a Docker container for HandBrake. The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloader"
      ],
      "name": "HandBrake",
      "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/jlesage/handbrake\" target=\"_blank\">https://hub.docker.com/r/jlesage/handbrake</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/jlesage/docker-handbrake\" target=\"_blank\">https://github.com/jlesage/docker-handbrake</a><br><br><br>",
      "logo": "https://camo.githubusercontent.com/0156e7756fa49886748421553158970ca7600e31559f331b1b4e6dd127103bcd/68747470733a2f2f696d616765732e7765736572762e6e6c2f3f75726c3d7261772e67697468756275736572636f6e74656e742e636f6d2f6a6c65736167652f646f636b65722d74656d706c617465732f6d61737465722f6a6c65736167652f696d616765732f68616e646272616b652d69636f6e2e706e6726773d313130",
      "image": "jlesage/handbrake",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "5800:5800/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/HandBrake",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/storage"
        },
        {
          "bind": "/portainer/Downloads/output",
          "container": "/output"
        },
        {
          "bind": "/portainer/Downloads/watch",
          "container": "/watch"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 135
    },
    {
      "title": "Headphones",
      "description": "Headphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "headphones",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/headphones-icon.png",
      "image": "linuxserver/headphones:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8181:8181/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Headphones",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/Downloads"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 136
    },
    {
      "title": "Healthchecks",
      "description": "Healthchecks is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Networkweb",
        "Networkother",
        "Statusstable"
      ],
      "name": "healthchecks",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/healthchecks-logo.png",
      "image": "linuxserver/healthchecks",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        },
        {
          "name": "SITE_ROOT",
          "label": "SITE_ROOT",
          "default": "healthchecks.depot.lan"
        },
        {
          "name": "SITE_NAME",
          "label": "SITE_NAME",
          "default": "healthchecks"
        },
        {
          "name": "DEFAULT_FROM_EMAIL",
          "label": "DEFAULT_FROM_EMAIL",
          "default": "healthchecks@depot.lan"
        },
        {
          "name": "EMAIL_HOST",
          "label": "EMAIL_HOST",
          "default": ""
        },
        {
          "name": "EMAIL_PORT",
          "label": "EMAIL_PORT",
          "default": ""
        },
        {
          "name": "EMAIL_HOST_USER",
          "label": "EMAIL_HOST_USER",
          "default": ""
        },
        {
          "name": "EMAIL_HOST_PASSWORD",
          "label": "EMAIL_HOST_PASSWORD",
          "default": ""
        },
        {
          "name": "EMAIL_USE_TLS",
          "label": "EMAIL_USE_TLS",
          "default": ""
        }
      ],
      "ports": [
        "8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/healthchecks"
        }
      ],
      "id": 137
    },
    {
      "title": "Hedgedoc",
      "description": "[HedgeDoc](https://hedgedoc.org/) gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Content Management"
      ],
      "name": "Hedgedoc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/hedgedoc/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png",
      "image": "linuxserver/hedgedoc:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "<hostname or ip>",
          "description": "Host address of mariadb database"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "3306",
          "description": "Port to access mariadb database default is 3306"
        },
        {
          "name": "DB_USER",
          "label": "DB_USER",
          "default": "hedgedoc",
          "description": "Database user"
        },
        {
          "name": "DB_PASS",
          "label": "DB_PASS",
          "default": "<secret password>",
          "description": "Database password"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "hedgedoc",
          "description": "Database name"
        },
        {
          "name": "CMD_DOMAIN",
          "label": "CMD_DOMAIN",
          "default": "localhost",
          "description": "The address the gui will be accessed at (ie. `192.168.1.1` or `hedgedoc.domain.com`)."
        },
        {
          "name": "CMD_URL_ADDPORT",
          "label": "CMD_URL_ADDPORT",
          "default": "false",
          "description": "Set to `true` if using a port other than `80` or `443`. [OPTIONAL]"
        },
        {
          "name": "CMD_PROTOCOL_USESSL",
          "label": "CMD_PROTOCOL_USESSL",
          "default": "false",
          "description": "Set to `true` if accessing over https via reverse proxy. [OPTIONAL]"
        },
        {
          "name": "CMD_PORT",
          "label": "CMD_PORT",
          "default": "3000",
          "description": "If you wish to access hedgedoc at a port different than 80, 443 or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change the port mapping accordingly (5000:5000). [OPTIONAL]"
        },
        {
          "name": "CMD_ALLOW_ORIGIN",
          "label": "CMD_ALLOW_ORIGIN",
          "default": "['localhost']",
          "description": "Comma-separated list of allowed hostnames [OPTIONAL]"
        },
        {
          "name": "CMD_DB_DIALECT",
          "label": "CMD_DB_DIALECT",
          "default": "",
          "description": "This variable allows selecting a database engine (if DB_HOST not set up). Available options are: `mariadb`, `mysql`, `postgres`, `sqlite`. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/hedgedoc/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 138
    },
    {
      "title": "Heimdall",
      "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Web",
        "Other"
      ],
      "name": "heimdall",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/heimdall-icon.png",
      "image": "linuxserver/heimdall:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Heimdall",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 139
    },
    {
      "title": "Hishtory-server",
      "description": "[hiSHtory](https://github.com/ddworken/hishtory) is a better shell history. It stores your shell history in context (what directory you ran the command in, whether it succeeded or failed, how long it took, etc). This is all stored locally and end-to-end encrypted for syncing to to all your other computers.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Administration"
      ],
      "name": "Hishtory-server",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/hishtory-server/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hishtory-server-icon.png",
      "image": "linuxserver/hishtory-server:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "HISHTORY_POSTGRES_DB",
          "label": "HISHTORY_POSTGRES_DB",
          "default": "postgresql://${HISHTORY_DB_USER}:${HISHTORY_DB_PASS}@hishtory-db:5432/hishtory?sslmode=disable",
          "description": "Postgres DB [Connection URI](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING). Special characters must be [URL encoded](https://en.wikipedia.org/wiki/URL_encoding). [OPTIONAL]"
        },
        {
          "name": "HISHTORY_SQLITE_DB",
          "label": "HISHTORY_SQLITE_DB",
          "default": "/config/hishtory.db",
          "description": "SQLite database path. Needs to be a mounted volume for persistence. Don't set at the same time as HISHTORY_POSTGRES_DB. [OPTIONAL]"
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/hishtory-server/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 140
    },
    {
      "title": "Homeassistant",
      "description": "[Home Assistant Core](https://www.home-assistant.io/) - Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Home Automation"
      ],
      "name": "Homeassistant",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/homeassistant/config</p>",
      "logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
      "image": "linuxserver/homeassistant:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "8123:8123/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/homeassistant/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 141
    },
    {
      "title": "Homepage",
      "description": "A modern (fully static, fast), secure (fully proxied), highly customizable application dashboard with integrations for more than 25 services and translations for over 15 languages. Easily configured via YAML files (or discovery via docker labels).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Networkweb",
        "Networkother",
        "Statusstable"
      ],
      "name": "homepage",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/homepage.png",
      "image": "ghcr.io/benphelps/homepage:latest",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "ports": [
        "3000/tcp"
      ],
      "volumes": [
        {
          "container": "/app/config",
          "bind": "/opt/mediadepot/apps/homepage"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "id": 142
    },
    {
      "title": "Homer",
      "description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "homer",
      "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/homer.png",
      "image": "b4bz/homer:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8902:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Homer/assets",
          "container": "/www/assets"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Homer",
          "container": "/www/config.yml"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 143
    },
    {
      "title": "HTPC Manager",
      "description": "HTPC Manager, a front end for many htpc related applications. Uses the Hellowlol HTPC Manager fork.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video",
        "Music",
        "Other"
      ],
      "name": "htpcmanager",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/htpcmanager-icon.png",
      "image": "linuxserver/htpcmanager:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8085:8085/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/HTPCmanager",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 144
    },
    {
      "title": "Httpd",
      "description": "Open-source HTTP server",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Webserver"
      ],
      "name": "Httpd",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
      "image": "httpd:latest",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/local/apache2/htdocs/"
        }
      ],
      "id": 145
    },
    {
      "title": "Huginn",
      "description": "Create agents that monitor and act on your behalf.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "huginn",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/huginn.png",
      "image": "huginn/huginn:latest",
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/huginn",
          "container": "/var/lib/mysql"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 146
    },
    {
      "title": "Inkscape",
      "description": "[Inkscape](https://inkscape.org/) is professional quality vector graphics software which runs on Linux, Mac OS X and Windows desktop computers.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Modeling"
      ],
      "name": "Inkscape",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/inkscape/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/inkscape-logo.png",
      "image": "linuxserver/inkscape:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/inkscape/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 147
    },
    {
      "title": "Invoice Ninja",
      "description": "Invoices, Expenses and Tasks built with Laravel and Flutter.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "name": "invoice_ninja",
      "note": "The database user is invoice_ninja and the database is ninja_db. Please generate an app key following the documentation <a href='https://github.com/invoiceninja/dockerfiles'>here</a>. ",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/invoice_ninja.png",
      "repository": {
        "url": "https://github.com/Qballjos/portainer_templates",
        "stackfile": "/Template/Stack/invoice-ninja.yml"
      },
      "id": 148
    },
    {
      "title": "IronFunctions",
      "description": "Open-source serverless computing platform",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Serverless"
      ],
      "name": "IronFunctions",
      "note": "Deploys the IronFunctions API and UI.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/ironfunctions/docker-stack.yml"
      },
      "id": 149
    },
    {
      "title": "Jackett",
      "description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Tools"
      ],
      "name": "jackett",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jacket-icon.png",
      "image": "linuxserver/jackett:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "9117:9117/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Jackett",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 150
    },
    {
      "title": "Jellyfin",
      "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "name": "jellyfin",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jellyfin.png",
      "image": "linuxserver/jellyfin:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Jellyfin",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/data/tvshows"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/data/movies"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 151
    },
    {
      "title": "Jellyseerr",
      "description": "Jellyseer is a free and open source software application for managing requests for your media library.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Jellyseerr",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/jellyseerr.png",
      "image": "fallenbagel/jellyseerr:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "5055:5055/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Jellyseerr",
          "container": "/app/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 152
    },
    {
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Continuousintegration"
      ],
      "name": "Jenkins",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts-jdk11",
      "ports": [
        "8080/tcp",
        "50000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ],
      "id": 153
    },
    {
      "title": "Joomla",
      "description": "Another free and open-source CMS",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cms"
      ],
      "name": "Joomla",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
      "image": "joomla:latest",
      "env": [
        {
          "name": "JOOMLA_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "JOOMLA_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ],
      "id": 154
    },
    {
      "title": "Kali-linux",
      "description": "[Kali-linux](https://github.com/linuxserver/docker-kali-linux) - is an Advanced Penetration Testing Linux distribution used for Penetration Testing, Ethical Hacking and network security assessments. KALI LINUX ™ is a trademark of OffSec.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Remote Desktop",
        "Security"
      ],
      "name": "Kali-linux",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/kali-linux/config<br></p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kali-logo.png",
      "image": "linuxserver/kali-linux:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/` [OPTIONAL]"
        },
        {
          "name": "TITLE",
          "label": "TITLE",
          "default": "Kali Linux",
          "description": "String which will be used as page/tab title in the web browser. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/kali-linux/config"
        },
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 155
    },
    {
      "title": "Kasm",
      "description": "[Kasm](https://www.kasmweb.com/?utm_campaign=LinuxServer&utm_source=listing) Workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections. The rendering of the graphical-based containers is powered by the open-source project [KasmVNC](https://www.kasmweb.com/kasmvnc.html?utm_campaign=LinuxServer&utm_source=kasmvnc).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Remote Desktop",
        "Business"
      ],
      "name": "Kasm",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/kasm/opt<br>mkdir -p /srv/lsio/kasm/profiles<br><br></p>",
      "logo": "https://kasm-ci.s3.amazonaws.com/kasm_wide.png",
      "image": "linuxserver/kasm:latest",
      "env": [
        {
          "name": "KASM_PORT",
          "label": "KASM_PORT",
          "default": "443",
          "description": "Specify the port you bind to the outside for Kasm Workspaces."
        },
        {
          "name": "DOCKER_HUB_USERNAME",
          "label": "DOCKER_HUB_USERNAME",
          "default": "USER",
          "description": "Optionally specify a DockerHub Username to pull private images. [OPTIONAL]"
        },
        {
          "name": "DOCKER_HUB_PASSWORD",
          "label": "DOCKER_HUB_PASSWORD",
          "default": "PASS",
          "description": "Optionally specify a DockerHub password to pull private images. [OPTIONAL]"
        },
        {
          "name": "DOCKER_MTU",
          "label": "DOCKER_MTU",
          "default": "1500",
          "description": "Optionally specify the mtu options passed to dockerd. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/opt",
          "bind": "/srv/lsio/kasm/opt"
        },
        {
          "container": "/profiles",
          "bind": "/srv/lsio/kasm/profiles"
        },
        {
          "container": "/dev/input",
          "bind": "/dev/input"
        },
        {
          "container": "/run/udev/data",
          "bind": "/run/udev/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 156
    },
    {
      "title": "Kavita",
      "description": "[Kavita](https://github.com/Kareadita/Kavita) is a fast, feature rich, cross platform reading server. Built with a focus for being a full solution for all your reading needs. Setup your own server and share your reading collection with your friends and family!",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Books"
      ],
      "name": "Kavita",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/kavita/config<br>mkdir -p /srv/lsio/kavita/data</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kavita-logo.png",
      "image": "linuxserver/kavita:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "5000:5000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/kavita/config"
        },
        {
          "container": "/data",
          "bind": "/srv/lsio/kavita/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 157
    },
    {
      "title": "Kdenlive",
      "description": "[Kdenlive](https://kdenlive.org/) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video Editor"
      ],
      "name": "Kdenlive",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/kdenlive/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png",
      "image": "linuxserver/kdenlive:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/` [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/kdenlive/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 158
    },
    {
      "title": "Keepassxc",
      "description": "[KeePassXC](https://keepassxc.org/) is a free and open-source password manager. It started as a community fork of KeePassX (itself a cross-platform port of KeePass).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Password Manager"
      ],
      "name": "Keepassxc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/keepassxc/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/keepassxc-logo.png",
      "image": "linuxserver/keepassxc:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/keepassxc/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 159
    },
    {
      "title": "Kicad",
      "description": "[KiCad](https://www.kicad.org/) - A Cross Platform and Open Source Electronics Design Automation Suite.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Modeling"
      ],
      "name": "Kicad",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/kicad/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kicad-logo.png",
      "image": "linuxserver/kicad:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/kicad/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 160
    },
    {
      "title": "Kimai",
      "description": "[Kimai](https://kimai.org/) is a professional grade time-tracking application, free and open-source. It handles use-cases of freelancers as well as companies with dozens or hundreds of users. Kimai was build to track your project times and ships with many advanced features, including but not limited to: JSON API, invoicing, data exports, multi-timer and punch-in punch-out mode, tagging, multi-user - multi-timezones - multi-language ([over 30 translations existing](https://hosted.weblate.org/projects/kimai/)!), authentication via SAML/LDAP/Database, two-factor authentication (2FA) with TOTP, customizable role and team permissions, responsive design, user/customer/project specific rates, advanced search & filtering, money and time budgets, advanced reporting, support for [plugins](https://www.kimai.org/store/) and so much more.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Finance",
        "Business"
      ],
      "name": "Kimai",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/kimai/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kimai-logo.png",
      "image": "linuxserver/kimai:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DATABASE_URL",
          "label": "DATABASE_URL",
          "default": "mysql://your_db_user:your_db_pass@your_db_host:3306/your_db_name?charset=your_db_charset&serverVersion=your_db_version",
          "description": "Configure your database connection, see Application Setup instructions."
        },
        {
          "name": "TRUSTED_PROXIES",
          "label": "TRUSTED_PROXIES",
          "default": "127.0.0.1/32",
          "description": "If behind a reverse proxy set this to its IP or network CIDR so that Kimai trusts its headers. [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/kimai/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 161
    },
    {
      "title": "Klaxon",
      "description": "Klaxon is a free, quick to set up and easy to use robot that checks websites regularly so you don't have to.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents",
        "Networkother",
        "Tools"
      ],
      "name": "klaxon",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/klaxon-logo.png",
      "repository": {
        "url": "https://github.com/mediadepot/templates",
        "stackfile": "/stacks/klaxon/docker-compose.yml"
      },
      "id": 162
    },
    {
      "title": "Kodi Headless",
      "description": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video"
      ],
      "name": "kodi-headless",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/kodi-icon.png",
      "image": "linuxserver/kodi-headless:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8080/tcp",
        "9777/udp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Kodi",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 163
    },
    {
      "title": "Kometa",
      "description": "[Kometa](https://github.com/Kometa-Team/Kometa) is a powerful tool designed to give you complete control over your media libraries. With Kometa, you can take your customization to the next level, with granular control over metadata, collections, overlays, and much more.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media Management"
      ],
      "name": "Kometa",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/kometa/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kometa-banner.png",
      "image": "linuxserver/kometa:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "KOMETA_CONFIG",
          "label": "KOMETA_CONFIG",
          "default": "/config/config.yml",
          "description": "Specify a custom config file to use. [OPTIONAL]"
        },
        {
          "name": "KOMETA_TIME",
          "label": "KOMETA_TIME",
          "default": "03:00",
          "description": "Comma-separated list of times to update each day. Format: `HH:MM`. [OPTIONAL]"
        },
        {
          "name": "KOMETA_RUN",
          "label": "KOMETA_RUN",
          "default": "False",
          "description": "Set to `True` to run without the scheduler. [OPTIONAL]"
        },
        {
          "name": "KOMETA_TEST",
          "label": "KOMETA_TEST",
          "default": "False",
          "description": "Set to `True` to run in debug mode with only collections that have `test: true`. [OPTIONAL]"
        },
        {
          "name": "KOMETA_NO_MISSING",
          "label": "KOMETA_NO_MISSING",
          "default": "False",
          "description": "Set to `True` to run without any of the missing movie/show functions. [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/kometa/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 164
    },
    {
      "title": "Krita",
      "description": "[Krita](https://krita.org/en/) is a professional FREE and open source painting program. It is made by artists that want to see affordable art tools for everyone.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Image Editor"
      ],
      "name": "Krita",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/krita/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/krita-logo.png",
      "image": "linuxserver/krita:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/krita/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 165
    },
    {
      "title": "LazyLibrarian",
      "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Books"
      ],
      "name": "lazylibrarian",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/lazylibrarian-icon.png",
      "image": "linuxserver/lazylibrarian:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "5299:5299/tcp"
      ],
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/downloads"
        },
        {
          "container": "/books"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 166
    },
    {
      "title": "Ldap-auth",
      "description": "[Ldap-auth](https://github.com/nginxinc/nginx-ldap-auth) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Administration",
        "Security"
      ],
      "name": "Ldap-auth",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/ldap-auth/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ldap-auth-logo.png",
      "image": "linuxserver/ldap-auth:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "FERNETKEY",
          "label": "FERNETKEY",
          "default": "",
          "description": "Optionally define a custom valid fernet key (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications) [OPTIONAL]"
        },
        {
          "name": "CERTFILE",
          "label": "CERTFILE",
          "default": "",
          "description": "Optionally point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon [OPTIONAL]"
        },
        {
          "name": "KEYFILE",
          "label": "KEYFILE",
          "default": "",
          "description": "Optionally point this to the private key file, matching the certificate file referred to in CERTFILE [OPTIONAL]"
        }
      ],
      "ports": [
        "8888:8888/tcp",
        "9000:9000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/ldap-auth/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 167
    },
    {
      "title": "Let's Encrypt / SWAG",
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Web"
      ],
      "name": "letsencrypt / SWAG",
      "note": "Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.<ul><li>- Port 443 on the internet side of the router should be forwarded to this container's port 443.</li><li>- If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains can be www,ftp,cloud</li><li>- The container detects changes to url and subdomains, revokes existing certs and generates new ones during start.</li><li>- It also detects changes to the DHLEVEL parameter and replaces the dhparams file.</li><li>- If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file <code>docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;</code>",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/letsencrypt.png",
      "image": "linuxserver/swag:latest",
      "env": [
        {
          "label": "EMAIL",
          "name": "EMAIL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "label": "URL",
          "name": "URL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "label": "SUBDOMAINS",
          "name": "SUBDOMAINS",
          "set": "www,"
        },
        {
          "label": "ONLY_SUBDOMAINS",
          "name": "ONLY_SUBDOMAINS",
          "set": "false"
        },
        {
          "label": "DHLEVEL",
          "name": "DHLEVEL",
          "set": "2048"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "VALIDATION",
          "name": "VALIDATION",
          "set": "http"
        },
        {
          "label": "DNSPLUGIN",
          "name": "DNSPLUGIN",
          "set": "http"
        }
      ],
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/LetsEncrypt",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 168
    },
    {
      "title": "Libreoffice",
      "description": "[LibreOffice](https://www.libreoffice.org/) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents"
      ],
      "name": "Libreoffice",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/libreoffice/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
      "image": "linuxserver/libreoffice:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/libreoffice/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 169
    },
    {
      "title": "LibreSpeed",
      "description": "A Free and Open Source Speedtest for HTML5 and more.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "librespeed",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/speedtest.png",
      "image": "linuxserver/librespeed:latest",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/LibreSpeed",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 170
    },
    {
      "title": "Librewolf",
      "description": "[LibreWolf](https://librewolf.net/) is a custom and independent version of Firefox, with the primary goals of privacy, security and user freedom. LibreWolf also aims to remove all the telemetry, data collection and annoyances, as well as disabling anti-freedom features like DRM.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Browser"
      ],
      "name": "Librewolf",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/librewolf/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/librewolf-logo.png",
      "image": "linuxserver/librewolf:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "LIBREWOLF_CLI",
          "label": "LIBREWOLF_CLI",
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple LibreWolf CLI flags, this string will be passed to the application in full. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/librewolf/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 171
    },
    {
      "title": "Lidarr",
      "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Music"
      ],
      "name": "lidarr",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/lidarr.png",
      "image": "hotio/lidarr:release",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8686:8686/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Lidarr",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Music",
          "container": "/music"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 172
    },
    {
      "title": "Limnoria",
      "description": "[Limnoria](https://github.com/ProgVal/limnoria) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "IRC"
      ],
      "name": "Limnoria",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/limnoria/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/limnoria-icon.png",
      "image": "linuxserver/limnoria:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/limnoria/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 173
    },
    {
      "title": "LiveSwitch",
      "description": "A basic LiveSwitch stack with gateway, caching, database and media server",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media"
      ],
      "name": "LiveSwitch",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/liveswitch/docker-stack.yml"
      },
      "id": 174
    },
    {
      "title": "Logzio Logs Collector",
      "description": "Docker container that uses Filebeat to collect logs from other Docker containers and forward those logs to your Logz.io account.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools"
      ],
      "name": "logzio-logs-collector",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/logzio-icon.png",
      "image": "logzio/docker-collector-logs",
      "env": [
        {
          "name": "LOGZIO_TOKEN",
          "label": "LOGZIO_TOKEN",
          "default": "REPLACE-LOGZIO-TOKEN-HERE"
        },
        {
          "name": "LOGZIO_URL",
          "label": "LOGZIO_URL",
          "default": "listener.logz.io:5015"
        }
      ],
      "ports": [],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/var/lib/docker/containers",
          "bind": "/var/lib/docker/containers"
        }
      ],
      "id": 175
    },
    {
      "title": "Logzio Metrics Collector",
      "description": "Docker Metrics Collector is a container that runs Metricbeat with the modules you enable at runtime.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools"
      ],
      "name": "logzio-metrics-collector",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/logzio-icon.png",
      "image": "logzio/docker-collector-metrics",
      "env": [
        {
          "name": "LOGZIO_TOKEN",
          "label": "LOGZIO_TOKEN",
          "default": "REPLACE-LOGZIO-TOKEN-HERE"
        },
        {
          "name": "LOGZIO_MODULES",
          "label": "LOGZIO_MODULES",
          "default": "system,docker"
        }
      ],
      "ports": [],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/hostfs/sys/fs/cgroup",
          "bind": "/sys/fs/cgroup",
          "readonly": true
        },
        {
          "container": "/hostfs/proc",
          "bind": "/proc",
          "readonly": true
        },
        {
          "container": "/hostfs",
          "bind": "/",
          "readonly": true
        }
      ],
      "id": 176
    },
    {
      "title": "Lollypop",
      "description": "[Lollypop](https://wiki.gnome.org/Apps/Lollypop) is a lightweight modern music player designed to work excellently on the GNOME desktop environment.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "Lollypop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/lollypop/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lollypop-icon.png",
      "image": "linuxserver/lollypop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/lollypop/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 177
    },
    {
      "title": "Luanti",
      "description": "[Luanti](https://www.luanti.org/) (formerly Minetest) is an open source voxel game-creation platform with easy modding and game creation",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Games"
      ],
      "name": "Luanti",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/luanti/config/.minetest</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minetest-icon.png",
      "image": "linuxserver/luanti:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "CLI_ARGS",
          "label": "CLI_ARGS",
          "default": "--gameid devtest",
          "description": "Optionally specify any [CLI variables](https://wiki.luanti.net/Command_line) you want to launch the app with [OPTIONAL]"
        }
      ],
      "ports": [
        "30000:30000/udp"
      ],
      "volumes": [
        {
          "container": "/config/.minetest",
          "bind": "/srv/lsio/luanti/config/.minetest"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 178
    },
    {
      "title": "Lychee",
      "description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Web",
        "Management",
        "Photos"
      ],
      "name": "lychee",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/lychee-icon.png",
      "image": "linuxserver/lychee:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Lychee",
          "container": "/config"
        },
        {
          "bind": "/portainer/Pictures",
          "container": "/pictures"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 179
    },
    {
      "title": "Manubes Edge Node",
      "description": "High-performance cloud platform for industrial production management. Manubes is a no-code solution that is used to structure, monitor and control production data, systems and processes in the cloud.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "Manubes Edge Node",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/inray-manubes.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/edge/inray-manubes-edge-node/docker-compose.yml"
      },
      "id": 180
    },
    {
      "title": "Manyfold",
      "description": "[Manyfold](https://github.com/manyfold3d/manyfold/) is an open source, self-hosted web application for managing a collection of 3D models, particularly focused on 3D printing.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Printing"
      ],
      "name": "Manyfold",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/manyfold/config<br>mkdir -p /srv/lsio/manyfold/libraries</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/manyfold-logo.png",
      "image": "linuxserver/manyfold:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DATABASE_URL",
          "label": "DATABASE_URL",
          "default": "",
          "description": "Database connection URL. For sqlite use `sqlite3:/config/manyfold.sqlite3`. For postgres or mariadb use `<scheme>://<username>:<password>@<hostname>:<port>/<db name>` where `<scheme>` is `postgresql` or `mysql2`. Special characters in username/password must be [URL encoded](https://en.wikipedia.org/wiki/Percent-encoding)."
        },
        {
          "name": "REDIS_URL",
          "label": "REDIS_URL",
          "default": "",
          "description": "Redis/Valkey database URL in `redis://<hostname>:<port>/<db number>` format."
        },
        {
          "name": "SECRET_KEY_BASE",
          "label": "SECRET_KEY_BASE",
          "default": "",
          "description": "Browser session secret. Changing it will terminate all active browser sessions."
        }
      ],
      "ports": [
        "3214:3214/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/manyfold/config"
        },
        {
          "container": "/libraries",
          "bind": "/srv/lsio/manyfold/libraries"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 181
    },
    {
      "title": "MariaDB",
      "description": "An Enhanced drop in replacement for Mysql.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "mariadb",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mariadb-icon.png",
      "image": "linuxserver/mariadb:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD",
          "set": ""
        }
      ],
      "ports": [
        "3306:3306/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Mariadb",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 182
    },
    {
      "title": "Mastodon",
      "description": "[Mastodon](https://github.com/mastodon/mastodon/) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Social"
      ],
      "name": "Mastodon",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/mastodon/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png",
      "image": "linuxserver/mastodon:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "LOCAL_DOMAIN",
          "label": "LOCAL_DOMAIN",
          "default": "example.com",
          "description": "This is the unique identifier of your server in the network. It cannot be safely changed later."
        },
        {
          "name": "REDIS_HOST",
          "label": "REDIS_HOST",
          "default": "redis",
          "description": "Redis server hostname"
        },
        {
          "name": "REDIS_PORT",
          "label": "REDIS_PORT",
          "default": "6379",
          "description": "Redis port"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "db",
          "description": "Postgres database hostname"
        },
        {
          "name": "DB_USER",
          "label": "DB_USER",
          "default": "mastodon",
          "description": "Postgres username"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "mastodon",
          "description": "Postgres db name"
        },
        {
          "name": "DB_PASS",
          "label": "DB_PASS",
          "default": "mastodon",
          "description": "Postgres password"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "5432",
          "description": "Postgres port"
        },
        {
          "name": "ES_ENABLED",
          "label": "ES_ENABLED",
          "default": "false",
          "description": "Enable or disable Elasticsearch (requires a separate ES instance)"
        },
        {
          "name": "ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY",
          "label": "ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY",
          "default": "",
          "description": "Primary key for [Active Record Encryption](https://github.com/mastodon/mastodon/pull/29831/files)."
        },
        {
          "name": "ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY",
          "label": "ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY",
          "default": "",
          "description": "Deterministic key for [Active Record Encryption](https://github.com/mastodon/mastodon/pull/29831/files)."
        },
        {
          "name": "ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT",
          "label": "ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT",
          "default": "",
          "description": "Derivation salt for [Active Record Encryption](https://github.com/mastodon/mastodon/pull/29831/files)."
        },
        {
          "name": "SECRET_KEY_BASE",
          "label": "SECRET_KEY_BASE",
          "default": "",
          "description": "Browser session secret. Changing it will break all active browser sessions."
        },
        {
          "name": "OTP_SECRET",
          "label": "OTP_SECRET",
          "default": "",
          "description": "MFA secret. Changing it after initial setup will break two-factor authentication."
        },
        {
          "name": "VAPID_PRIVATE_KEY",
          "label": "VAPID_PRIVATE_KEY",
          "default": "",
          "description": "Push notification private key. Changing it after initial setup will break push notifications."
        },
        {
          "name": "VAPID_PUBLIC_KEY",
          "label": "VAPID_PUBLIC_KEY",
          "default": "",
          "description": "Push notification public key. Changing it after initial setup will break push notifications."
        },
        {
          "name": "SMTP_SERVER",
          "label": "SMTP_SERVER",
          "default": "mail.example.com",
          "description": "SMTP server for email notifications"
        },
        {
          "name": "SMTP_PORT",
          "label": "SMTP_PORT",
          "default": "25",
          "description": "SMTP server port"
        },
        {
          "name": "SMTP_LOGIN",
          "label": "SMTP_LOGIN",
          "default": "",
          "description": "SMTP username"
        },
        {
          "name": "SMTP_PASSWORD",
          "label": "SMTP_PASSWORD",
          "default": "",
          "description": "SMTP password"
        },
        {
          "name": "SMTP_FROM_ADDRESS",
          "label": "SMTP_FROM_ADDRESS",
          "default": "notifications@example.com",
          "description": "From address for emails send from Mastodon"
        },
        {
          "name": "S3_ENABLED",
          "label": "S3_ENABLED",
          "default": "false",
          "description": "Enable or disable S3 storage of uploaded files"
        },
        {
          "name": "WEB_DOMAIN",
          "label": "WEB_DOMAIN",
          "default": "mastodon.example.com",
          "description": "This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See [https://docs.joinmastodon.org/admin/config/#basic](https://docs.joinmastodon.org/admin/config/#basic) [OPTIONAL]"
        },
        {
          "name": "ES_HOST",
          "label": "ES_HOST",
          "default": "es",
          "description": "Elasticsearch server hostname [OPTIONAL]"
        },
        {
          "name": "ES_PORT",
          "label": "ES_PORT",
          "default": "9200",
          "description": "Elasticsearch port [OPTIONAL]"
        },
        {
          "name": "ES_USER",
          "label": "ES_USER",
          "default": "elastic",
          "description": "Elasticsearch username [OPTIONAL]"
        },
        {
          "name": "ES_PASS",
          "label": "ES_PASS",
          "default": "elastic",
          "description": "Elasticsearch password [OPTIONAL]"
        },
        {
          "name": "S3_BUCKET",
          "label": "S3_BUCKET",
          "default": "",
          "description": "S3 bucket hostname [OPTIONAL]"
        },
        {
          "name": "AWS_ACCESS_KEY_ID",
          "label": "AWS_ACCESS_KEY_ID",
          "default": "",
          "description": "S3 bucket access key ID [OPTIONAL]"
        },
        {
          "name": "AWS_SECRET_ACCESS_KEY",
          "label": "AWS_SECRET_ACCESS_KEY",
          "default": "",
          "description": "S3 bucket secret access key [OPTIONAL]"
        },
        {
          "name": "S3_ALIAS_HOST",
          "label": "S3_ALIAS_HOST",
          "default": "",
          "description": "Alternate hostname for object fetching if you are front the S3 connections. [OPTIONAL]"
        },
        {
          "name": "SIDEKIQ_ONLY",
          "label": "SIDEKIQ_ONLY",
          "default": "false",
          "description": "Only run the sidekiq service in this container instance. For large scale instances that need better queue handling. [OPTIONAL]"
        },
        {
          "name": "SIDEKIQ_QUEUE",
          "label": "SIDEKIQ_QUEUE",
          "default": "",
          "description": "The name of the sidekiq queue to run in this container. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-queues). [OPTIONAL]"
        },
        {
          "name": "SIDEKIQ_DEFAULT",
          "label": "SIDEKIQ_DEFAULT",
          "default": "false",
          "description": "Set to `true` on the main container if you're running additional sidekiq instances. It will run the `default` queue. [OPTIONAL]"
        },
        {
          "name": "SIDEKIQ_THREADS",
          "label": "SIDEKIQ_THREADS",
          "default": "5",
          "description": "The number of threads for sidekiq to use. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads). [OPTIONAL]"
        },
        {
          "name": "DB_POOL",
          "label": "DB_POOL",
          "default": "5",
          "description": "The size of the DB connection pool, must be *at least* the same as `SIDEKIQ_THREADS`. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads). [OPTIONAL]"
        },
        {
          "name": "NO_CHOWN",
          "label": "NO_CHOWN",
          "default": "",
          "description": "Set to `true` to skip chown of /config on init. *READ THE APPLICATION NOTES BEFORE SETTING THIS*. [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/mastodon/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 183
    },
    {
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Marketing"
      ],
      "name": "Mautic",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ],
      "id": 184
    },
    {
      "title": "Mayan EDMS",
      "description": "Mayan EDMS is an electronic vault for your documents.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents",
        "Tools"
      ],
      "name": "mayan",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/mayan-logo.png",
      "repository": {
        "url": "https://github.com/mediadepot/templates",
        "stackfile": "/stacks/mayan/docker-compose.yml"
      },
      "id": 185
    },
    {
      "title": "McMyAdmin 2",
      "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "mcmyadmin2",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mcmyadmin-icon.png",
      "image": "linuxserver/mcmyadmin2:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8080:8080/tcp",
        "25565:25565/tcp"
      ],
      "volumes": [
        {
          "container": "/minecraft"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 186
    },
    {
      "title": "Mediaelch",
      "description": "[MediaElch](https://github.com/Komet/MediaElch) is a MediaManager for Kodi. Information about Movies, TV Shows, Concerts and Music are stored as nfo files. Fanarts are downloaded automatically from fanart.tv. Using the nfo generator, MediaElch can be used with other MediaCenters as well.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media Management"
      ],
      "name": "Mediaelch",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/mediaelch/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mediaelch-logo.png",
      "image": "linuxserver/mediaelch:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/mediaelch/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 187
    },
    {
      "title": "Medusa",
      "description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Video"
      ],
      "name": "medusa",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/medusa-icon.png",
      "image": "linuxserver/medusa:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8081:8081/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Medusa",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 188
    },
    {
      "title": "Microsoft OMS Agent",
      "description": "Microsoft Operations Management Suite Linux agent.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Ops"
      ],
      "name": "Microsoft OMS Agent",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/microsoft-oms/docker-stack.yml"
      },
      "id": 189
    },
    {
      "title": "Minetest",
      "description": "Server version of minetest, a free, open source alternative to minecraft.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "minetest",
      "note": "",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
      "image": "linuxserver/minetest:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "30000:30000/udp"
      ],
      "volumes": [
        {
          "container": "/config/.minetest"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 190
    },
    {
      "title": "Minio",
      "description": "A distributed object storage server built for cloud applications and devops",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Storage"
      ],
      "name": "Minio",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
      "image": "quay.io/minio/minio:latest",
      "env": [
        {
          "name": "MINIO_ROOT_USER",
          "label": "Root user"
        },
        {
          "name": "MINIO_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "ports": [
        "9000/tcp",
        "9001/tcp"
      ],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/root/.minio"
        }
      ],
      "id": 191
    },
    {
      "title": "Minisatip",
      "description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards. The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video",
        "Other",
        "Tools"
      ],
      "name": "minisatip",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/minisatip-icon.png",
      "image": "linuxserver/minisatip:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8875:8875/tcp",
        "554:554/tcp",
        "1900:1900/udp"
      ],
      "restart_policy": "unless-stopped",
      "id": 192
    },
    {
      "title": "Modmanager",
      "description": "# This container needs special attention. Please check https://hub.docker.com/r/linuxserver/modmanager for details.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Docker"
      ],
      "name": "Modmanager",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/modmanager/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png",
      "image": "linuxserver/modmanager:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/modmanager/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 193
    },
    {
      "title": "Mongo",
      "description": "Open-source document-oriented database",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "Mongo",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
      "image": "mongo:latest",
      "ports": [
        "27017/tcp"
      ],
      "volumes": [
        {
          "container": "/data/db"
        }
      ],
      "id": 194
    },
    {
      "title": "Monica",
      "description": "[Monica](https://github.com/monicahq/monica) is an open source personal relationship management system, that lets you document your life.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Content Management"
      ],
      "name": "Monica",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/monica/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/monica-logo.png",
      "image": "linuxserver/monica:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "",
          "description": "Mariadb DB server hostname."
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "",
          "description": "Mariadb DB server port."
        },
        {
          "name": "DB_USERNAME",
          "label": "DB_USERNAME",
          "default": "",
          "description": "Mariadb DB user."
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD",
          "default": "",
          "description": "Mariadb DB password."
        },
        {
          "name": "DB_DATABASE",
          "label": "DB_DATABASE",
          "default": "",
          "description": "Mariadb DB name."
        },
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "http://localhost:80",
          "description": "The URL you will use to access Monica including protocol, and port where appropriate. [OPTIONAL]"
        },
        {
          "name": "TRUSTED_PROXIES",
          "label": "TRUSTED_PROXIES",
          "default": "",
          "description": "Set to the IP or netmask covering your reverse proxy, if running behind one. Set to `*` to trust all IPs (**do not** use `*` if exposed to the internet`). [OPTIONAL]"
        },
        {
          "name": "APP_ENV",
          "label": "APP_ENV",
          "default": "local",
          "description": "Set to `production` when exposing the container to anyone else; this also makes https mandatory. [OPTIONAL]"
        },
        {
          "name": "APP_DISABLE_SIGNUP",
          "label": "APP_DISABLE_SIGNUP",
          "default": "true",
          "description": "Set to `false` to enable new account sign-ups. [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/monica/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 195
    },
    {
      "title": "Mozilla Syncserver",
      "description": "Run-Your-Own Firefox Sync Server",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools"
      ],
      "name": "syncserver",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/firefox-logo.png",
      "image": "mozilla/syncserver:latest",
      "env": [
        {
          "name": "SYNCSERVER_PUBLIC_URL",
          "label": "SYNCSERVER_PUBLIC_URL",
          "default": "https://syncserver.depot.lan"
        },
        {
          "name": "SYNCSERVER_SECRET_FILE",
          "label": "SYNCSERVER_SECRET_FILE",
          "default": "/data/secret_key"
        },
        {
          "name": "SYNCSERVER_SQLURI",
          "label": "SYNCSERVER_SQLURI",
          "default": "sqlite:////data/syncserver.db"
        },
        {
          "name": "SYNCSERVER_BATCH_UPLOAD_ENABLED",
          "label": "SYNCSERVER_BATCH_UPLOAD_ENABLED",
          "default": "true"
        },
        {
          "name": "SYNCSERVER_FORCE_WSGI_ENVIRON",
          "label": "SYNCSERVER_FORCE_WSGI_ENVIRON",
          "default": "false"
        },
        {
          "name": "PORT",
          "label": "PORT",
          "default": "5000"
        }
      ],
      "ports": [
        "5000/tcp"
      ],
      "volumes": [
        {
          "container": "/data",
          "bind": "/opt/mediadepot/apps/syncserver"
        }
      ],
      "id": 196
    },
    {
      "title": "Msedge",
      "description": "[Microsoft Edge](https://www.microsoft.com/edge) is a cross-platform web browser developed by Microsoft and based on Chromium.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Browser"
      ],
      "name": "Msedge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/msedge/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/edge-logo.png",
      "image": "linuxserver/msedge:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "EDGE_CLI",
          "label": "EDGE_CLI",
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/msedge/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 197
    },
    {
      "title": "Mstream",
      "description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Music"
      ],
      "name": "mstream",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mstream.png",
      "image": "linuxserver/mstream:latest",
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Mstream",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/music"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 198
    },
    {
      "title": "Mullvad-browser",
      "description": "The [Mullvad Browser](https://mullvad.net/en/browser) is a privacy-focused web browser developed in a collaboration between Mullvad VPN and the Tor Project. It’s designed to minimize tracking and fingerprinting. You could say it’s a Tor Browser to use without the Tor Network. Instead, you can use it with a trustworthy VPN.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Browser",
        "VPN"
      ],
      "name": "Mullvad-browser",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/mullvad-browser/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mullvad-browser-logo.png",
      "image": "linuxserver/mullvad-browser:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "LOCAL_NET",
          "label": "LOCAL_NET",
          "default": "192.168.0.0/16",
          "description": "If using a VPN, set this to your local LAN IP range using CIDR notation. Without it you will be unable to access the web interface. If you have multiple ranges or a complex LAN setup you will need to manage this yourself in the wg0.conf, see the App Setup section for details. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/mullvad-browser/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 199
    },
    {
      "title": "Murmur",
      "description": "Mumble is a voicechat program for gamers written on top of Qt and Opus. Murmur is the server backend for Mumble.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Voice",
        "Chat"
      ],
      "name": "murmur",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/Mumble-logo.png",
      "image": "goofball222/murmur:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "ports": [
        "64738:64738/tcp",
        "64738:64738/udp"
      ],
      "volumes": [
        {
          "bind": "/etc/localtime:ro",
          "container": "/etc/localtime"
        },
        {
          "bind": "/portainer/Files/Config/Murmur",
          "container": "/opt/murmur/config"
        },
        {
          "bind": "/portainer/Files/Murmur/data",
          "container": "/opt/murmur/data"
        },
        {
          "bind": "/portainer/Files/Murmur/log",
          "container": "/opt/murmur/log"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 200
    },
    {
      "title": "MusicBrainz",
      "description": "MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music",
        "Other",
        "Tools"
      ],
      "name": "musicbrainz",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/musicbrainz-icon.png",
      "image": "linuxserver/musicbrainz:latest",
      "env": [
        {
          "label": "BRAINZCODE",
          "name": "BRAINZCODE",
          "set": ""
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "5000:5000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/MusicBrainz",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/MusicBrainz",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 201
    },
    {
      "title": "Muximux",
      "description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web",
        "Proxy",
        "Other",
        "Tools"
      ],
      "name": "muximux",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/muximux-icon.png",
      "image": "linuxserver/muximux:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Muximux",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 202
    },
    {
      "title": "Mylar",
      "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Books"
      ],
      "name": "mylar",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mylar-icon.png",
      "image": "linuxserver/mylar:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8090:8090/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Mylar",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Comics",
          "container": "/comics"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 203
    },
    {
      "title": "Mylar3",
      "description": "[Mylar3](https://github.com/mylar3/mylar3) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Books",
        "Media Management"
      ],
      "name": "Mylar3",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/mylar3/config<br>mkdir -p /srv/lsio/mylar3/comics<br>mkdir -p /srv/lsio/mylar3/downloads</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
      "image": "linuxserver/mylar3:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "8090:8090/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/mylar3/config"
        },
        {
          "container": "/comics",
          "bind": "/srv/lsio/mylar3/comics"
        },
        {
          "container": "/downloads",
          "bind": "/srv/lsio/mylar3/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 204
    },
    {
      "title": "MySQL",
      "description": "The most popular open-source database",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "MySQL",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
      "image": "mysql/mysql-server:5.7",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        },
        {
          "name": "MYSQL_ROOT_HOST",
          "default": "%",
          "preset": true
        }
      ],
      "ports": [
        "3306/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ],
      "id": 205
    },
    {
      "title": "Mysql-workbench",
      "description": "[MySQL Workbench](https://www.mysql.com/products/workbench/) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Databases"
      ],
      "name": "Mysql-workbench",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/mysql-workbench/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
      "image": "linuxserver/mysql-workbench:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/mysql-workbench/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 206
    },
    {
      "title": "n8n",
      "description": "n8n allows you to build flexible workflows focused on deep data integration.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Networkother",
        "Tools"
      ],
      "name": "n8n",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/n8n.png",
      "image": "docker.n8n.io/n8nio/n8n:latest",
      "env": [
        {
          "name": "GENERIC_TIMEZONE",
          "label": "GENERIC_TIMEZONE",
          "default": "America/Los_Angeles",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles",
          "preset": true
        }
      ],
      "ports": [
        "5678/tcp"
      ],
      "volumes": [
        {
          "container": "/home/node/.n8n",
          "bind": "/opt/mediadepot/apps/n8n"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "id": 207
    },
    {
      "title": "Netboot.xyz",
      "description": "Netbootxyz is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Networkother",
        "Tools"
      ],
      "name": "netbootxyz",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/netbootxyz.jpg",
      "image": "linuxserver/netbootxyz:latest",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        }
      ],
      "ports": [
        "3000/tcp",
        "69/udp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/netbootxyz"
        },
        {
          "container": "/assets",
          "bind": "/media/storage/software/netbootxyz"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "id": 208
    },
    {
      "title": "Netbox",
      "description": "[Netbox](https://github.com/netbox-community/netbox) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Administration",
        "Business"
      ],
      "name": "Netbox",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/netbox/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/netbox-logo.png",
      "image": "linuxserver/netbox:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUPERUSER_EMAIL",
          "label": "SUPERUSER_EMAIL",
          "default": "",
          "description": "Email address for `admin` account"
        },
        {
          "name": "SUPERUSER_PASSWORD",
          "label": "SUPERUSER_PASSWORD",
          "default": "",
          "description": "Password for `admin` account"
        },
        {
          "name": "ALLOWED_HOST",
          "label": "ALLOWED_HOST",
          "default": "",
          "description": "The hostname you will use to access the app (i.e., netbox.example.com)"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "",
          "description": "Database name (default: netbox)"
        },
        {
          "name": "DB_USER",
          "label": "DB_USER",
          "default": "",
          "description": "Database user"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD",
          "default": "",
          "description": "Database password"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "",
          "description": "Database host (default: postgres)"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "",
          "description": "Database port (default: 5432)"
        },
        {
          "name": "REDIS_HOST",
          "label": "REDIS_HOST",
          "default": "",
          "description": "Redis host (default: redis)"
        },
        {
          "name": "REDIS_PORT",
          "label": "REDIS_PORT",
          "default": "",
          "description": "Redis port number (default: 6379)"
        },
        {
          "name": "REDIS_PASSWORD",
          "label": "REDIS_PASSWORD",
          "default": "",
          "description": "Redis password (default: none)"
        },
        {
          "name": "REDIS_DB_TASK",
          "label": "REDIS_DB_TASK",
          "default": "",
          "description": "Redis database ID for tasks (default: 0)"
        },
        {
          "name": "REDIS_DB_CACHE",
          "label": "REDIS_DB_CACHE",
          "default": "",
          "description": "Redis database ID for caching (default: 1)"
        },
        {
          "name": "BASE_PATH",
          "label": "BASE_PATH",
          "default": "",
          "description": "The path you will use to access the app (i.e., /netbox, optional, default: none) [OPTIONAL]"
        },
        {
          "name": "REMOTE_AUTH_ENABLED",
          "label": "REMOTE_AUTH_ENABLED",
          "default": "",
          "description": "Enable remote authentication (optional, default: False) [OPTIONAL]"
        },
        {
          "name": "REMOTE_AUTH_BACKEND",
          "label": "REMOTE_AUTH_BACKEND",
          "default": "",
          "description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend) [OPTIONAL]"
        },
        {
          "name": "REMOTE_AUTH_HEADER",
          "label": "REMOTE_AUTH_HEADER",
          "default": "",
          "description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER) [OPTIONAL]"
        },
        {
          "name": "REMOTE_AUTH_AUTO_CREATE_USER",
          "label": "REMOTE_AUTH_AUTO_CREATE_USER",
          "default": "",
          "description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False) [OPTIONAL]"
        },
        {
          "name": "REMOTE_AUTH_DEFAULT_GROUPS",
          "label": "REMOTE_AUTH_DEFAULT_GROUPS",
          "default": "",
          "description": "The list of groups to assign a new user account when created using remote authentication (optional, default: []) [OPTIONAL]"
        },
        {
          "name": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
          "label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
          "default": "",
          "description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {}) [OPTIONAL]"
        }
      ],
      "ports": [
        "8000:8000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/netbox/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 209
    },
    {
      "title": "Nextcloud",
      "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "name": "nextcloud",
      "note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/nextcloud-icon.png",
      "repository": {
        "url": "https://github.com/Qballjos/portainer_templates",
        "stackfile": "/Template/Stack/nextcloud.yml"
      },
      "id": 210
    },
    {
      "title": "Nginx",
      "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web",
        "Proxy"
      ],
      "name": "nginx",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/nginx-icon.png",
      "image": "linuxserver/nginx:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp",
        "443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nginx",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 211
    },
    {
      "title": "Nginx Proxy Manager",
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Proxy",
        "Tools"
      ],
      "name": "nginx-proxy-manager",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/proxy_mgr.png",
      "image": "jc21/nginx-proxy-manager",
      "env": [
        {
          "label": "DB_SQLITE_FILE",
          "name": "DB_SQLITE_FILE",
          "default": "/data/database.sqlite"
        }
      ],
      "ports": [
        "80:80/tcp",
        "81:81/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/data",
          "container": "/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/letsencrypt",
          "container": "/etc/letsencrypt"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 212
    },
    {
      "title": "Ngircd",
      "description": "[Ngircd](https://ngircd.barton.de/) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "IRC"
      ],
      "name": "Ngircd",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/ngircd/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
      "image": "linuxserver/ngircd:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "6667:6667/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/ngircd/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 213
    },
    {
      "title": "NodeJS",
      "description": "JavaScript-based platform for server-side and networking applications",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Development"
      ],
      "name": "NodeJS",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
      "image": "node:latest",
      "id": 214
    },
    {
      "title": "NZBGet",
      "description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "nzbget",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/nzbget-icon.png",
      "image": "linuxserver/nzbget:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "6789:6789/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nzbget",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 215
    },
    {
      "title": "NZBHydra 2",
      "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Other",
        "Tools"
      ],
      "name": "nzbhydra2",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/hydra-icon.png",
      "image": "linuxserver/nzbhydra2:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "5076:5076/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Nzbhydra2",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 216
    },
    {
      "title": "Obsidian",
      "description": "[Obsidian](https://obsidian.md) is a note-taking app that lets you create, link, and organize your notes on your device, with hundreds of plugins and themes to customize your workflow. You can also publish your notes online, access them offline, and sync them securely with end-to-end encryption.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Content Management"
      ],
      "name": "Obsidian",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/obsidian/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/obsidian-logo.png",
      "image": "linuxserver/obsidian:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/obsidian/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 217
    },
    {
      "title": "Ombi",
      "description": "Ombi allows you to host your own Plex Request and user management system.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Other",
        "Video",
        "Tools"
      ],
      "name": "ombi",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ombi.png",
      "image": "linuxserver/ombi:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "3579:3579/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Ombi",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 218
    },
    {
      "title": "OPC Router",
      "description": "No-code middleware for industrial applications. The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "OPC Router",
      "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/opc-router.png",
      "image": "opcrouter/runtime:latest",
      "env": [
        {
          "name": "INITIAL_USERNAME",
          "label": "Initial Admin User user"
        },
        {
          "name": "INITIAL_PASSWORD",
          "label": "Inital Admin User Password"
        },
        {
          "name": "OR_I_ACCEPT_EULA",
          "label": "Accept EULA",
          "select": [
            {
              "text": "Yes, I accept",
              "value": "true",
              "default": true
            }
          ]
        }
      ],
      "ports": [
        "49429/tcp",
        "8080/tcp",
        "8081/tcp"
      ],
      "volumes": [
        {
          "container": "/data/database"
        },
        {
          "container": "/inray"
        },
        {
          "container": "/var/log/opcrouter"
        }
      ],
      "id": 219
    },
    {
      "title": "OpenAMT",
      "description": "OpenAMT Cloud Toolkit",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud"
      ],
      "name": "OpenAMT",
      "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/openamt/docker-compose.yml"
      },
      "id": 220
    },
    {
      "title": "OpenFaaS",
      "description": "Serverless functions made simple",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Serverless"
      ],
      "name": "func",
      "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
      "repository": {
        "url": "https://github.com/openfaas/faas",
        "stackfile": "/docker-compose.yml"
      },
      "id": 221
    },
    {
      "title": "Openshot",
      "description": "[OpenShot](https://openshot.org/) Video Editor is an award-winning free and open-source video editor for Linux, Mac, and Windows, and is dedicated to delivering high quality video editing and animation solutions to the world.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video Editor"
      ],
      "name": "Openshot",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/openshot/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openshot-logo.png",
      "image": "linuxserver/openshot:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/openshot/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 222
    },
    {
      "title": "Openssh-server",
      "description": "[Openssh-server](https://www.openssh.com/) is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Administration"
      ],
      "name": "Openssh-server",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/openssh-server/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openssh-server-logo.png",
      "image": "linuxserver/openssh-server:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "PUBLIC_KEY",
          "label": "PUBLIC_KEY",
          "default": "yourpublickey",
          "description": "Optional ssh public key, which will automatically be added to authorized_keys. [OPTIONAL]"
        },
        {
          "name": "PUBLIC_KEY_FILE",
          "label": "PUBLIC_KEY_FILE",
          "default": "/path/to/file",
          "description": "Optionally specify a file containing the public key (works with docker secrets). [OPTIONAL]"
        },
        {
          "name": "PUBLIC_KEY_DIR",
          "label": "PUBLIC_KEY_DIR",
          "default": "/path/to/directory/containing/_only_/pubkeys",
          "description": "Optionally specify a directory containing the public keys (works with docker secrets). [OPTIONAL]"
        },
        {
          "name": "PUBLIC_KEY_URL",
          "label": "PUBLIC_KEY_URL",
          "default": "https://github.com/username.keys",
          "description": "Optionally specify a URL containing the public key. [OPTIONAL]"
        },
        {
          "name": "SUDO_ACCESS",
          "label": "SUDO_ACCESS",
          "default": "false",
          "description": "Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access. [OPTIONAL]"
        },
        {
          "name": "PASSWORD_ACCESS",
          "label": "PASSWORD_ACCESS",
          "default": "false",
          "description": "Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well. [OPTIONAL]"
        },
        {
          "name": "USER_PASSWORD",
          "label": "USER_PASSWORD",
          "default": "password",
          "description": "Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access. [OPTIONAL]"
        },
        {
          "name": "USER_PASSWORD_FILE",
          "label": "USER_PASSWORD_FILE",
          "default": "/path/to/file",
          "description": "Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets). [OPTIONAL]"
        },
        {
          "name": "USER_NAME",
          "label": "USER_NAME",
          "default": "linuxserver.io",
          "description": "Optionally specify a user name (Default:`linuxserver.io`) [OPTIONAL]"
        },
        {
          "name": "LOG_STDOUT",
          "label": "LOG_STDOUT",
          "default": "",
          "description": "Set to `true` to log to stdout instead of file. [OPTIONAL]"
        }
      ],
      "ports": [
        "2222:2222/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/openssh-server/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 223
    },
    {
      "title": "OpenVPN Access Server",
      "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "openvpn-as",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/openvpn-as-icon.png",
      "image": "linuxserver/openvpn-as:latest",
      "env": [
        {
          "label": "INTERFACE",
          "name": "INTERFACE",
          "set": "eth0"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "943:943/tcp",
        "9443:9443/tcp",
        "1194:1194/udp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 224
    },
    {
      "title": "Openvscode-server",
      "description": "[Openvscode-server](https://github.com/gitpod-io/openvscode-server) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Programming"
      ],
      "name": "Openvscode-server",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/openvscode-server/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
      "image": "linuxserver/openvscode-server:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "CONNECTION_TOKEN",
          "label": "CONNECTION_TOKEN",
          "default": "",
          "description": "Optional security token for accessing the Web UI (ie. `supersecrettoken`). [OPTIONAL]"
        },
        {
          "name": "CONNECTION_SECRET",
          "label": "CONNECTION_SECRET",
          "default": "",
          "description": "Optional path to a file inside the container that contains the security token for accessing the Web UI (ie. `/path/to/file`). Overrides `CONNECTION_TOKEN`. [OPTIONAL]"
        },
        {
          "name": "SUDO_PASSWORD",
          "label": "SUDO_PASSWORD",
          "default": "password",
          "description": "If this optional variable is set, user will have sudo access in the openvscode-server terminal with the specified password. [OPTIONAL]"
        },
        {
          "name": "SUDO_PASSWORD_HASH",
          "label": "SUDO_PASSWORD_HASH",
          "default": "",
          "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/openvscode-server/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 225
    },
    {
      "title": "Opera",
      "description": "[Opera](https://www.opera.com/) is a multi-platform web browser developed by its namesake company Opera. The browser is based on Chromium, but distinguishes itself from other Chromium-based browsers (Chrome, Edge, etc.) through its user interface and other features.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Browser"
      ],
      "name": "Opera",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/opera/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/opera-icon.png",
      "image": "linuxserver/opera:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "OPERA_CLI",
          "label": "OPERA_CLI",
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/opera/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 226
    },
    {
      "title": "Orcaslicer",
      "description": "[Orca Slicer](https://github.com/SoftFever/OrcaSlicer) is an open source slicer for FDM printers. OrcaSlicer is fork of Bambu Studio, it was previously known as BambuStudio-SoftFever, Bambu Studio is forked from PrusaSlicer by Prusa Research, which is from Slic3r by Alessandro Ranellucci and the RepRap community",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "3D Printing"
      ],
      "name": "Orcaslicer",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/orcaslicer/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/orcaslicer-logo.png",
      "image": "linuxserver/orcaslicer:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/orcaslicer/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 227
    },
    {
      "title": "Organizr",
      "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "organizr-v2",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/organizr-icon.png",
      "image": "organizr/organizr:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Organizr",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 228
    },
    {
      "title": "OScam",
      "description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module (CAM). The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "oscam",
      "note": "",
      "logo": "http://i.imgur.com/8LadrLg.png",
      "image": "linuxserver/oscam:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8888:8888/tcp",
        "10000:10000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/OScam",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 229
    },
    {
      "title": "Outline",
      "description": "Open source collaborative knowledge base for modern teams",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Productivity",
        "Social"
      ],
      "name": "outline",
      "note": "Open source collaborative knowledge base for modern teams",
      "logo": "https://avatars.githubusercontent.com/u/1765001",
      "repository": {
        "url": "https://github.com/lissy93/portainer-templates",
        "stackfile": "/sources/stacks/outline.yml"
      },
      "id": 230
    },
    {
      "title": "Overseerr",
      "description": "Overseerr is a free and open source software application for managing requests for your media library.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Overseerr",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/overseerr-icon.png",
      "image": "hotio/overseerr:release",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "5055:5055/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Overseerr",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 231
    },
    {
      "title": "Owncloud",
      "description": "ownCloud is a self-hosted file sync and share server. It provides access to your data through a web interface, sync clients or WebDAV while providing a platform to view, sync and share across devices easily—all under your control. ownCloud’s open architecture is extensible via a simple but powerful API for applications and plugins and it works with any storage.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other",
        "Web"
      ],
      "name": "Owncloud",
      "note": "The database user is owncloud and the database is owncloud.",
      "logo": "https://raw.githubusercontent.com/docker-library/docs/9d36b4ed7cabc35dbd3849272ba2bd7abe482172/owncloud/logo.png",
      "repository": {
        "url": "https://github.com/Qballjos/portainer_templates",
        "stackfile": "/Template/Stack/owncloud.yml"
      },
      "id": 232
    },
    {
      "title": "Pairdrop",
      "description": "[PairDrop](https://github.com/schlagmichdoch/PairDrop) is a sublime alternative to AirDrop that works on all platforms. Send images, documents or text via peer to peer connection to devices in the same local network/Wi-Fi or to paired devices.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "File Sharing"
      ],
      "name": "Pairdrop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/pairdrop/config</p>",
      "logo": "https://raw.githubusercontent.com/schlagmichdoch/PairDrop/master/public/images/android-chrome-512x512.png",
      "image": "linuxserver/pairdrop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "RATE_LIMIT",
          "label": "RATE_LIMIT",
          "default": "false",
          "description": "Set to `true` to limit clients to 100 requests per 5 min [OPTIONAL]"
        },
        {
          "name": "WS_FALLBACK",
          "label": "WS_FALLBACK",
          "default": "false",
          "description": "Set to `true` to enable websocket fallback if the peer to peer WebRTC connection is not available to the client (see App Setup notes). [OPTIONAL]"
        },
        {
          "name": "RTC_CONFIG",
          "label": "RTC_CONFIG",
          "default": "",
          "description": "Path to a json file containing custom STUN/TURN config (see App Setup notes) [OPTIONAL]"
        },
        {
          "name": "DEBUG_MODE",
          "label": "DEBUG_MODE",
          "default": "false",
          "description": "Set to `true` to debug the http server configuration by logging clients IP addresses used by PairDrop to STDOUT. [See here for more info](https://github.com/schlagmichdoch/PairDrop/blob/master/docs/host-your-own.md#debug-mode). Do not use in production! [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/pairdrop/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 233
    },
    {
      "title": "Passky Client",
      "description": "Passky is a simple, modern, lightweight, open-source and secure password manager.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "passky-client",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/passky-icon.png",
      "image": "rabbitcompany/passky-client:latest",
      "ports": [
        "8081:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "id": 234
    },
    {
      "title": "Passky Server",
      "description": "Passky is a simple, modern, lightweight, open-source and secure password manager.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "passky-server",
      "note": "Do not forget to perform regular backups, especially before each update.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/passky-icon.png",
      "image": "rabbitcompany/passky-server:latest",
      "env": [
        {
          "default": "admin",
          "label": "ADMIN_USERNAME",
          "name": "ADMIN_USERNAME"
        },
        {
          "label": "ADMIN_PASSWORD",
          "name": "ADMIN_PASSWORD"
        }
      ],
      "ports": [
        "8080:80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Passky-Server",
          "container": "/var/www/html/databases"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 235
    },
    {
      "title": "Pcsx2",
      "description": "[PCSX2](https://pcsx2.net/) is an open source PS2 Emulator.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Pcsx2",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/pcsx2/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pcsx2-logo.png",
      "image": "linuxserver/pcsx2:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/pcsx2/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 236
    },
    {
      "title": "Petio",
      "description": "Petio is a third party companion app available to Plex server owners to allow their users to request, review and discover content.",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Petio",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/petio-icon.png",
      "repository": {
        "url": "https://github.com/Qballjos/portainer_templates",
        "stackfile": "/Template/Stack/petio.yml"
      },
      "id": 237
    },
    {
      "title": "PhotoShow",
      "description": "A simple, easy way to turn a photo album into a webgallery.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Photos"
      ],
      "name": "photoshow",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/photoshow-icon.png",
      "image": "linuxserver/photoshow:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Pictures",
          "container": "/Pictures"
        },
        {
          "bind": "/portainer/Files/AppData/Photoshow/Thumbs",
          "container": "/Thumbs"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PhotoShow",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 238
    },
    {
      "title": "Phpmyadmin",
      "description": "[Phpmyadmin](https://github.com/phpmyadmin/phpmyadmin/) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Databases"
      ],
      "name": "Phpmyadmin",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/phpmyadmin/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
      "image": "linuxserver/phpmyadmin:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "PMA_ARBITRARY",
          "label": "PMA_ARBITRARY",
          "default": "1",
          "description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup) [OPTIONAL]"
        },
        {
          "name": "PMA_ABSOLUTE_URI",
          "label": "PMA_ABSOLUTE_URI",
          "default": "https://phpmyadmin.example.com",
          "description": "Set the URL you will use to access the web frontend [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/phpmyadmin/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 239
    },
    {
      "title": "Pi-Hole",
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "pihole",
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pihole.png",
      "image": "pihole/pihole:latest",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "4443:443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiHole",
          "container": "/etc/pihole"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
          "container": "/etc/dnsmasq.d"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 240
    },
    {
      "title": "Pidgin",
      "description": "[Pidgin](https://pidgin.im/) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "IRC",
        "Chat"
      ],
      "name": "Pidgin",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/pidgin/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
      "image": "linuxserver/pidgin:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/pidgin/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 241
    },
    {
      "title": "Piper",
      "description": "[Piper](https://github.com/rhasspy/piper/) is a fast, local neural text to speech system that sounds great and is optimized for the Raspberry Pi 4. This container provides a Wyoming protocol server for Piper.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Machine Learning"
      ],
      "name": "Piper",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/piper/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piper-logo.png",
      "image": "linuxserver/piper:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "PIPER_VOICE",
          "label": "PIPER_VOICE",
          "default": "en_US-lessac-medium",
          "description": "The [Piper voice](https://huggingface.co/rhasspy/piper-voices/tree/main) to use, in the format `<language>-<name>-<quality>`"
        },
        {
          "name": "PIPER_LENGTH",
          "label": "PIPER_LENGTH",
          "default": "1.0",
          "description": "Voice speaking rate, 1.0 is default with < 1.0 being faster and > 1.0 being slower. [OPTIONAL]"
        },
        {
          "name": "PIPER_NOISE",
          "label": "PIPER_NOISE",
          "default": "0.667",
          "description": "Controls the variability of the voice by adding noise. Values above 1 will start to degrade audio. [OPTIONAL]"
        },
        {
          "name": "PIPER_NOISEW",
          "label": "PIPER_NOISEW",
          "default": "0.333",
          "description": "Controls the variability of speaking cadence. Values above 1 produce extreme stutters and pauses. [OPTIONAL]"
        },
        {
          "name": "PIPER_SPEAKER",
          "label": "PIPER_SPEAKER",
          "default": "0",
          "description": "Speaker number to use if the voice supports multiple speakers. [OPTIONAL]"
        },
        {
          "name": "PIPER_PROCS",
          "label": "PIPER_PROCS",
          "default": "1",
          "description": "Number of Piper processes to run simultaneously. [OPTIONAL]"
        }
      ],
      "ports": [
        "10200:10200/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/piper/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 242
    },
    {
      "title": "Piwigo",
      "description": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Photos"
      ],
      "name": "piwigo",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/piwigo-icon.png",
      "image": "linuxserver/piwigo:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiWigo",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 243
    },
    {
      "title": "Planka",
      "description": "[Planka](https://github.com/plankanban/planka/) is an elegant open source project tracking tool.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Content Management",
        "Business"
      ],
      "name": "Planka",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/planka/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/planka-logo.png",
      "image": "linuxserver/planka:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "BASE_URL",
          "label": "BASE_URL",
          "default": "https://planka.example.com",
          "description": "The URL you will use to access planka including protocol, and port if not 80/443."
        },
        {
          "name": "DATABASE_URL",
          "label": "DATABASE_URL",
          "default": "postgresql://user:password@planka-db:5432/planka",
          "description": "Postgres database URL. Special characters must be [url encoded](https://en.wikipedia.org/wiki/Percent-encoding)."
        },
        {
          "name": "DEFAULT_ADMIN_EMAIL",
          "label": "DEFAULT_ADMIN_EMAIL",
          "default": "demo@demo.demo",
          "description": "Email address for default user."
        },
        {
          "name": "DEFAULT_ADMIN_USERNAME",
          "label": "DEFAULT_ADMIN_USERNAME",
          "default": "demo",
          "description": "Username for default user."
        },
        {
          "name": "DEFAULT_ADMIN_PASSWORD",
          "label": "DEFAULT_ADMIN_PASSWORD",
          "default": "demo",
          "description": "Password for default user."
        },
        {
          "name": "DEFAULT_ADMIN_NAME",
          "label": "DEFAULT_ADMIN_NAME",
          "default": "Demo User",
          "description": "Display name for default user."
        },
        {
          "name": "SECRET_KEY",
          "label": "SECRET_KEY",
          "default": "notasecretkey",
          "description": "Session encryption key, recommended 32-64 character alphanumeric."
        },
        {
          "name": "TRUST_PROXY",
          "label": "TRUST_PROXY",
          "default": "0",
          "description": "Set to `1` to trust upstream proxies if reverse proxying."
        }
      ],
      "ports": [
        "1337:1337/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/planka/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 244
    },
    {
      "title": "Plex",
      "description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video",
        "Music",
        "Photos"
      ],
      "name": "plex",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/plex-icon.png",
      "image": "linuxserver/plex:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "VERSION",
          "name": "VERSION",
          "set": "latest"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Plex",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 245
    },
    {
      "title": "Plex Media Server",
      "description": "Plex organizes your video, music, and photo collections and streams them to all of your screens.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Mediaservervideo",
        "Mediaservermusic",
        "Mediaserverphotos"
      ],
      "name": "plex",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
      "image": "linuxserver/plex:latest",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        },
        {
          "name": "VERSION",
          "label": "VERSION",
          "default": "latest"
        }
      ],
      "ports": [],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/plex"
        },
        {
          "container": "/data/tvshows",
          "bind": "/media/storage/tvshows"
        },
        {
          "container": "/data/movies",
          "bind": "/media/storage/movies"
        },
        {
          "container": "/data/music",
          "bind": "/media/storage/music"
        },
        {
          "container": "/transcode"
        }
      ],
      "id": 246
    },
    {
      "title": "Plex Requests",
      "description": "Simple automated way for users to request new content for Plex.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Other",
        "Video",
        "Tools"
      ],
      "name": "plexrequests",
      "note": "",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
      "image": "linuxserver/plexrequests:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "label": "URL_BASE",
          "name": "URL_BASE",
          "set": ""
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PlexRequests",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 247
    },
    {
      "title": "PlexTraktSync",
      "description": "A python script that syncs the movies, shows and ratings between trakt and Plex",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents",
        "Tools"
      ],
      "name": "plextraktsync",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
      "repository": {
        "url": "https://github.com/mediadepot/templates",
        "stackfile": "/stacks/plextraktsync/docker-compose.yml"
      },
      "id": 248
    },
    {
      "title": "Plone",
      "description": "A free and open-source CMS built on top of Zope",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cms"
      ],
      "name": "Plone",
      "note": "Default user and password are admin/admin",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
      "image": "plone:latest",
      "ports": [
        "8080/tcp"
      ],
      "volumes": [
        {
          "container": "/data"
        }
      ],
      "id": 249
    },
    {
      "title": "Portainer Agent",
      "description": "Manage all the resources in your Swarm cluster",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Portainer"
      ],
      "name": "Portainer Agent",
      "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/portainer-agent/docker-stack.yml"
      },
      "id": 250
    },
    {
      "title": "PostgreSQL",
      "description": "The most advanced open-source database",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "PostgreSQL",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
      "image": "postgres:latest",
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Superuser"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Superuser password"
        }
      ],
      "ports": [
        "5432/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/postgresql/data"
        }
      ],
      "id": 251
    },
    {
      "title": "Pro Mosquitto with Management Center",
      "description": "Commercial-grade Mosquitto MQTT broker with Management Center",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "Pro Mosquitto with Management Center",
      "note": "The Mosquitto broker password must be at least 12 characters.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cedalo.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/edge/cedalo-mosquitto-mc/docker-compose.yml"
      },
      "id": 252
    },
    {
      "title": "ProjectSend",
      "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Productivity",
        "Tools",
        "Other"
      ],
      "name": "projectsend",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/projectsend-logo.png",
      "image": "linuxserver/projectsend:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/ProjectSend",
          "container": "/data"
        },
        {
          "bind": "/portainer/Files/AppData/Config/ProjectSend",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 253
    },
    {
      "title": "ProtonMail Bridge",
      "description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Email",
        "Productivity",
        "Tools",
        "Other"
      ],
      "name": "protonmail-bridge",
      "note": "Please refer to the documentation <a href='https://hub.docker.com/r/shenxn/protonmail-bridge'/>here</a> to set this up.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/protonmail-bridge.png",
      "image": "shenxn/protonmail-bridge:latest",
      "ports": [
        "143/tcp",
        "25/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/ProtonMail-Bridge",
          "container": "/root"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 254
    },
    {
      "title": "Prowlarr",
      "description": "Prowlarr is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Video"
      ],
      "name": "prowlarr",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/prowlarr.png",
      "image": "ghcr.io/linuxserver/prowlarr:develop",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "9696:9696/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Prowlarr",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 255
    },
    {
      "title": "Pure-FTP Server",
      "description": "Pure-FTPd is a free (BSD), secure, production-quality and standard-conformant FTP server.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Networkother",
        "Utilities"
      ],
      "name": "pureftp",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/pureftpd-icon.jpg",
      "image": "stilliard/pure-ftpd:hardened",
      "env": [
        {
          "name": "FTP_USER_NAME",
          "label": "FTP_USER_NAME",
          "default": "depot",
          "preset": true
        },
        {
          "name": "FTP_USER_PASS",
          "label": "FTP_USER_PASS",
          "default": "badpass"
        },
        {
          "name": "FTP_USER_HOME",
          "label": "FTP_USER_HOME",
          "default": "/data",
          "preset": true
        },
        {
          "name": "FTP_USER_GID",
          "label": "FTP_USER_GID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "FTP_USER_UID",
          "label": "FTP_USER_UID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        },
        {
          "name": "PUBLICHOST",
          "label": "PUBLICHOST",
          "default": "localhost"
        }
      ],
      "ports": [
        "21/tcp",
        "30000/tcp",
        "30001/tcp",
        "30002/tcp",
        "30003/tcp",
        "30004/tcp",
        "30005/tcp",
        "30006/tcp",
        "30007/tcp",
        "30008/tcp",
        "30009/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/pure-ftpd/passwd",
          "bind": "/opt/mediadepot/apps/pureftp"
        },
        {
          "container": "/data/tvshows",
          "bind": "/media/storage/tvshows"
        },
        {
          "container": "/data/movies",
          "bind": "/media/storage/movies"
        },
        {
          "container": "/data/music",
          "bind": "/media/storage/music"
        },
        {
          "container": "/data/ebooks",
          "bind": "/media/storage/ebooks"
        },
        {
          "container": "/data/photos",
          "bind": "/media/storage/photos"
        },
        {
          "container": "/data/documents",
          "bind": "/media/storage/documents"
        },
        {
          "container": "/data/downloads",
          "bind": "/media/storage/downloads"
        },
        {
          "container": "/data/software",
          "bind": "/media/storage/software"
        },
        {
          "container": "/data/blackhole",
          "bind": "/media/temp/blackhole"
        },
        {
          "container": "/data/processing",
          "bind": "/media/temp/processing"
        }
      ],
      "id": 256
    },
    {
      "title": "Pwndrop",
      "description": "[Pwndrop](https://github.com/kgretzky/pwndrop) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "File Sharing",
        "Security"
      ],
      "name": "Pwndrop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/pwndrop/config</p>",
      "logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
      "image": "linuxserver/pwndrop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SECRET_PATH",
          "label": "SECRET_PATH",
          "default": "/pwndrop",
          "description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui. [OPTIONAL]"
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/pwndrop/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 257
    },
    {
      "title": "Pydio",
      "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Other"
      ],
      "name": "pydio",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pydio-icon.png",
      "image": "linuxserver/pydio:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "443/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Pydio",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Pydio",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 258
    },
    {
      "title": "Pydio-cells",
      "description": "[Pydio-cells](https://pydio.com/) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "File Sharing"
      ],
      "name": "Pydio-cells",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/pydio-cells/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pydio-cells-icon.png",
      "image": "linuxserver/pydio-cells:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "EXTERNALURL",
          "label": "EXTERNALURL",
          "default": "yourdomain.url",
          "description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT)."
        },
        {
          "name": "SERVER_IP",
          "label": "SERVER_IP",
          "default": "0.0.0.0",
          "description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy). [OPTIONAL]"
        }
      ],
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/pydio-cells/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 259
    },
    {
      "title": "Pyload-ng",
      "description": "[pyLoad](https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "Pyload-ng",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/pyload-ng/config<br>mkdir -p /srv/lsio/pyload-ng/downloads</p>",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/pyload-logo.png",
      "image": "linuxserver/pyload-ng:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "8000:8000/tcp",
        "9666:9666/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/pyload-ng/config"
        },
        {
          "container": "/downloads",
          "bind": "/srv/lsio/pyload-ng/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 260
    },
    {
      "title": "Pylon",
      "description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Programming"
      ],
      "name": "Pylon",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/pylon/config<br>mkdir -p /srv/lsio/pylon/code</p>",
      "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
      "image": "linuxserver/pylon:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "GITURL",
          "label": "GITURL",
          "default": "https://github.com/linuxserver/docker-pylon.git",
          "description": "Specify a git repo to checkout on first startup [OPTIONAL]"
        },
        {
          "name": "PYUSER",
          "label": "PYUSER",
          "default": "myuser",
          "description": "Specify a basic auth user. [OPTIONAL]"
        },
        {
          "name": "PYPASS",
          "label": "PYPASS",
          "default": "mypass",
          "description": "Specify a basic auth password. [OPTIONAL]"
        }
      ],
      "ports": [
        "3131:3131/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/pylon/config"
        },
        {
          "container": "/code",
          "bind": "/srv/lsio/pylon/code"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 261
    },
    {
      "title": "qBittorrent",
      "description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "qbittorrent",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/qbittorrent-icon.png",
      "image": "linuxserver/qbittorrent:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "6881:6881/tcp",
        "6881:6881/udp",
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/qBittorrent",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 262
    },
    {
      "title": "qdirstat",
      "description": "QDirStat is a graphical application to show where your disk space has gone and to help you to clean it up.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Utilities"
      ],
      "name": "qdirstat",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/cardigann.png",
      "image": "jlesage/qdirstat:latest",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        }
      ],
      "ports": [
        "5800/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/qdirstat"
        },
        {
          "container": "/storage/opt",
          "bind": "/opt"
        },
        {
          "container": "/storage/mnt",
          "bind": "/mnt"
        }
      ],
      "id": 263
    },
    {
      "title": "Qemu-static",
      "description": "# This container needs special attention. Please check https://hub.docker.com/r/linuxserver/qemu-static for details.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Docker"
      ],
      "name": "Qemu-static",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/qemu-static/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qemu-logo.png",
      "image": "linuxserver/qemu-static:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/qemu-static/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 264
    },
    {
      "title": "Quassel IRC",
      "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core - much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Messenger"
      ],
      "name": "quassel-core",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/quassel-core-icon.png",
      "image": "linuxserver/quassel-core:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "4242:4242/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Quassel-core",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 265
    },
    {
      "title": "RabbitMQ",
      "description": "Highly reliable enterprise messaging system",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Messaging"
      ],
      "name": "RabbitMQ",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
      "image": "rabbitmq:latest",
      "ports": [
        "5671/tcp",
        "5672/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/rabbitmq"
        }
      ],
      "id": 266
    },
    {
      "title": "Radarr",
      "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Video"
      ],
      "name": "radarr",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/radarr.png",
      "image": "hotio/radarr:release",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "7878:7878/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Radarr",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Movies",
          "container": "/movies"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 267
    },
    {
      "title": "Raneto",
      "description": "[Raneto](http://raneto.com/) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Content Management"
      ],
      "name": "Raneto",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/raneto/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/raneto-logo.png",
      "image": "linuxserver/raneto:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/raneto/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 268
    },
    {
      "title": "Rawtherapee",
      "description": "[RawTherapee](https://rawtherapee.com/) is a free, cross-platform raw image processing program!",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Image Editor"
      ],
      "name": "Rawtherapee",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/rawtherapee/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rawtherapee-logo.png",
      "image": "linuxserver/rawtherapee:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/rawtherapee/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 269
    },
    {
      "title": "Rclone Config Backup",
      "description": "Rclone is a command line program to sync files and directories to and from cloud providers (Dropbox, GDrive, Box, etc)",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Backup",
        "Cloud",
        "Networkother",
        "Tools"
      ],
      "name": "rclone",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/rclone.png",
      "image": "mediadepot/rclone:latest",
      "ports": [],
      "volumes": [
        {
          "container": "/srv/rclone/config",
          "bind": "/opt/mediadepot/apps/rclone"
        },
        {
          "container": "/mnt/data",
          "bind": "/opt/mediadepot/apps"
        }
      ],
      "id": 270
    },
    {
      "title": "Rdesktop",
      "description": "[Rdesktop](http://xrdp.org/) - Containers containing full desktop environments in many popular flavors for Alpine, Ubuntu, Arch, and Fedora accessible via RDP.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Remote Desktop"
      ],
      "name": "Rdesktop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/rdesktop/config<br><br>mkdir -p /srv/lsio/rdesktop/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png",
      "image": "linuxserver/rdesktop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3389:3389/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/rdesktop/config"
        },
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        },
        {
          "container": "/config",
          "bind": "/srv/lsio/rdesktop/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 271
    },
    {
      "title": "Reactive-Resume",
      "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "reactive-resume",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/reactiveresume.png",
      "image": "amruthpillai/reactive-resume:latest",
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/ReactiveResume",
          "container": "/usr/src/app"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 272
    },
    {
      "title": "Readarr",
      "description": "Readarr - Book Manager and Automation (Sonarr for Ebooks)",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Mediaappbooks"
      ],
      "name": "readarr",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/readarr-logo.png",
      "image": "ghcr.io/linuxserver/readarr:nightly",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "ports": [
        "8787/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/readarr"
        },
        {
          "container": "/downloads",
          "bind": "/media/storage/downloads/ebooks"
        },
        {
          "container": "/books",
          "bind": "/media/storage/ebooks"
        },
        {
          "container": "/blackhole",
          "bind": "/media/temp/blackhole/ebooks"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "id": 273
    },
    {
      "title": "Redis",
      "description": "Open-source in-memory data structure store",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "Redis",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "image": "redis:latest",
      "ports": [
        "6379/tcp"
      ],
      "volumes": [
        {
          "container": "/data"
        }
      ],
      "id": 274
    },
    {
      "title": "Redis Cluster",
      "description": "Open-source in-memory data structure store - Cluster mode",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "Redis Cluster",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/redis-cluster/docker-stack.yaml"
      },
      "id": 275
    },
    {
      "title": "Redmine",
      "description": "Open-source project management tool",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Projectmanagement"
      ],
      "name": "Redmine",
      "note": "Default user and password are admin/admin",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
      "image": "redmine:latest",
      "ports": [
        "3000/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/src/redmine/files"
        }
      ],
      "id": 276
    },
    {
      "title": "Registry",
      "description": "Docker image registry",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Docker"
      ],
      "name": "Registry",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": [
        "5000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "id": 277
    },
    {
      "title": "Registry (cache)",
      "description": "Docker image registry configured as a DockerHub pull through cache",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Docker"
      ],
      "name": "Registry (cache)",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "env": [
        {
          "name": "REGISTRY_PROXY_REMOTEURL",
          "default": "https://registry-1.docker.io",
          "preset": true
        }
      ],
      "ports": [
        "5000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "id": 278
    },
    {
      "title": "Remmina",
      "description": "[Remmina](https://remmina.org/) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, SSH and EXEC are supported.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Remote Desktop"
      ],
      "name": "Remmina",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/remmina/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
      "image": "linuxserver/remmina:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/remmina/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 279
    },
    {
      "title": "Resilio Sync",
      "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Tools"
      ],
      "name": "resilio-sync",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/resilio.png",
      "image": "linuxserver/resilio-sync:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Resilio-Sync",
          "container": "/config"
        },
        {
          "container": "/sync"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 280
    },
    {
      "title": "Retroarch",
      "description": "[RetroArch](https://retroarch.com/) is a frontend for emulators, game engines and media players. It enables you to run classic games on a wide range of computers and consoles through its slick graphical interface.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Retroarch",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/retroarch/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/retroarch-logo.png",
      "image": "linuxserver/retroarch:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/retroarch/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 281
    },
    {
      "title": "Rpcs3",
      "description": "[RPCS3](https://rpcs3.net/) is a multi-platform open-source Sony PlayStation 3 emulator and debugger written in C++ for Windows, Linux, macOS and FreeBSD.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Rpcs3",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/rpcs3/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rpcs3-logo.png",
      "image": "linuxserver/rpcs3:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/rpcs3/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 282
    },
    {
      "title": "Rsnapshot",
      "description": "[Rsnapshot](http://www.rsnapshot.org/) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Backup"
      ],
      "name": "Rsnapshot",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/rsnapshot/config<br>mkdir -p /srv/lsio/rsnapshot/.snapshots<br>mkdir -p /srv/lsio/rsnapshot/data</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png",
      "image": "linuxserver/rsnapshot:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/rsnapshot/config"
        },
        {
          "container": "/.snapshots",
          "bind": "/srv/lsio/rsnapshot/.snapshots"
        },
        {
          "container": "/data",
          "bind": "/srv/lsio/rsnapshot/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 283
    },
    {
      "title": "Rustdesk",
      "description": "[RustDesk](https://rustdesk.com/) is a full-featured open source remote control alternative for self-hosting and security with minimal configuration.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Remote Desktop"
      ],
      "name": "Rustdesk",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/rustdesk/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rustdesk-logo.png",
      "image": "linuxserver/rustdesk:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/rustdesk/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 284
    },
    {
      "title": "ruTorrent",
      "description": "Popular torrent client with a webui for ease of use.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "rutorrent",
      "note": "",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
      "image": "linuxserver/rutorrent:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp",
        "51413:51413/tcp",
        "6881:6881/udp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/ruTorrent",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 285
    },
    {
      "title": "SABnzbd",
      "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "sabnzbd",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/sabnzbd-icon.png",
      "image": "linuxserver/sabnzbd:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8080:8080/tcp",
        "9090:9090/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Sabnzbd",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/Downloads/incomplete",
          "container": "/incomplete-downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 286
    },
    {
      "title": "Scality S3",
      "description": "Standalone AWS S3 protocol server",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Storage"
      ],
      "name": "Scality S3",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
      "image": "scality/s3server",
      "env": [
        {
          "name": "SCALITY_ACCESS_KEY",
          "label": "Scality S3 access key"
        },
        {
          "name": "SCALITY_SECRET_KEY",
          "label": "Scality S3 secret key"
        }
      ],
      "ports": [
        "8000/tcp"
      ],
      "volumes": [
        {
          "container": "/usr/src/app/localData"
        },
        {
          "container": "/usr/src/app/localMetadata"
        }
      ],
      "id": 287
    },
    {
      "title": "Scrutiny",
      "description": "WebUI for smartd S.M.A.R.T monitoring",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Monitoring"
      ],
      "name": "scrutiny",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/scrutiny.png",
      "image": "analogj/scrutiny:latest",
      "env": [],
      "ports": [
        "8080/tcp"
      ],
      "volumes": [
        {
          "container": "/scrutiny/config/",
          "bind": "/opt/mediadepot/apps/scrutiny"
        },
        {
          "container": "/run/udev",
          "bind": "/run/udev",
          "readonly": true
        }
      ],
      "id": 288
    },
    {
      "title": "Sematext Docker Agent",
      "description": "Collect logs, metrics and docker events",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Logmanagement",
        "Monitoring"
      ],
      "name": "sematext-agent",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "image": "sematext/sematext-agent-docker:latest",
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "id": 289
    },
    {
      "title": "Series-troxide",
      "description": "[Series Troxide](https://github.com/MaarifaMaarifa/series-troxide) a Simple and Modern Series Tracker",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media Management"
      ],
      "name": "Series-troxide",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/series-troxide/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/series-troxide-logo.png",
      "image": "linuxserver/series-troxide:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/series-troxide/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 290
    },
    {
      "title": "Shiori",
      "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "shiori",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/shiori-icon.png",
      "image": "radhifadlillah/shiori:latest",
      "ports": [
        "8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Shiori",
          "container": "/srv/shiori"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 291
    },
    {
      "title": "Shotcut",
      "description": "[Shotcut](https://www.shotcut.org/) is a free, open source, cross-platform video editor.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video Editor"
      ],
      "name": "Shotcut",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/shotcut/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/shotcut-logo.png",
      "image": "linuxserver/shotcut:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/shotcut/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 292
    },
    {
      "title": "SickChill",
      "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Video"
      ],
      "name": "sickchill",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/sickchill-icon.png",
      "image": "linuxserver/sickchill:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8081:8081/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/SickChill",
          "container": "/config"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 293
    },
    {
      "title": "SickGear",
      "description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Video"
      ],
      "name": "sickgear",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/sickgear-icon.png",
      "image": "linuxserver/sickgear:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8081:8081/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/SickGear",
          "container": "/config"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 294
    },
    {
      "title": "SickRage",
      "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Mediaappvideo"
      ],
      "name": "sickrage",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/sickrage-icon.png",
      "image": "linuxserver/sickrage:latest",
      "env": [
        {
          "name": "PGID",
          "label": "PGID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "15000",
          "preset": true
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Los_Angeles"
        }
      ],
      "ports": [
        "8081/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/opt/mediadepot/apps/sickrage"
        },
        {
          "container": "/downloads",
          "bind": "/media/storage/downloads/tvshows"
        },
        {
          "container": "/tv",
          "bind": "/media/storage/tvshows"
        },
        {
          "container": "/blackhole",
          "bind": "/media/temp/blackhole/tvshows"
        }
      ],
      "id": 295
    },
    {
      "title": "SmokePing",
      "description": "SmokePing is a latency logging and graphing and alerting system. It consists of a daemon process which organizes the latency measurements and a CGI which presents the graphs.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Management"
      ],
      "name": "smokeping",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/smokeping-icon.png",
      "image": "linuxserver/smokeping:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Smokeping",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Smokeping",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 296
    },
    {
      "title": "Snibox",
      "description": "Self-hosted snippet manager.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "Snibox",
      "note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/snibox.png",
      "image": "snowmean/snibox-sqlite:latest",
      "ports": [
        "3010:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Snibox",
          "container": "/app/db/database"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 297
    },
    {
      "title": "Socket-proxy",
      "description": "# This container needs special attention. Please check https://hub.docker.com/r/linuxserver/socket-proxy for details.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Docker"
      ],
      "name": "Socket-proxy",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/socket-proxy/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/docker-logo.png",
      "image": "linuxserver/socket-proxy:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/socket-proxy/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 298
    },
    {
      "title": "Solr",
      "description": "Open-source enterprise search platform",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Searchengine"
      ],
      "name": "Solr",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
      "image": "solr:latest",
      "ports": [
        "8983/tcp"
      ],
      "volumes": [
        {
          "container": "/opt/solr/mydata"
        }
      ],
      "id": 299
    },
    {
      "title": "Sonarr",
      "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders",
        "Video"
      ],
      "name": "sonarr",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/sonarr-icon.png",
      "image": "hotio/sonarr:release",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8989:8989/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Sonarr",
          "container": "/config"
        },
        {
          "bind": "/dev/rtc",
          "container": "/dev/rtc"
        },
        {
          "bind": "/portainer/TV",
          "container": "/tv"
        },
        {
          "bind": "/portainer/Downloads",
          "container": "/downloads"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 300
    },
    {
      "title": "Speedtest-tracker",
      "description": "[Speedtest-tracker](https://github.com/alexjustesen/speedtest-tracker) is a self-hosted internet performance tracking application that runs speedtest checks against Ookla's Speedtest service.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Monitoring"
      ],
      "name": "Speedtest-tracker",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/speedtest-tracker/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/speedtest-tracker-logo.png",
      "image": "linuxserver/speedtest-tracker:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "APP_KEY",
          "label": "APP_KEY",
          "default": "",
          "description": "App key used for encrypting stored data. You can generate a key at [https://speedtest-tracker.dev](https://speedtest-tracker.dev)"
        },
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "",
          "description": "The IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`"
        },
        {
          "name": "DB_CONNECTION",
          "label": "DB_CONNECTION",
          "default": "sqlite",
          "description": "Set the database type to use. `sqlite`, `pgsql`, or `mysql`"
        },
        {
          "name": "SPEEDTEST_SCHEDULE",
          "label": "SPEEDTEST_SCHEDULE",
          "default": "",
          "description": "Set the test schedule in cron format. e.g. `0 */6 * * *`"
        },
        {
          "name": "SPEEDTEST_SERVERS",
          "label": "SPEEDTEST_SERVERS",
          "default": "",
          "description": "A comma-separated list of server IDs to test against. Run `docker run -it --rm --entrypoint /bin/bash lscr.io/linuxserver/speedtest-tracker:latest list-servers` to get a list of nearby servers."
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "",
          "description": "Database hostname (postgres/mysql). [OPTIONAL]"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "",
          "description": "Database port (postgres/mysql). [OPTIONAL]"
        },
        {
          "name": "DB_DATABASE",
          "label": "DB_DATABASE",
          "default": "",
          "description": "Database name (postgres/mysql). [OPTIONAL]"
        },
        {
          "name": "DB_USERNAME",
          "label": "DB_USERNAME",
          "default": "",
          "description": "Database username (postgres/mysql). [OPTIONAL]"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD",
          "default": "",
          "description": "Database password (postgres/mysql). [OPTIONAL]"
        },
        {
          "name": "DISPLAY_TIMEZONE",
          "label": "DISPLAY_TIMEZONE",
          "default": "Etc/UTC",
          "description": "Timezone for the UI. [OPTIONAL]"
        },
        {
          "name": "PRUNE_RESULTS_OLDER_THAN",
          "label": "PRUNE_RESULTS_OLDER_THAN",
          "default": "0",
          "description": "Days to keep test results. [OPTIONAL]"
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/speedtest-tracker/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 301
    },
    {
      "title": "Spotube",
      "description": "[Spotube](https://spotube.krtirtho.dev/) is an open source, cross-platform Spotify client compatible across multiple platforms utilizing Spotify's data API and YouTube, Piped.video or JioSaavn as an audio source, eliminating the need for Spotify Premium",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "Spotube",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/spotube/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/spotube-logo.png",
      "image": "linuxserver/spotube:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/spotube/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 302
    },
    {
      "title": "SQL Server",
      "description": "Microsoft SQL Server on Linux",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Database"
      ],
      "name": "SQL Server",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "mcr.microsoft.com/mssql/server:2019-latest",
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "SA_PASSWORD",
          "label": "SA password"
        }
      ],
      "ports": [
        "1433/tcp"
      ],
      "id": 303
    },
    {
      "title": "SQL Server Express",
      "description": "Microsoft SQL Server Express for Windows containers",
      "type": 1,
      "platforms": [
        "windows"
      ],
      "categories": [
        "Database"
      ],
      "name": "SQL Server Express",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-express:latest",
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "ports": [
        "1433/tcp"
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ],
      "id": 304
    },
    {
      "title": "Sqlitebrowser",
      "description": "[DB Browser for SQLite](https://sqlitebrowser.org/) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Databases"
      ],
      "name": "Sqlitebrowser",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/sqlitebrowser/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
      "image": "linuxserver/sqlitebrowser:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/sqlitebrowser/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 305
    },
    {
      "title": "Steamos",
      "description": "[SteamOS](https://www.steamdeck.com/) is an Arch based Linux distribution made by Valve Software. This container is a vanilla Arch install with Steam repositories added for software support. **This container will only work with modern AMD/Intel GPUs on a real Linux Host**",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Games"
      ],
      "name": "Steamos",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/steamos/config<br><br></p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/steamos-logo.png",
      "image": "linuxserver/steamos:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "DRINODE",
          "label": "DRINODE",
          "default": "/dev/dri/renderD128",
          "description": "Specify the render device (GPU) for the contianer to use."
        },
        {
          "name": "HOST_IP",
          "label": "HOST_IP",
          "default": "192.168.100.10",
          "description": "Specify the IP of the host, needed for LAN Remote Play. [OPTIONAL]"
        },
        {
          "name": "STARTUP",
          "label": "STARTUP",
          "default": "KDE",
          "description": "KDE to boot into desktop mode, BIGPICTURE to boot into gamescope. [OPTIONAL]"
        },
        {
          "name": "RESOLUTION",
          "label": "RESOLUTION",
          "default": "1920x1080",
          "description": "When booting into BIGPICTURE mode the screen resolution will be bound to this value. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp",
        "27031-27036:27031-27036/udp",
        "27031-27036:27031-27036",
        "47984-47990:47984-47990",
        "48010-48010:48010-48010",
        "47998-48000:47998-48000/udp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/steamos/config"
        },
        {
          "container": "/dev/input",
          "bind": "/dev/input"
        },
        {
          "container": "/run/udev/data",
          "bind": "/run/udev/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 306
    },
    {
      "title": "Swag",
      "description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Reverse Proxy"
      ],
      "name": "Swag",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/swag/config</p>",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif",
      "image": "linuxserver/swag:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "URL",
          "label": "URL",
          "default": "example.com",
          "description": "Top url you have control over (e.g. `example.com` if you own it, or `customsubdomain.example.com` if dynamic dns)."
        },
        {
          "name": "VALIDATION",
          "label": "VALIDATION",
          "default": "http",
          "description": "Certbot validation method to use, options are `http` or `dns` (`dns` method also requires `DNSPLUGIN` variable set)."
        },
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "default": "www,",
          "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this *exactly* to `wildcard` (wildcard cert is available via `dns` validation only) [OPTIONAL]"
        },
        {
          "name": "CERTPROVIDER",
          "label": "CERTPROVIDER",
          "default": "",
          "description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt. [OPTIONAL]"
        },
        {
          "name": "DNSPLUGIN",
          "label": "DNSPLUGIN",
          "default": "cloudflare",
          "description": "Required if `VALIDATION` is set to `dns`. Options are `acmedns`, `aliyun`, `azure`, `bunny`, `cloudflare`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `do`, `domeneshop`, `dreamhost`, `duckdns`, `dynu`, `freedns`, `gandi`, `gehirn`, `glesys`, `godaddy`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `namecheap`, `netcup`, `njalla`, `nsone`, `ovh`, `porkbun`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip`, and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`. [OPTIONAL]"
        },
        {
          "name": "PROPAGATION",
          "label": "PROPAGATION",
          "default": "",
          "description": "Optionally override (in seconds) the default propagation time for the dns plugins. [OPTIONAL]"
        },
        {
          "name": "EMAIL",
          "label": "EMAIL",
          "default": "",
          "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL). [OPTIONAL]"
        },
        {
          "name": "ONLY_SUBDOMAINS",
          "label": "ONLY_SUBDOMAINS",
          "default": "false",
          "description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true` [OPTIONAL]"
        },
        {
          "name": "EXTRA_DOMAINS",
          "label": "EXTRA_DOMAINS",
          "default": "",
          "description": "Additional fully qualified domain names (comma separated, no spaces) ie. `example.net,subdomain.example.net,*.example.org` [OPTIONAL]"
        },
        {
          "name": "STAGING",
          "label": "STAGING",
          "default": "false",
          "description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes. [OPTIONAL]"
        },
        {
          "name": "DISABLE_F2B",
          "label": "DISABLE_F2B",
          "default": "",
          "description": "Set to `true` to disable the Fail2ban service in the container, if you're already running it elsewhere or using a different IPS. [OPTIONAL]"
        },
        {
          "name": "SWAG_AUTORELOAD",
          "label": "SWAG_AUTORELOAD",
          "default": "",
          "description": "Set to `true` to enable automatic reloading of confs on change without stopping/restarting nginx. Your filesystem must support inotify. This functionality was previously offered [via mod](https://github.com/linuxserver/docker-mods/tree/swag-auto-reload). [OPTIONAL]"
        },
        {
          "name": "SWAG_AUTORELOAD_WATCHLIST",
          "label": "SWAG_AUTORELOAD_WATCHLIST",
          "default": "",
          "description": "A [pipe](https://en.wikipedia.org/wiki/Vertical_bar)-separated list of additional folders for auto reload to watch in addition to `/config/nginx` [OPTIONAL]"
        }
      ],
      "ports": [
        "443:443/tcp",
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/swag/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 307
    },
    {
      "title": "Swarm monitoring",
      "description": "Monitor your cluster performances with Prometheus & Grafana",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Monitoring"
      ],
      "name": "Swarm monitoring",
      "note": "Requires Docker version 19.03.0+. <b>Make sure to add the <code>monitoring == true</code> one of your Swarm manager node before deploying this stack.</b>",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/swarm/monitoring/docker-compose.yml"
      },
      "id": 308
    },
    {
      "title": "Synclounge",
      "description": "[Synclounge](https://github.com/samcm/synclounge) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media Tools"
      ],
      "name": "Synclounge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/synclounge/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png",
      "image": "linuxserver/synclounge:latest",
      "env": [
        {
          "name": "AUTH_LIST",
          "label": "AUTH_LIST",
          "default": "plexuser1,plexuser2,email1,machineid1",
          "description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces. [OPTIONAL]"
        }
      ],
      "ports": [
        "8088:8088/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/synclounge/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 309
    },
    {
      "title": "SyncThing",
      "description": "Syncthing is a continuous file synchronization program. It synchronizes files between two or more computers in real time, safely protected from prying eyes.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Backup",
        "Cloud",
        "Other",
        "Tools"
      ],
      "name": "syncthing",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/syncthing-icon.png",
      "image": "linuxserver/syncthing:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8384:8384/tcp",
        "21027:21027/udp",
        "22000:22000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Syncthing",
          "container": "/config"
        },
        {
          "container": "/sync"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 310
    },
    {
      "title": "Syslog-ng",
      "description": "[syslog-ng](https://www.syslog-ng.com/products/open-source-log-management/) allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Monitoring"
      ],
      "name": "Syslog-ng",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/syslog-ng/config<br></p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png",
      "image": "linuxserver/syslog-ng:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "LOG_TO_STDOUT",
          "label": "LOG_TO_STDOUT",
          "default": "",
          "description": "If set to `true` container will log to stdout, otherwise will log to `/config/log/`. [OPTIONAL]"
        }
      ],
      "ports": [
        "514:5514/udp",
        "601:6601/tcp",
        "6514:6514/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/syslog-ng/config"
        },
        {
          "container": "/var/log",
          "bind": "/var/log"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 311
    },
    {
      "title": "Tautulli",
      "description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "tautulli",
      "note": "<b>Port 8181</b> The webui for Tautulli's webui<br/></br>Configuration <ul><li><b>/config</b> - Storing Configuration and the Tautulli database</li><li><b>/logs</b> - Map to you plex logs (required for IP logging)</li></ul>",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tautulli-icon.png",
      "image": "linuxserver/tautulli:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "8181:8181/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Logs",
          "container": "/logs"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Tautulli",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 312
    },
    {
      "title": "TheLounge",
      "description": "A self-hosted web IRC client.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Messenger"
      ],
      "name": "thelounge",
      "note": "",
      "logo": "https://raw.githubusercontent.com/linuxserver/community-templates/master/lsiocommunity/img/shout-icon.png",
      "image": "linuxserver/thelounge:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "9000:9000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/TheLounge",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 313
    },
    {
      "title": "TiddlyWiki",
      "description": "A unique, non-linear notebook wiki.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "Wiki"
      ],
      "name": "tiddlywiki",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tiddlywiki.png",
      "image": "mazzolino/tiddlywiki:latest",
      "ports": [
        "8080:8080/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/TiddlyWiki",
          "container": "/var/lib/tiddlywiki"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 314
    },
    {
      "title": "Tiny Tiny RSS",
      "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other"
      ],
      "name": "tt-rss",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tt-rss-icon.png",
      "image": "lunik1/tt-rss:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/tt-rss",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 315
    },
    {
      "title": "TOSIBOX Lock for Container",
      "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Edge"
      ],
      "name": "TOSIBOX Lock for Container",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/tosibox/docker-compose.yml"
      },
      "id": 316
    },
    {
      "title": "Transmission",
      "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "transmission",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/transmission-icon.png",
      "image": "linuxserver/transmission:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "9091:9091/tcp",
        "51413:51413/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Transmission",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/Downloads",
          "container": "/downloads"
        },
        {
          "container": "/watch"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 317
    },
    {
      "title": "Transmission-OpenVPN",
      "description": "This container contains OpenVPN and Transmission with a configuration where Transmission is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "VPN",
        "Tools"
      ],
      "name": "transmission-openvpn",
      "note": "List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/transmission-icon.png",
      "image": "haugene/transmission-openvpn:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "MULLVAD",
          "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
          "label": "OPENVPN_PROVIDER",
          "name": "OPENVPN_PROVIDER"
        },
        {
          "default": "",
          "label": "OPENVPN_USERNAME",
          "name": "OPENVPN_USERNAME"
        },
        {
          "default": "",
          "label": "OPENVPN_PASSWORD",
          "name": "OPENVPN_PASSWORD"
        },
        {
          "default": "192.168.0.0/24",
          "label": "LOCAL_NETWORK",
          "name": "LOCAL_NETWORK"
        }
      ],
      "ports": [
        "9091:9091/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Downloads",
          "container": "/data"
        },
        {
          "bind": "/etc/localtime",
          "container": "/etc/localtime"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 318
    },
    {
      "title": "Tvheadend",
      "description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT&gt;IP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT&gt;IP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Video",
        "Other"
      ],
      "name": "tvheadend",
      "note": "",
      "logo": "http://i.imgur.com/zGSUAT4.png",
      "image": "linuxserver/tvheadend:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "9981:9981/tcp",
        "9982:9982/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/TVHeadend",
          "container": "/config"
        },
        {
          "container": "/recordings"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 319
    },
    {
      "title": "Twitch Points Miner",
      "description": "A simple script that will watch a stream for you and earn the channel points.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools",
        "Other"
      ],
      "name": "twitch-points-miner",
      "note": "Requires run.py, this is your starter script with your configuration. Please copy and modify accordingly <a href='https://github.com/rdavydov/Twitch-Channel-Points-Miner-v2/tree/master?tab=readme-ov-file#how-to-use'/>Here</a>",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/twitchpointsminer.png",
      "image": "rdavidoff/twitch-channel-points-miner-v2:latest",
      "ports": [
        "5000:5000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/TwitchPointsMiner/run.py",
          "container": "/usr/src/app/run.py"
        },
        {
          "bind": "/portainer/Files/AppData/TwitchPointsMiner/cookies",
          "container": "/usr/src/app/cookies"
        },
        {
          "bind": "/portainer/Files/AppData/TwitchPointsMiner/logs",
          "container": "/usr/src/app/logs"
        },
        {
          "bind": "/portainer/Files/AppData/TwitchPointsMiner/analytics",
          "container": "/usr/src/app/analytics"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 320
    },
    {
      "title": "Ubooquity",
      "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cloud",
        "Books"
      ],
      "name": "ubooquity",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ubooquity-icon.png",
      "image": "linuxserver/ubooquity:latest",
      "env": [
        {
          "label": "MAXMEM",
          "name": "MAXMEM",
          "set": "512"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "2202:2202/tcp",
        "2203:2203/tcp"
      ],
      "volumes": [
        {
          "container": "/books"
        },
        {
          "container": "/comics"
        },
        {
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 321
    },
    {
      "title": "Ubuntu",
      "description": "Debian-based Linux operating system",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Operatingsystem"
      ],
      "name": "Ubuntu",
      "note": "",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
      "image": "ubuntu:latest",
      "id": 322
    },
    {
      "title": "Ungoogled-chromium",
      "description": "[Ungoogled Chromium](https://github.com/ungoogled-software/ungoogled-chromium) is Google Chromium, sans dependency on Google web services.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Web Browser"
      ],
      "name": "Ungoogled-chromium",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/ungoogled-chromium/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ungoogled-chromium-logo.png",
      "image": "linuxserver/ungoogled-chromium:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "CHROME_CLI",
          "label": "CHROME_CLI",
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/ungoogled-chromium/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 323
    },
    {
      "title": "UniFi Controller",
      "description": "The Unifi-controller Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Management",
        "Tools"
      ],
      "name": "unifi-controller",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/unifi-icon.png",
      "image": "linuxserver/unifi-controller:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "3478:3478/udp",
        "10001:10001/udp",
        "8080:8080/tcp",
        "8081:8081/tcp",
        "8443:8443/tcp",
        "8843:8843/tcp",
        "8880:8880/tcp",
        "6789:6789/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Unifi",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 324
    },
    {
      "title": "Unifi-network-application",
      "description": "The [Unifi-network-application](https://ui.com/) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Network"
      ],
      "name": "Unifi-network-application",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/unifi-network-application/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
      "image": "linuxserver/unifi-network-application:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "MONGO_USER",
          "label": "MONGO_USER",
          "default": "unifi",
          "description": "Mongodb Username. Only evaluated on first run. **Special characters must be [url encoded](https://en.wikipedia.org/wiki/Percent-encoding)**."
        },
        {
          "name": "MONGO_PASS",
          "label": "MONGO_PASS",
          "default": "",
          "description": "Mongodb Password. Only evaluated on first run. **Special characters must be [url encoded](https://en.wikipedia.org/wiki/Percent-encoding)**."
        },
        {
          "name": "MONGO_HOST",
          "label": "MONGO_HOST",
          "default": "unifi-db",
          "description": "Mongodb Hostname. Only evaluated on first run."
        },
        {
          "name": "MONGO_PORT",
          "label": "MONGO_PORT",
          "default": "27017",
          "description": "Mongodb Port. Only evaluated on first run."
        },
        {
          "name": "MONGO_DBNAME",
          "label": "MONGO_DBNAME",
          "default": "unifi",
          "description": "Mongodb Database Name (stats DB is automatically suffixed with `_stat`). Only evaluated on first run."
        },
        {
          "name": "MONGO_AUTHSOURCE",
          "label": "MONGO_AUTHSOURCE",
          "default": "admin",
          "description": "Mongodb [authSource](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.authSource). For Atlas set to `admin`. Only evaluated on first run."
        },
        {
          "name": "MEM_LIMIT",
          "label": "MEM_LIMIT",
          "default": "1024",
          "description": "Optionally change the Java memory limit (in Megabytes). Set to `default` to reset to default [OPTIONAL]"
        },
        {
          "name": "MEM_STARTUP",
          "label": "MEM_STARTUP",
          "default": "1024",
          "description": "Optionally change the Java initial/minimum memory (in Megabytes). Set to `default` to reset to default [OPTIONAL]"
        },
        {
          "name": "MONGO_TLS",
          "label": "MONGO_TLS",
          "default": "",
          "description": "Mongodb enable [TLS](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.tls). Only evaluated on first run. [OPTIONAL]"
        }
      ],
      "ports": [
        "8443:8443/tcp",
        "3478:3478/udp",
        "10001:10001/udp",
        "8080:8080/tcp",
        "1900:1900/udp",
        "8843:8843/tcp",
        "8880:8880/tcp",
        "6789:6789/tcp",
        "5514:5514/udp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/unifi-network-application/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 325
    },
    {
      "title": "Uptime Kuma",
      "description": "It is a self-hosted monitoring tool like Uptime Robot",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Task Server"
      ],
      "name": "uptime-kuma",
      "note": "",
      "logo": "https://images.opencollective.com/uptime-kuma/29c5113/logo/256.png",
      "image": "louislam/uptime-kuma:latest",
      "ports": [
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/UptimeKuma",
          "container": "/app/data"
        }
      ],
      "restart_policy": "always",
      "id": 326
    },
    {
      "title": "UrlWatch",
      "description": "A tool for monitoring webpages for updates",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools"
      ],
      "name": "urlwatch",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/urlwatch.png",
      "image": "mediadepot/urlwatch:master",
      "env": [],
      "ports": [
        "8081/tcp"
      ],
      "volumes": [
        {
          "container": "/srv/urlwatch/config",
          "bind": "/opt/mediadepot/apps/urlwatch"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "id": 327
    },
    {
      "title": "Vaultwarden",
      "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "vaultwarden",
      "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/bitwarden.png",
      "image": "vaultwarden/server:latest",
      "ports": [
        ":80/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Vaultwarden",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 328
    },
    {
      "title": "Vscodium",
      "description": "[VSCodium](https://vscodium.com/) is a community-driven, freely-licensed binary distribution of Microsoft’s editor VS Code.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Programming"
      ],
      "name": "Vscodium",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/vscodium/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/vscodium-icon.png",
      "image": "linuxserver/vscodium:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/vscodium/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 329
    },
    {
      "title": "vsftpd FTP Server",
      "description": "Secure, fast FTP server for UNIX-like systems",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Networkother",
        "Utilities"
      ],
      "name": "vsftpd",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/pureftpd-icon.jpg",
      "image": "delfer/alpine-ftp-server",
      "env": [
        {
          "name": "ADDRESS",
          "label": "ADDRESS"
        },
        {
          "name": "USERS",
          "label": "USERS",
          "default": "depot|badpass|/home/depot|15000"
        }
      ],
      "ports": [
        "21/tcp",
        "21000/tcp",
        "21001/tcp",
        "21002/tcp",
        "21003/tcp",
        "21004/tcp",
        "21005/tcp",
        "21006/tcp",
        "21007/tcp",
        "21008/tcp",
        "21009/tcp",
        "21010/tcp"
      ],
      "volumes": [
        {
          "container": "/home/depot/tvshows",
          "bind": "/media/storage/tvshows"
        },
        {
          "container": "/home/depot/movies",
          "bind": "/media/storage/movies"
        },
        {
          "container": "/home/depot/music",
          "bind": "/media/storage/music"
        },
        {
          "container": "/home/depot/ebooks",
          "bind": "/media/storage/ebooks"
        },
        {
          "container": "/home/depot/photos",
          "bind": "/media/storage/photos"
        },
        {
          "container": "/home/depot/documents",
          "bind": "/media/storage/documents"
        },
        {
          "container": "/home/depot/downloads",
          "bind": "/media/storage/downloads"
        },
        {
          "container": "/home/depot/software",
          "bind": "/media/storage/software"
        },
        {
          "container": "/home/depot/blackhole",
          "bind": "/media/temp/blackhole"
        },
        {
          "container": "/home/depot/processing",
          "bind": "/media/temp/processing"
        }
      ],
      "id": 330
    },
    {
      "title": "Watchtower",
      "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "Maintenance"
      ],
      "name": "watchtower",
      "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/watchtower.png",
      "image": "containrrr/watchtower:latest",
      "volumes": [
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 331
    },
    {
      "title": "Webcord",
      "description": "[WebCord](https://github.com/SpacingBat3/WebCord) can be summarized as a pack of security and privacy hardenings, Discord features reimplementations, Electron / Chromium / Discord bugs workarounds, stylesheets, internal pages and wrapped https://discord.com page, designed to conform with ToS as much as it is possible (or hide the changes that might violate it from Discord's eyes).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Chat"
      ],
      "name": "Webcord",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/webcord/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webcord-icon.png",
      "image": "linuxserver/webcord:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/webcord/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 332
    },
    {
      "title": "WebGrab+Plus",
      "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Downloaders"
      ],
      "name": "webgrabplus",
      "note": "Configuration <ul><li><b>/config</b> - This is where WebGrab+Plus will store it's configuration</li><li><b>/data</b> - This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.</li></ul>",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/webgrabplus.png",
      "image": "linuxserver/webgrabplus:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/WebGrabPlus",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/WebGrabPlus",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 333
    },
    {
      "title": "Webgrabplus",
      "description": "[Webgrabplus](https://www.webgrabplus.com) is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Media Tools"
      ],
      "name": "Webgrabplus",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/webgrabplus/config<br>mkdir -p /srv/lsio/webgrabplus/data</p>",
      "logo": "https://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg",
      "image": "linuxserver/webgrabplus:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/webgrabplus/config"
        },
        {
          "container": "/data",
          "bind": "/srv/lsio/webgrabplus/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 334
    },
    {
      "title": "Webtop",
      "description": "[Webtop](https://github.com/linuxserver/docker-webtop) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Remote Desktop"
      ],
      "name": "Webtop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/webtop/config<br></p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
      "image": "linuxserver/webtop:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SUBFOLDER",
          "label": "SUBFOLDER",
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/` [OPTIONAL]"
        },
        {
          "name": "TITLE",
          "label": "TITLE",
          "default": "Webtop",
          "description": "String which will be used as page/tab title in the web browser. [OPTIONAL]"
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/webtop/config"
        },
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 335
    },
    {
      "title": "Whoogle",
      "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "whoogle",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/whoogle.png",
      "image": "benbusby/whoogle-search:latest",
      "ports": [
        "5001:5000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Whoogle",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 336
    },
    {
      "title": "Wikijs",
      "description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools",
        "Wiki"
      ],
      "name": "Wikijs",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/wikijs.png",
      "image": "linuxserver/wikijs:latest",
      "ports": [
        "3100:3000/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Wikijs",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Wikijs/data",
          "container": "/data"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 337
    },
    {
      "title": "Wireguard",
      "description": "[WireGuard®](https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Network",
        "VPN"
      ],
      "name": "Wireguard",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/wireguard/config<br></p>",
      "logo": "https://www.wireguard.com/img/wireguard.svg",
      "image": "linuxserver/wireguard:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "SERVERURL",
          "label": "SERVERURL",
          "default": "wireguard.domain.com",
          "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically [OPTIONAL]"
        },
        {
          "name": "SERVERPORT",
          "label": "SERVERPORT",
          "default": "51820",
          "description": "External port for docker host. Used in server mode. [OPTIONAL]"
        },
        {
          "name": "PEERS",
          "label": "PEERS",
          "default": "1",
          "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only) [OPTIONAL]"
        },
        {
          "name": "PEERDNS",
          "label": "PEERDNS",
          "default": "auto",
          "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward. [OPTIONAL]"
        },
        {
          "name": "INTERNAL_SUBNET",
          "label": "INTERNAL_SUBNET",
          "default": "10.13.13.0",
          "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode. [OPTIONAL]"
        },
        {
          "name": "ALLOWEDIPS",
          "label": "ALLOWEDIPS",
          "default": "0.0.0.0/0",
          "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1. [OPTIONAL]"
        },
        {
          "name": "PERSISTENTKEEPALIVE_PEERS",
          "label": "PERSISTENTKEEPALIVE_PEERS",
          "default": "",
          "description": "Set to `all` or a list of comma separated peers (ie. `1,4,laptop`) for the wireguard server to send keepalive packets to listed peers every 25 seconds. Useful if server is accessed via domain name and has dynamic IP. Used only in server mode. [OPTIONAL]"
        },
        {
          "name": "LOG_CONFS",
          "label": "LOG_CONFS",
          "default": "true",
          "description": "Generated QR codes will be displayed in the docker log. Set to `false` to skip log output. [OPTIONAL]"
        }
      ],
      "ports": [
        "51820:51820/udp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/wireguard/config"
        },
        {
          "container": "/lib/modules",
          "bind": "/lib/modules"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 338
    },
    {
      "title": "Wireshark",
      "description": "[Wireshark](https://www.wireshark.org/) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Network"
      ],
      "name": "Wireshark",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/wireshark/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
      "image": "linuxserver/wireshark:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp",
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/wireshark/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 339
    },
    {
      "title": "Wizarr",
      "description": "Wizarr is an advanced user invitation and management system for Jellyfin, Plex, Emby etc.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Tools"
      ],
      "name": "wizarr",
      "note": "",
      "logo": "https://mediadepot.github.io/templates/img/wizarr-logo.png",
      "image": "ghcr.io/wizarrrr/wizarr",
      "env": [
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "https://wizarr.domain.com"
        }
      ],
      "ports": [
        "5690/tcp"
      ],
      "volumes": [
        {
          "container": "/data/database",
          "bind": "/opt/mediadepot/apps/wizarr"
        },
        {
          "container": "/etc/localtime",
          "bind": "/etc/localtime",
          "readonly": true
        }
      ],
      "id": 340
    },
    {
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "type": 2,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Cms"
      ],
      "name": "WordPress",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "/stacks/wordpress/docker-stack.yml"
      },
      "id": 341
    },
    {
      "title": "Wps-office",
      "description": "[WPS Office](https://www.wps.com/) is a lightweight, feature-rich comprehensive office suite with high compatibility. As a handy and professional office software, WPS Office allows you to edit files in Writer, Presentation, Spreadsheet, and PDF to improve your work efficiency.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents"
      ],
      "name": "Wps-office",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/wps-office/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wps-office-icon.png",
      "image": "linuxserver/wps-office:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/wps-office/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 342
    },
    {
      "title": "Xbackbone",
      "description": "[Xbackbone](https://github.com/SergiX44/XBackBone) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "File Sharing"
      ],
      "name": "Xbackbone",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/xbackbone/config</p>",
      "logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
      "image": "linuxserver/xbackbone:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/xbackbone/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 343
    },
    {
      "title": "Xemu",
      "description": "[xemu](https://xemu.app/) is a free and open-source application that emulates the original Microsoft Xbox game console, enabling people to play their original Xbox games on Windows, macOS, and Linux systems.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [],
      "name": "Xemu",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/xemu/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/xemu-logo.png",
      "image": "linuxserver/xemu:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/xemu/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 344
    },
    {
      "title": "Yaak",
      "description": "[Yaak](https://yaak.app/) is a desktop API client for organizing and executing REST, GraphQL, and gRPC requests. It's built using [Tauri](https://tauri.app/), [Rust](https://www.rust-lang.org/), and [ReactJS](https://react.dev/).",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Programming"
      ],
      "name": "Yaak",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/yaak/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/yaak-logo.png",
      "image": "linuxserver/yaak:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/yaak/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 345
    },
    {
      "title": "Yacht",
      "description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Tools"
      ],
      "name": "yacht",
      "note": "",
      "logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
      "image": "selfhostedpro/yacht:latest",
      "ports": [
        "8001:8000/tcp"
      ],
      "volumes": [
        {
          "bind": "yacht",
          "container": "/config"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 346
    },
    {
      "title": "Your_spotify",
      "description": "[Your_spotify](https://github.com/Yooooomi/your_spotify) is a self-hosted application that tracks what you listen and offers you a dashboard to explore statistics about it! It's composed of a web server which polls the Spotify API every now and then and a web application on which you can explore your statistics.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Music"
      ],
      "name": "Your_spotify",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/your_spotify/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/your_spotify-logo.png",
      "image": "linuxserver/your_spotify:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        },
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "http://localhost",
          "description": "The protocol and hostname where the app will be accessed."
        },
        {
          "name": "SPOTIFY_PUBLIC",
          "label": "SPOTIFY_PUBLIC",
          "default": "",
          "description": "Your Spotify application client ID."
        },
        {
          "name": "SPOTIFY_SECRET",
          "label": "SPOTIFY_SECRET",
          "default": "",
          "description": "Your Spotify application secret."
        },
        {
          "name": "CORS",
          "label": "CORS",
          "default": "http://localhost:80,https://localhost:443",
          "description": "Allowed CORS sources, set to `all` to allow any source."
        },
        {
          "name": "MONGO_ENDPOINT",
          "label": "MONGO_ENDPOINT",
          "default": "mongodb://mongo:27017/your_spotify",
          "description": "Set mongodb endpoint address/port."
        }
      ],
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/your_spotify/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 347
    },
    {
      "title": "YouTubeDL-Material",
      "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Other",
        "Downloaders"
      ],
      "name": "youtubedl-material",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ytdlm.png",
      "image": "tzahi12345/youtubedl-material:latest",
      "ports": [
        "17442:17442/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/YTDLM",
          "container": "/app/appdata"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Video",
          "container": "/app/video"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Subscriptions",
          "container": "/app/subscriptions"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Users",
          "container": "/app/users"
        },
        {
          "bind": "/portainer/Files/AppData/Youtube/Audio",
          "container": "/app/audio"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 348
    },
    {
      "title": "ZNC",
      "description": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Messenger"
      ],
      "name": "znc",
      "note": "",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/znc-icon.png",
      "image": "linuxserver/znc:latest",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "ports": [
        "6501:6501/tcp"
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/ZNC",
          "container": "/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 349
    },
    {
      "title": "Zotero",
      "description": "[Zotero](https://www.zotero.org/) is a free, easy-to-use tool to help you collect, organize, annotate, cite, and share research.",
      "type": 1,
      "platforms": [
        "linux"
      ],
      "categories": [
        "Documents"
      ],
      "name": "Zotero",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a>, based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Ensure to create the following volume directories on the host file system, or modify the paths in the volume mapping section under the advanced options below, as needed.</p><p>mkdir -p /srv/lsio/zotero/config</p>",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/zotero-icon.png",
      "image": "linuxserver/zotero:latest",
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the UID to use here."
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "Run 'id [USER]' for the owner of the host volume directories to get the GID to use here."
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Etc/UTC",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)."
        }
      ],
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/srv/lsio/zotero/config"
        }
      ],
      "restart_policy": "unless-stopped",
      "id": 350
    }
  ]
}