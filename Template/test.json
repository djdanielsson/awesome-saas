{
  "templates": [
    {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "AdGuard Home is a network-wide software for blocking ads & tracking.",
    "image": "adguard/adguardhome:latest",
    "logo": "https://developer.asustor.com/uploadIcons/0020_999_1595573028_AdGuardhome_256.png",
    "name": "Adguardhome",
    "platform": "linux",
    "ports": [
      "53:53/tcp",
      "53:53/udp",
      "67:67/udp",
      "80:80/tcp",
      "443:443/tcp",
      "443:443/udp",
      "3001:3000/tcp",
      "853:853/tcp",
      "784:784/udp",
      "853:853/udp",
      "8853:8853/udp",
      "5443:5443/tcp",
      "5443:5443/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Adguardhome",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/AdguardHome/config",
        "container": "/opt/adguardhome/conf"
      },
      {
        "bind": "/portainer/Files/AppData/Config/AdguardHome/work",
        "container": "/opt/adguardhome/work"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://adguard.com/en/adguard-home/overview.html\" target=\"_blank\">https://adguard.com/en/adguard-home/overview.html</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/AdguardTeam/AdGuardHome/wiki/Docker\" target=\"_blank\">https://github.com/AdguardTeam/AdGuardHome/wiki/Docker</a><br><br><br>"
  },
  {
    "description": "[Adguardhome-sync](https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.",
    "env": [
      {
        "default": "/config/adguardhome-sync.yaml",
        "description": "Set a custom config file.",
        "label": "CONFIGFILE",
        "name": "CONFIGFILE"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/adguardhome-sync:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
    "name": "Adguardhome-sync",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/adguardhome-sync/config</p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Adguardhome-sync",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/adguardhome-sync/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Music"
    ],
    "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "CONTEXT_PATH",
        "name": "CONTEXT_PATH",
        "set": "airsonic"
      },
      {
        "label": "JAVA_OPTS",
        "name": "JAVA_OPTS",
        "set": "-Xms256m -Xmx512m"
      }
    ],
    "image": "linuxserver/airsonic:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/airsonic-logo.png",
    "name": "airsonic",
    "platform": "linux",
    "ports": [
      "4040:4040/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Airsonic",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Airsonic/Media",
        "container": "/media"
      },
      {
        "bind": "/portainer/Files/AppData/Airsonic/Playlists",
        "container": "/playlists"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Airsonic/",
        "container": "/config"
      },
      {
        "bind": "/portainer/Music",
        "container": "/music"
      },
      {
        "bind": "/portainer/Podcasts",
        "container": "/podcasts"
      }
    ]
  },
  {
    "categories": [
      "Music"
    ],
    "description": "Airsonic Advanced is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
    "env": [
      {
        "default": "-Xms256m -Xmx512m",
        "label": "JAVA_OPTS",
        "name": "JAVA_OPTS"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "airsonic",
        "label": "CONTEXT_PATH",
        "name": "CONTEXT_PATH"
      }
    ],
    "image": "linuxserver/airsonic-advanced:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/airsonic-logo.png",
    "name": "airsonic-advanced",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/airsonic-advanced/airsonic-advanced\" target=\"_blank\">https://github.com/airsonic-advanced/airsonic-advanced</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/linuxserver/docker-airsonic-advanced\" target=\"_blank\">https://github.com/linuxserver/docker-airsonic-advanced</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "4040:4040/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Airsonic Advanced",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/Media",
        "container": "/media"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/Playlists",
        "container": "/playlists"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/config/",
        "container": "/config"
      },
      {
        "bind": "/portainer/Music",
        "container": "/music"
      },
      {
        "bind": "/portainer/Podcasts",
        "container": "/podcasts"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "",
    "image": "novaspirit/alpine_xfce4_novnc:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/novnc.png",
    "name": "alpine-xfce4-novnc",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/novaspirit/Alpine_xfce4_noVNC\" target=\"_blank\">https://github.com/novaspirit/Alpine_xfce4_noVNC</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/novaspirit/Alpine_xfce4_noVNC\" target=\"_blank\">https://github.com/novaspirit/Alpine_xfce4_noVNC</a><br><br><br>Default username/password will be alpine/alpine.",
    "platform": "linux",
    "ports": [
      "6080:6080/tcp",
      "56780:56780/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Alpine Xfce4 noVNC",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/alpine-xfce4-novnc/home/apline/downloads",
        "container": "/home/apline/downloads"
      }
    ]
  },
  {
    "categories": [
      "Web",
      "Proxy"
    ],
    "description": "The Apache HTTP Server is a free and open-source cross-platform web server software, released under the terms of Apache License 2.0. Apache is developed and maintained by an open community of developers under the auspices of the Apache Software Foundation.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "httpd:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/apache-httpd.png",
    "name": "apache-httpd",
    "platform": "linux",
    "ports": [
      "8080:80/tcp",
      "8443:443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Apache Httpd",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/apache-httpd",
        "container": "/usr/local/apache2/htdocs/"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://httpd.apache.org/\" target=\"_blank\">https://httpd.apache.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/httpd\" target=\"_blank\">https://hub.docker.com/_/httpd</a><br><br><br>"
  },
  {
    "categories": [
      "Notifications"
    ],
    "description": "[Apprise-api](https://github.com/caronc/apprise-api) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API. * Send notifications to more then 65+ services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/apprise-api:latest",
    "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
    "name": "Apprise-api",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/apprise-api/config</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Apprise-api",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/apprise-api/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "Games"
    ],
    "description": "C# application with primary purpose of farming Steam cards from multiple accounts simultaneously.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "justarchi/archisteamfarm:latest",
    "logo": "https://raw.githubusercontent.com/JustArchiNET/ArchiSteamFarm/main/resources/ASF_184x184.png",
    "name": "archisteamfarm",
    "platform": "linux",
    "ports": [
      "1242:1242/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "ArchiSteamFarm",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/config",
        "container": "/app/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/plugins",
        "container": "/app/plugins"
      },
      {
        "bind": "/portainer/Files/AppData/Config/ArchiSteamFarm/logs",
        "container": "/app/logs"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/\" target=\"_blank\">https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Docker/</a><br><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
    "env": [
      {
        "default": "*",
        "label": "ALLOWED_HOSTS",
        "name": "ALLOWED_HOSTS"
      },
      {
        "default": "750m",
        "label": "MEDIA_MAX_SIZE",
        "name": "MEDIA_MAX_SIZE"
      },
      {
        "default": "false",
        "label": "PUBLIC_ADD_VIEW",
        "name": "PUBLIC_ADD_VIEW"
      },
      {
        "default": "true",
        "label": "PUBLIC_INDEX",
        "name": "PUBLIC_INDEX"
      },
      {
        "default": "true",
        "label": "PUBLIC_SNAPSHOTS",
        "name": "PUBLIC_SNAPSHOTS"
      }
    ],
    "image": "archivebox/archivebox:master",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/archivebox.png",
    "name": "archivebox",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://archivebox.io/\" target=\"_blank\">https://archivebox.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki/Docker\" target=\"_blank\">https://github.com/ArchiveBox/ArchiveBox/wiki/Docker</a><br><br><br>By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available <a href='https://github.com/ArchiveBox/ArchiveBox/wiki'>here</a>.",
    "platform": "linux",
    "ports": [
      "8002:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Archivebox",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/archivebox",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Downloader"
    ],
    "description": "AriaNg is a modern web frontend making aria2 easier to use. AriaNg is written in pure html & javascript, thus it does not need any compilers or runtime environment. You can just put AriaNg in your web server and open it in your browser. AriaNg uses responsive layout, and supports any desktop or mobile devices.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "443",
        "label": "ARIA2RPCPORT",
        "name": "ARIA2RPCPORT"
      }
    ],
    "image": "hurlenko/aria2-ariang:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/ariang.png",
    "name": "AriaNG",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "AriaNG",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/AriaNG",
        "container": "/aria2/conf"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/aria2/data"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/hurlenko/aria2-ariang-docker\" target=\"_blank\">https://github.com/hurlenko/aria2-ariang-docker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/hurlenko/aria2-ariang-docker\" target=\"_blank\">https://github.com/hurlenko/aria2-ariang-docker</a><br><br><br>"
  },
  {
    "description": "[Audacity](https://www.audacityteam.org/) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/audacity:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
    "name": "Audacity",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/audacity/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Audacity",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/audacity/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Authentication",
      "Other",
      "Tools"
    ],
    "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
    "env": [
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "authelia/authelia:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/authelia.png",
    "name": "authelia",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.authelia.com/\" target=\"_blank\">https://www.authelia.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.authelia.com/docs/configuration/\" target=\"_blank\">https://www.authelia.com/docs/configuration/</a><br><br><br>Requires a configuration.yml file in order to work. Documentation is Available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
    "platform": "linux",
    "ports": [
      "9091:9091/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Authelia",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Authelia",
        "container": "/etc/authelia/"
      }
    ]
  },
  {
    "categories": [
      "Authentication",
      "Cloud",
      "Management",
      "Security"
    ],
    "description": "Authentik is an open-source Identity Provider focused on flexibility and versatility.  This will start the stack with basic options, to customize further ie. adding email settings then use the editor under the deployed stack and 'Update the stack'",
    "env": [
      {
        "default": "authentik",
        "label": "POSTGRES_USER",
        "name": "POSTGRES_USER"
      },
      {
        "default": "authentik",
        "label": "POSTGRES_DB",
        "name": "POSTGRES_DB"
      },
      {
        "default": "YOUR_POSTGRE_PASSWORD",
        "label": "POSTGRES_PASSWORD",
        "name": "POSTGRES_PASSWORD"
      },
      {
        "default": "YOUR_AUTHENTIK_SECRET_KEY",
        "label": "AUTHENTIK_SECRET_KEY",
        "name": "AUTHENTIK_SECRET_KEY"
      },
      {
        "default": "GeoLite2-City",
        "label": "GEOIPUPDATE_EDITION_IDS",
        "name": "GEOIPUPDATE_EDITION_IDS"
      },
      {
        "default": "Your GEOIP ID",
        "label": "GEOIPUPDATE_ACCOUNT_ID",
        "name": "GEOIPUPDATE_ACCOUNT_ID"
      },
      {
        "default": "Your GEOIP License Key",
        "label": "GEOIPUPDATE_LICENSE_KEY",
        "name": "GEOIPUPDATE_LICENSE_KEY"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/authentik.svg",
    "name": "authentik",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://goauthentik.io/\" target=\"_blank\">https://goauthentik.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://goauthentik.io/docs/\" target=\"_blank\">https://goauthentik.io/docs/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_authentik.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_authentik.sh | bash</h3><br><br>For this to work properly you will need a GeoIP account.  Go to https://www.maxmind.com/en/geolite2/signup, once done generate a license key and copy in your user number.  For info on emailing in the system see, https://goauthentik.io/docs/installation/docker-compose#email-configuration-optional-but-recommended",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/authentik.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Authentik",
    "type": 3
  },
  {
    "description": "[Babybuddy](https://github.com/babybuddy/babybuddy) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.",
    "env": [
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/babybuddy:latest",
    "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
    "name": "Babybuddy",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/babybuddy/config</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Babybuddy",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/babybuddy/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Media"
    ],
    "description": "[Bazarr](https://www.bazarr.media/) is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/bazarr:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png",
    "name": "Bazarr",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/bazarr/config<br>mkdir -p /volume1/docker/bazarr/movies<br>mkdir -p /volume1/docker/bazarr/tv</p>",
    "platform": "linux",
    "ports": [
      "6767:6767/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Bazarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/bazarr/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/bazarr/movies",
        "container": "/movies"
      },
      {
        "bind": "/volume1/docker/bazarr/tv",
        "container": "/tv"
      }
    ]
  },
  {
    "categories": [
      "Media"
    ],
    "description": "[Beets](http://beets.io/) is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/beets:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png",
    "name": "Beets",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/beets/config<br>mkdir -p /volume1/docker/beets/music<br>mkdir -p /volume1/docker/beets/downloads</p>",
    "platform": "linux",
    "ports": [
      "8337:8337/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Beets",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/beets/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/beets/downloads",
        "container": "/downloads"
      },
      {
        "bind": "/volume1/docker/beets/music",
        "container": "/music"
      }
    ]
  },
  {
    "categories": [
      "DNS",
      "Tools"
    ],
    "description": "BIND 9 provides software for Domain Name System (DNS) management including both defining domain names authoritatively for a given DNS zone, and recursively resolving domain names to their IP addresses. In addition to BIND 9's DNS server itself, named, this container also includes tools for performing DNS queries and dynamic updates. Read more on the BIND 9 https://www.isc.org/bind/ ",
    "env": [
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "ubuntu/bind9:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/bind9.png",
    "name": "bind9",
    "platform": "linux",
    "ports": [
      "53:53/tcp",
      "53:53/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Bind9",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/bind9/named.conf",
        "container": "etc/bind/named.conf"
      },
      {
        "bind": "/portainer/Files/AppData/Config/bind9/cache",
        "container": "/var/cache/bind"
      },
      {
        "bind": "/portainer/Files/AppData/Config/bind9/bind",
        "container": "/var/lib/bind"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/ubuntu/bind9\" target=\"_blank\">https://hub.docker.com/r/ubuntu/bind9</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/ubuntu/bind9\" target=\"_blank\">https://hub.docker.com/r/ubuntu/bind9</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_bind9.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_bind9.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
    "image": "bitwardenrs/server:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
    "name": "bitwardenrs",
    "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Bitwarden RS",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Bitwarden-rs",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Research"
    ],
    "description": "[BOINC](https://boinc.berkeley.edu/) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
    "env": [
      {
        "default": "",
        "description": "Optionally set a password for the gui.",
        "label": "PASSWORD",
        "name": "PASSWORD"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/boinc:latest",
    "logo": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
    "name": "Boinc",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/boinc/config</p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Boinc",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/boinc/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Books",
      "Other"
    ],
    "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "booksonic",
        "label": "CONTEXT_PATH",
        "name": "CONTEXT_PATH"
      }
    ],
    "image": "linuxserver/booksonic:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/booksonic.png",
    "name": "booksonic",
    "platform": "linux",
    "ports": [
      "4040:4040/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Booksonic",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Books",
        "container": "/books"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Booksonic",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/Podcasts",
        "container": "/podcast"
      }
    ]
  },
  {
    "categories": [
      "Audio"
    ],
    "description": "[Booksonic-air](http://booksonic.org) is a platform for accessing the audiobooks you own wherever you are. At the moment the platform consists of Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. Booksonic App - An DSub based Android app for connection to Booksonic-Air servers. .",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "url-base",
        "description": "Base url for use with reverse proxies etc.",
        "label": "CONTEXT_PATH",
        "name": "CONTEXT_PATH"
      }
    ],
    "image": "linuxserver/booksonic-air:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
    "name": "Booksonic-air",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/booksonic-air/config<br>mkdir -p /volume1/docker/booksonic-air/audiobooks<br>mkdir -p /volume1/docker/booksonic-air/podcasts<br>mkdir -p /volume1/docker/booksonic-air/othermedia</p>",
    "platform": "linux",
    "ports": [
      "4040:4040/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Booksonic-air",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/booksonic-air/audiobooks",
        "container": "/audiobooks"
      },
      {
        "bind": "/volume1/docker/booksonic-air/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/booksonic-air/othermedia",
        "container": "/othermedia"
      },
      {
        "bind": "/volume1/docker/booksonic-air/podcasts",
        "container": "/podcasts"
      }
    ]
  },
  {
    "categories": [
      "Media"
    ],
    "description": "[Bookstack](https://github.com/BookStackApp/BookStack) is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease. Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore. For more information on BookStack visit their website and check it out: https://www.bookstackapp.com",
    "env": [
      {
        "default": "",
        "description": "for specifying the IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`",
        "label": "APP_URL",
        "name": "APP_URL"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "<yourdbhost>",
        "description": "for specifying the database host",
        "label": "DB_HOST",
        "name": "DB_HOST"
      },
      {
        "default": "<yourdbpass>",
        "description": "for specifying the database password",
        "label": "DB_PASS",
        "name": "DB_PASS"
      },
      {
        "default": "<yourdbuser>",
        "description": "for specifying the database user",
        "label": "DB_USER",
        "name": "DB_USER"
      },
      {
        "default": "bookstackapp",
        "description": "for specifying the database to be used",
        "label": "DB_DATABASE",
        "name": "DB_DATABASE"
      }
    ],
    "image": "linuxserver/bookstack:latest",
    "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png",
    "name": "Bookstack",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/bookstack/config</p>",
    "platform": "linux",
    "ports": [
      "6875:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Bookstack",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/bookstack/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Budge](https://github.com/linuxserver/budge) is an open source 'budgeting with envelopes' personal finance app.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/budge:latest",
    "logo": "",
    "name": "Budge",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/budge/config</p>",
    "platform": "linux",
    "ports": [
      "443:443/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Budge",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/budge/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Tools",
      "Web",
      "Webserver"
    ],
    "description": "Caddy - The Ultimate Server with Automatic HTTPS.  Need to run tools/install_caddy.sh before installing the template.",
    "image": "caddy:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/caddy.png",
    "name": "caddy",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://caddyserver.com/\" target=\"_blank\">https://caddyserver.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/caddy\" target=\"_blank\">https://hub.docker.com/_/caddy</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_caddy.sh\" target=\"_blank\">install_caddy.sh</a><br><br>Caddy 2 is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go",
    "platform": "linux",
    "ports": [
      "2019:2019/tcp",
      "443:443/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Caddy",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Caddy/Caddyfile",
        "container": "/etc/caddy/Caddyfile"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Caddy/Config",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Caddy/Data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Media"
    ],
    "description": "[Calibre](https://calibre-ebook.com/) is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.",
    "env": [
      {
        "default": "",
        "description": "Optionally pass cli start arguments to calibre.",
        "label": "CLI_ARGS",
        "name": "CLI_ARGS"
      },
      {
        "default": "",
        "description": "Optionally set a password for the gui.",
        "label": "PASSWORD",
        "name": "PASSWORD"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/calibre:latest",
    "logo": "https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png",
    "name": "Calibre",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/calibre/config</p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp",
      "8081:8081/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Calibre",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/calibre/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Books",
      "Cloud"
    ],
    "description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.\n\n  [br][br]\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\n  [b]/config[/b] Where Calibre-web should store it's database[br]\n  [b]/books[/b] Path to your calibre library metadata.db file[br]",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/calibre-web:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/calibre-web-icon.png",
    "name": "calibre-web",
    "platform": "linux",
    "ports": [
      "8083:8083/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Calibre Web",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Books",
        "container": "/books"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Calibre-web",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/cardigann:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cardigann.png",
    "name": "cardigann",
    "platform": "linux",
    "ports": [
      "5060:5060/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Cardigann",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Cardigann",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Photo",
      "Tools"
    ],
    "description": "Chevereto is a powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. Please note that this offers only the free Chevereto version..",
    "env": [
      {
        "default": "",
        "label": "CHEVERETO_DB_HOST",
        "name": "CHEVERETO_DB_HOST"
      },
      {
        "default": "",
        "label": "CHEVERETO_DB_NAME",
        "name": "CHEVERETO_DB_NAME"
      },
      {
        "default": "",
        "label": "CHEVERETO_DB_PASSWORD",
        "name": "CHEVERETO_DB_PASSWORD"
      },
      {
        "default": "",
        "label": "CHEVERETO_DB_PREFIX",
        "name": "CHEVERETO_DB_PREFIX"
      },
      {
        "default": "",
        "label": "CHEVERETO_DB_USERNAME",
        "name": "CHEVERETO_DB_USERNAME"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "nmtan/chevereto:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/Chevereto.png",
    "name": "Chevereto",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://chevereto.com/\" target=\"_blank\">https://chevereto.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/nmtan/chevereto\" target=\"_blank\">https://hub.docker.com/r/nmtan/chevereto</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "7382:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Chevereto",
    "type": 1,
    "volumes": [
      {
        "container": "/var/www/html/images"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Save recipes in seconds with plain text formatting and create beatiful recipe pages with automated ease.",
    "image": "gregyankovoy/chowdown:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/chowdown.png",
    "name": "Chowdown",
    "platform": "linux",
    "ports": [
      "4000:4000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Chowdown",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Chowdown",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "tools"
    ],
    "description": "chrony is a versatile implementation of the Network Time Protocol (NTP). It can synchronise the system clock with NTP servers, reference clocks (e.g. GPS receiver), and manual input using wristwatch and keyboard. It can also operate as an NTPv4 (RFC 5905) server and peer to provide a time service to other computers in the network.",
    "env": [
      {
        "default": "0",
        "label": "LOG_LEVEL",
        "name": "LOG_LEVEL"
      },
      {
        "description": "Additional Example: time1.google.com,time2.google.com,time3.google.com,time4.google.com",
        "default": "time.cloudflare.com",
        "label": "NTP_SERVERS",
        "name": "NTP_SERVERS"
      }
    ],
    "image": "cturra/ntp:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/chrony.png",
    "name": "chrony-ntp",
    "platform": "linux",
    "ports": [
      "123:123/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Chrony NTP",
    "type": 1,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/cturra/docker-ntp\" target=\"_blank\">https://github.com/cturra/docker-ntp</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/cturra/docker-ntp/blob/main/README.md\" target=\"_blank\">https://github.com/cturra/docker-ntp/blob/main/README.md</a><br><br><br>"
  },
  {
    "categories": [
      "Other",
      "Anitvirus"
    ],
    "description": "ClamAV® is an open source antivirus engine for detecting trojans, viruses, malware & other malicious threats.",
    "image": "mkodockx/docker-clamav:alpine",
    "logo": "http://www.clamav.net/assets/clamav-trademark.png",
    "name": "clamav",
    "platform": "linux",
    "ports": [
      "3310:3310/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Clamav",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/timezone",
        "container": "/etc/timezone"
      },
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime"
      },
      {
        "bind": "/portainer/Files/AppData/Config/clamav/config",
        "container": "/etc/clamav"
      },
      {
        "bind": "/portainer/Files/AppData/Config/clamav/virus_definitions",
        "container": "/var/lib/clamav"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.clamav.net/\" target=\"_blank\">https://docs.clamav.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mkodockx/docker-clamav\" target=\"_blank\">https://hub.docker.com/r/mkodockx/docker-clamav</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_clamav.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_clamav.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "Development"
    ],
    "description": "[Cloud9](https://github.com/c9/core) Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.",
    "env": [
      {
        "default": "",
        "description": "Optionally specify a password for http auth (if USERNAME and PASSWORD are not set, there will be no http auth)",
        "label": "PASSWORD",
        "name": "PASSWORD"
      },
      {
        "default": "",
        "description": "Optionally specify a username for http auth",
        "label": "USERNAME",
        "name": "USERNAME"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "https://github.com/linuxserver/docker-cloud9.git",
        "description": "Specify a git repo to checkout on first startup",
        "label": "GITURL",
        "name": "GITURL"
      }
    ],
    "image": "linuxserver/cloud9:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9.png",
    "name": "Cloud9",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/cloud9/config<br>mkdir -p /volume1/docker/cloud9/code<br></p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Cloud9",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      },
      {
        "bind": "/volume1/docker/cloud9/code",
        "container": "/code"
      },
      {
        "bind": "/volume1/docker/cloud9/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "DNS",
      "Tools"
    ],
    "description": "Cloudflare DDNS - A small and fast DDNS updater for Cloudflare.",
    "env": [
      {
        "default": "",
        "label": "CF_API_TOKEN",
        "name": "CF_API_TOKEN"
      },
      {
        "default": "",
        "label": "DOMAINS (Comma Separated List)",
        "name": "DOMAINS"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "true",
        "label": "PROXIED",
        "name": "PROXIED"
      }
    ],
    "image": "favonia/cloudflare-ddns:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflare-ddns.png",
    "name": "cloudflare-ddns",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/\" target=\"_blank\">https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/oznu/cloudflare-ddns/\" target=\"_blank\">https://hub.docker.com/r/oznu/cloudflare-ddns/</a><br><br><br>",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Cloudflare DDNS",
    "type": 1
  },
  {
    "categories": [
      "Other",
      "Tools",
      "VPN",
      "Proxy"
    ],
    "description": "Cloudflare Tunnel provides you with a secure way to connect your resources to Cloudflare without a publicly routable IP address. With Tunnel, you do not send traffic to an external IP — instead, a lightweight daemon in your infrastructure (cloudflared) creates outbound-only connections to Cloudflare's edge.",
    "env": [
      {
        "default": "Your_Tunnel_Token_From_The_Zero_Dashboard_Access_Tunnel",
        "label": "token",
        "name": "TUNNEL_TOKEN"
      }
    ],
    "image": "cloudflare/cloudflared:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflared.svg",
    "name": "cloudflared-tunnel",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/products/tunnel/\" target=\"_blank\">https://www.cloudflare.com/products/tunnel/</a><br><b>Official Docker Documentation: </b><a href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/\" target=\"_blank\">https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/</a><br><br><br>Requires a token in order to work. You can find the dashboard <a href='https://dash.teams.cloudflare.com/'>here</a>. Once you logged in, go to Access followed by Tunnels. Create a tunnel. After you gave it a name you'll see in the command section a long string of chacters. This is your token you must copy.",
    "platform": "linux",
    "command": "tunnel run",
    "restart_policy": "unless-stopped",
    "title": "Cloudflared Tunnel",
    "type": 1
  },
  {
    "categories": [
      "database"
    ],
    "command": "start --insecure",
    "description": "An open-source, survivable, strongly consistent, scale-out SQL database",
    "image": "cockroachdb/cockroach:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
    "platform": "linux",
    "ports": [
      "26257/tcp",
      "8080/tcp"
    ],
    "title": "CockroachDB",
    "type": 1,
    "volumes": [
      {
        "container": "/cockroach/cockroach-data"
      }
    ]
  },
  {
    "categories": [
      "Development"
    ],
    "description": "[Code-server](https://coder.com) is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome.",
    "env": [
      {
        "default": "",
        "description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below.",
        "label": "HASHED_PASSWORD",
        "name": "HASHED_PASSWORD"
      },
      {
        "default": "",
        "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`.",
        "label": "SUDO_PASSWORD_HASH",
        "name": "SUDO_PASSWORD_HASH"
      },
      {
        "default": "/config/workspace",
        "description": "If this optional variable is set, code-server will open this directory by default",
        "label": "DEFAULT_WORKSPACE",
        "name": "DEFAULT_WORKSPACE"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "code-server.my.domain",
        "description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation](https://github.com/cdr/code-server/blob/master/docs/FAQ.md#sub-domains)",
        "label": "PROXY_DOMAIN",
        "name": "PROXY_DOMAIN"
      },
      {
        "default": "password",
        "description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.",
        "label": "SUDO_PASSWORD",
        "name": "SUDO_PASSWORD"
      },
      {
        "default": "password",
        "description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth.",
        "label": "PASSWORD",
        "name": "PASSWORD"
      }
    ],
    "image": "linuxserver/code-server:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png",
    "name": "Code-server",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/code-server/config</p>",
    "platform": "linux",
    "ports": [
      "8443:8443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Code-server",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/code-server/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Productivity"
    ],
    "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.\n  ",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/codiad:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/codiad-icon.png",
    "name": "codiad",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Codiad",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Codiad",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "development"
    ],
    "description": "ColdFusion (CFML) CLI",
    "env": [
      {
        "name": "CFENGINE",
        "set": "lucee@4.5"
      }
    ],
    "image": "ortussolutions/commandbox:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
    "platform": "linux",
    "ports": [
      "8080/tcp",
      "8443/tcp"
    ],
    "title": "CommandBox",
    "type": 1
  },
  {
    "categories": [
      "CMS"
    ],
    "description": "Open-source modular CMS",
    "env": [
      {
        "name": "CFENGINE",
        "set": "lucee@4.5"
      },
      {
        "name": "express",
        "set": "true"
      },
      {
        "name": "install",
        "set": "true"
      }
    ],
    "image": "ortussolutions/contentbox:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
    "platform": "linux",
    "ports": [
      "8080/tcp",
      "8443/tcp"
    ],
    "title": "ContentBox",
    "type": 1,
    "volumes": [
      {
        "container": "/app/includes/shared/media"
      },
      {
        "container": "/data/contentbox/db"
      }
    ]
  },
  {
    "categories": [
      "Books",
      "Cloud"
    ],
    "description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/cops:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cops-icon.png",
    "name": "cops",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "COPS",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Books",
        "container": "/books"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Cops",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Video"
    ],
    "description": "CouchPotato (CP) is an automatic NZB and torrent downloader. You can keep a \"movies I want\"-list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/couchpotato:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/couchpotato-icon.png",
    "name": "couchpotato",
    "platform": "linux",
    "ports": [
      "5050:5050/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "CouchPotato",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Couchpotato",
        "container": "/config"
      },
      {
        "bind": "/portainer/Movies",
        "container": "/movies"
      }
    ]
  },
  {
    "categories": [
      "database"
    ],
    "description": "An open-source distributed SQL database",
    "image": "crate:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
    "platform": "linux",
    "ports": [
      "4200/tcp",
      "4300/tcp"
    ],
    "title": "CrateDB",
    "type": 1,
    "volumes": [
      {
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Media"
    ],
    "description": "[Daapd](https://owntone.github.io/owntone-server/) (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), Chromecast, MPD and internet radio.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/daapd:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-git.png",
    "name": "Daapd",
    "network": "host",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/daapd/config<br>mkdir -p /volume1/docker/daapd/music</p>",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Daapd",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/daapd/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/daapd/music",
        "container": "/music"
      }
    ]
  },
  {
    "categories": [
      "Productivity"
    ],
    "description": "[darktable](https://www.darktable.org/) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/darktable:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
    "name": "Darktable",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/darktable/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Darktable",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/darktable/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Another application bookmark dashboard, with fun features.",
    "image": "failed2run/dashmachine:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dashmachine_logo.png",
    "name": "dashmachine",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/rmountjoy92/DashMachine\" target=\"_blank\">https://github.com/rmountjoy92/DashMachine</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/rmountjoy92/DashMachine\" target=\"_blank\">https://github.com/rmountjoy92/DashMachine</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "5100:5000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "DashMachine",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Dashmachine",
        "container": "/dashmachine/dashmachine/user_data"
      }
    ]
  },
  {
    "categories": [
      "Dashboard"
    ],
    "description": "Dashy helps you organize your self-hosted services by making them accessible from a single place",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "lissy93/dashy:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dashy.png",
    "name": "Dashy",
    "platform": "linux",
    "ports": [
      "9100:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Dashy",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Dashy/local-conf.yml",
        "container": "/app/public/conf.yml"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dashy.to\" target=\"_blank\">https://dashy.to</a><br><b>Official Docker Documentation: </b><a href=\"https://dashy.to/docs/quick-start\" target=\"_blank\">https://dashy.to/docs/quick-start</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_dashy.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_dashy.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "Monitoring"
    ],
    "description": "Collect events and metrics",
    "env": [
      {
        "label": "Datadog API key",
        "name": "API_KEY"
      }
    ],
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
    "platform": "linux",
    "repository": {
      "stackfile": "stacks/datadog-agent/docker-stack.yml",
      "url": "https://github.com/portainer/templates"
    },
    "title": "Datadog agent",
    "type": 2
  },
  {
    "categories": [
      "Tool"
    ],
    "description": "DaVinci Resolve Postgresql Server, Davinci requires a specific version of postgres db, this container will install the version needed",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "database",
        "label": "POSTGRES_DB",
        "name": "POSTGRES_DB"
      },
      {
        "default": "postgres",
        "label": "POSTGRES_USER",
        "name": "POSTGRES_USER"
      },
      {
        "default": "DaVinci",
        "label": "POSTGRES_PASSWORD",
        "name": "POSTGRES_PASSWORD"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "postgres:13",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/resolve.png",
    "name": "DaVinci Postgres Server",
    "platform": "linux",
    "ports": [
      "5432:5432/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "DaVinci Postgres Server",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/DavinciServer/",
        "container": "/var/lib/postgresql/data"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md\" target=\"_blank\">https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md</a><br><b>Official Docker Documentation: </b><a href=\"https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md\" target=\"_blank\">https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/docs/davinci.md</a><br><br><br>"
  },
  {
    "categories": [
      "FTP",
      "Other",
      "Tools"
    ],
    "description": "davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\r\n\r\n/config : AppData Location\r\n/download : File Download Location",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/davos:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/davos.png",
    "name": "davos",
    "platform": "linux",
    "ports": [
      "8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Davos",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Davos",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Networking"
    ],
    "description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/ddclient:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
    "name": "Ddclient",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ddclient/config</p>",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Ddclient",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/ddclient/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Music",
      "Other"
    ],
    "description": "Deemix is a deezer downloader built from the ashes of Deezloader Remix.",
    "image": "registry.gitlab.com/bockiii/deemix-docker",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/deemix.png",
    "name": "deemix",
    "note": "Deemix may take a few minutes to install. Be sure to check the logs for details. Refer to <a href='https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken'>this page</a> for userToken details.",
    "platform": "linux",
    "ports": [
      "9666:9666/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "DeeMix",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/DeeMix",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
    "env": [
      {
        "default": "022",
        "label": "UMASK",
        "name": "UMASK"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/deluge:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/deluge-icon.png",
    "name": "deluge",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.deluge-torrent.org/\" target=\"_blank\">https://www.deluge-torrent.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-deluge\" target=\"_blank\">https://docs.linuxserver.io/images/docker-deluge</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "6881:6881/tcp",
      "8112:8112/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Deluge",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Deluge",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "VPN"
    ],
    "description": "This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "192.168.0.0/16",
        "label": "LOCAL_NETWORK",
        "name": "LOCAL_NETWORK"
      },
      {
        "default": "CA Toronto",
        "label": "OPENVPN_CONFIG",
        "name": "OPENVPN_CONFIG"
      },
      {
        "default": "MULLVAD",
        "description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
        "label": "OPENVPN_PROVIDER",
        "name": "OPENVPN_PROVIDER"
      },
      {
        "label": "OPENVPN_PASSWORD",
        "name": "OPENVPN_PASSWORD"
      },
      {
        "label": "OPENVPN_USERNAME",
        "name": "OPENVPN_USERNAME"
      }
    ],
    "image": "sgtsquiggs/deluge-openvpn:arm32v7-latest",
    "name": "deluge-openvpn",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.deluge-torrent.org/\" target=\"_blank\">https://www.deluge-torrent.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/sgtsquiggs/docker-deluge-openvpn\" target=\"_blank\">https://github.com/sgtsquiggs/docker-deluge-openvpn</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8112:8112/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Deluge openvpn",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/DelugeOpenVPN/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "VPN",
      "Tools"
    ],
    "description": "[DEPRECATED] This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.  [DEPRECATED] Hasn't been updated in more than 3 years needs replaced",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PUID"
      },
      {
        "default": "MULLVAD",
        "description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
        "label": "OPENVPN_PROVIDER",
        "name": "OPENVPN_PROVIDER"
      },
      {
        "description": "Default is false (disabled) only change if you know what you are doing.",
        "label": "WEBPROXY_ENABLED",
        "name": "WEBPROXY_ENABLED",
        "select": [
          {
            "default": false,
            "text": "Disable Web Proxy",
            "value": "false"
          },
          {
            "text": "Enable Web Proxy",
            "value": "true"
          }
        ]
      },
      {
        "label": "OPENVPN_USERNAME",
        "name": "OPENVPN_USERNAME"
      },
      {
        "label": "OPENVPN_PASSWORD",
        "name": "OPENVPN_PASSWORD"
      },
      {
        "default": "CA Toronto",
        "label": "OPENVPN_CONFIG",
        "name": "OPENVPN_CONFIG"
      },
      {
        "default": "192.168.0.0/16",
        "label": "LOCAL_NETWORK",
        "name": "LOCAL_NETWORK"
      }
    ],
    "image": "ebrianne/docker-deluge-openvpn:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/deluge-icon.png",
    "name": "deluge-openvpn",
    "platform": "linux",
    "ports": [
      "8112:8112/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Deluge openvpn [DEPRECATED]",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/DelugeOpenVPN/config",
        "container": "/config"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.deluge-torrent.org/\" target=\"_blank\">https://www.deluge-torrent.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/sgtsquiggs/docker-deluge-openvpn\" target=\"_blank\">https://github.com/sgtsquiggs/docker-deluge-openvpn</a><br><br><br>"
  },
  {
    "categories": [
      "Photography"
    ],
    "description": "[digiKam](https://www.digikam.org/): Professional Photo Management with the Power of Open Source",
    "env": [
      {
        "default": "/",
        "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
        "label": "SUBFOLDER",
        "name": "SUBFOLDER"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "en-us-qwerty",
        "description": "See the keyboard layouts section for more information and options.",
        "label": "KEYBOARD",
        "name": "KEYBOARD"
      }
    ],
    "image": "linuxserver/digikam:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
    "name": "Digikam",
    "network": "host",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/digikam/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Digikam",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/digikam/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Development"
    ],
    "description": "[Dillinger](https://github.com/joemccann/dillinger) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/dillinger:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png",
    "name": "Dillinger",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dillinger/config</p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Dillinger",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/dillinger/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Productivity"
    ],
    "description": "[Diskover](https://github.com/diskoverdata/diskover-community) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "9200",
        "description": "ElasticSearch port (optional)",
        "label": "ES_PORT",
        "name": "ES_PORT"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "changeme",
        "description": "ElasticSearch password (optional)",
        "label": "ES_PASS",
        "name": "ES_PASS"
      },
      {
        "default": "elastic",
        "description": "ElasticSearch username (optional)",
        "label": "ES_USER",
        "name": "ES_USER"
      },
      {
        "default": "elasticsearch",
        "description": "ElasticSearch host (optional)",
        "label": "ES_HOST",
        "name": "ES_HOST"
      }
    ],
    "image": "linuxserver/diskover:latest",
    "logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
    "name": "Diskover",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/diskover/config<br>mkdir -p /volume1/docker/diskover/data</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Diskover",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/diskover/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/diskover/data",
        "container": "/data"
      }
    ]
  },
  {
    "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/docker-compose for details.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/docker-compose:latest",
    "logo": "",
    "name": "Docker-compose",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/docker-compose/config</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Docker-compose",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/docker-compose/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Productivity"
    ],
    "description": "[Dokuwiki](https://www.dokuwiki.org/dokuwiki/) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/dokuwiki:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
    "name": "Dokuwiki",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dokuwiki/config</p>",
    "platform": "linux",
    "ports": [
      "443:443/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Dokuwiki",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/dokuwiki/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Automation"
    ],
    "description": "[Domoticz](https://www.domoticz.com) is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "<path to database>",
        "description": "Sets path to database. Do not set unless you know what this does.",
        "label": "DBASE",
        "name": "DBASE"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "domoticz",
        "description": "Sets webroot to domoticz for usage with subfolder reverse proxy. Not needed unless reverse proxying.",
        "label": "WEBROOT",
        "name": "WEBROOT"
      }
    ],
    "image": "linuxserver/domoticz:latest",
    "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
    "name": "Domoticz",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/domoticz/config</p>",
    "platform": "linux",
    "ports": [
      "1443:1443/tcp",
      "6144:6144/tcp",
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Domoticz",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/domoticz/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Doplarr](https://github.com/kiranshila/Doplarr) is an *arr request bot for Discord.'",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "25",
        "description": "Sets the maximum size of the search results selection",
        "label": "DISCORD__MAX_RESULTS",
        "name": "DISCORD__MAX_RESULTS"
      },
      {
        "default": ":info",
        "description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`",
        "label": "LOG_LEVEL",
        "name": "LOG_LEVEL"
      },
      {
        "default": ":plain",
        "description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none`",
        "label": "DISCORD__REQUESTED_MSG_STYLE",
        "name": "DISCORD__REQUESTED_MSG_STYLE"
      },
      {
        "default": "<discord__token>",
        "description": "Specify your discord bot token.",
        "label": "DISCORD__TOKEN",
        "name": "DISCORD__TOKEN"
      },
      {
        "default": "<not_set_by_default>",
        "description": "For passing additional java options.",
        "label": "JAVA_OPTS",
        "name": "JAVA_OPTS"
      },
      {
        "default": "<not_set_by_default>",
        "description": "The Overseerr user id to use by default if there is no associated discord account for the requester",
        "label": "OVERSEERR__DEFAULT_ID",
        "name": "OVERSEERR__DEFAULT_ID"
      },
      {
        "default": "<not_set_by_default>",
        "description": "The discord role id for users of the bot (omitting this lets everyone on the server use the bot)",
        "label": "DISCORD__ROLE_ID",
        "name": "DISCORD__ROLE_ID"
      },
      {
        "default": "<not_set_by_default>",
        "description": "The name of the language profile to use by default for Radarr",
        "label": "SONARR__LANGUAGE_PROFILE",
        "name": "SONARR__LANGUAGE_PROFILE"
      },
      {
        "default": "<not_set_by_default>",
        "description": "The name of the quality profile to use by default for Radarr",
        "label": "RADARR__QUALITY_PROFILE",
        "name": "RADARR__QUALITY_PROFILE"
      },
      {
        "default": "<not_set_by_default>",
        "description": "The name of the quality profile to use by default for Sonarr",
        "label": "SONARR__QUALITY_PROFILE",
        "name": "SONARR__QUALITY_PROFILE"
      },
      {
        "default": "<overseerr__api>",
        "description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr.",
        "label": "OVERSEERR__API",
        "name": "OVERSEERR__API"
      },
      {
        "default": "<radarr__api>",
        "description": "Specify your Radarr API key. Leave blank if using Overseerr.",
        "label": "RADARR__API",
        "name": "RADARR__API"
      },
      {
        "default": "<sonarr__api>",
        "description": "Specify your Sonarr API key. Leave blank if using Overseerr.",
        "label": "SONARR__API",
        "name": "SONARR__API"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "http://localhost:5055",
        "description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr.",
        "label": "OVERSEERR__URL",
        "name": "OVERSEERR__URL"
      },
      {
        "default": "http://localhost:7878",
        "description": "Specify your Radarr URL. Leave blank if using Overseerr.",
        "label": "RADARR__URL",
        "name": "RADARR__URL"
      },
      {
        "default": "http://localhost:8989",
        "description": "Specify your Sonarr URL. Leave blank if using Overseerr.",
        "label": "SONARR__URL",
        "name": "SONARR__URL"
      },
      {
        "default": "true",
        "description": "Sets whether users can request partial seasons.",
        "label": "PARTIAL_SEASONS",
        "name": "PARTIAL_SEASONS"
      }
    ],
    "image": "linuxserver/doplarr:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png",
    "name": "Doplarr",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doplarr/config</p>",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Doplarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/doplarr/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "File Management"
    ],
    "description": "[Double Commander](https://doublecmd.sourceforge.io/) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/doublecommander:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
    "name": "Doublecommander",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doublecommander/config<br>mkdir -p /volume1/docker/doublecommander/data</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Doublecommander",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/doublecommander/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/doublecommander/data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Dozzle is a real-time log viewer for docker containers.",
    "image": "amir20/dozzle:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/dozzle.png",
    "name": "dozzle",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://dozzle.dev/\" target=\"_blank\">https://dozzle.dev/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/amir20/dozzle\" target=\"_blank\">https://github.com/amir20/dozzle</a><br><br><br>View logs for docker containers.",
    "platform": "linux",
    "ports": [
      "8888:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Dozzle",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }
    ]
  },
  {
    "categories": [
      "Security"
    ],
    "description": "Dradis Framework: Collaboration and reporting for IT Security teams http://dradisframework.org",
    "image": "raesene/dradis:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dradis-logo.png",
    "name": "dradis",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Dradis",
    "type": 1
  },
  {
    "categories": [
      "CMD",
      "Other",
      "Tools",
      "Web"
    ],
    "description": "Drupal CMS.  Make sure you run the install script under tools before installing.",
    "env": [
      {
        "default": "",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "drupal",
        "label": "DATABASE_NAME",
        "name": "DATABASE_NAME"
      },
      {
        "default": "drupal",
        "label": "DATABASE_USER",
        "name": "DATABASE_USER"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/drupal.png",
    "name": "drupal",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.drupal.org/\" target=\"_blank\">https://www.drupal.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.drupal.org/docs/develop/local-server-setup/docker-development-environments/docker-with-solr-cloud-integration/docker-configuration\" target=\"_blank\">https://www.drupal.org/docs/develop/local-server-setup/docker-development-environments/docker-with-solr-cloud-integration/docker-configuration</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_drupal.sh\" target=\"_blank\">install_drupal.sh</a><br><br>",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/drupal.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Drupal",
    "type": 3
  },
  {
    "categories": [
      "DNS",
      "Tools"
    ],
    "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.\r\n\r\nFirst, go to duckdns site, register your subdomain and retrieve your token\r\nThen run the docker create command above with your subdomain(s) and token\r\nIt will update your IP with the DuckDNS service every 5 minutes\r\n\r\n",
    "env": [
      {
        "default": "",
        "label": "SUBDOMAINS (Comma Separated List)",
        "name": "SUBDOMAINS"
      },
      {
        "default": "",
        "label": "TOKEN",
        "name": "TOKEN"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/duckdns:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/duckdns.png",
    "name": "duckdns",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.duckdns.org/\" target=\"_blank\">https://www.duckdns.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-duckdns\" target=\"_blank\">https://docs.linuxserver.io/images/docker-duckdns</a><br><br><br>",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Duck DNS",
    "type": 1
  },
  {
    "categories": [
      "Backup",
      "Cloud",
      "Other",
      "Productivity",
      "Tools"
    ],
    "description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/duplicati:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/duplicati-icon.png",
    "name": "duplicati",
    "platform": "linux",
    "ports": [
      "8200:8200/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Duplicati",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Duplicati",
        "container": "/config"
      },
      {
        "container": "/backups"
      },
      {
        "container": "/source"
      },
      {
        "container": "/tmp"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Eclipse Mosquitto is an open source implementation of a server for versions 5, 3.1.1, and 3.1 of the MQTT protocol.\r\nYou will need to create /portainer/Files/AppData/Config/Mosquitto/config/mosquitto.conf and if needed your password file.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
    "hostname": "rpi-mosquitto",
    "image": "eclipse-mosquitto:latest",
    "logo": "https://raw.githubusercontent.com/docker-library/docs/757578e3a44e5460a8a11d32a81776f8b74231a9/eclipse-mosquitto/logo.png",
    "name": "mosquitto",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/eclipse-mosquitto\" target=\"_blank\">https://hub.docker.com/_/eclipse-mosquitto</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "1883:1883/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Eclipse Mosquitto",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Mosquitto/config",
        "container": "/mosquitto/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Mosquitto/data",
        "container": "/mosquitto/data"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Mosquitto/log",
        "container": "/mosquitto/log"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Eclipse Mosquitto is an open source message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1. Mosquitto is lightweight and is suitable for use on all devices from low power single board computers to full servers.\r\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
    "image": "eclipse-mosquitto:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/eclipse-mosquitto.png",
    "name": "eclipse-mosquitto",
    "platform": "linux",
    "ports": [
      "1883:1883/tcp",
      "9001:9001/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Eclipse Mosquitto MQTT",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/config",
        "container": "/mosquitto/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/data",
        "container": "/mosquitto/data"
      },
      {
        "bind": "/portainer/Files/AppData/Config/eclipse-mosquitto/log",
        "container": "/mosquitto/log"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_mosquitto.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_mosquitto.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "database"
    ],
    "description": "Open-source search and analytics engine",
    "image": "elasticsearch:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
    "platform": "linux",
    "ports": [
      "9200/tcp",
      "9300/tcp"
    ],
    "title": "Elasticsearch",
    "type": 1,
    "volumes": [
      {
        "container": "/usr/share/elasticsearch/data"
      }
    ]
  },
  {
    "categories": [
      "Home Media"
    ],
    "description": "[Emby](https://emby.media/) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/emby:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png",
    "name": "Emby",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emby/config<br>mkdir -p /volume1/docker/emby/data/tvshows<br>mkdir -p /volume1/docker/emby/data/movies<br></p>",
    "platform": "linux",
    "ports": [
      "8096:8096/tcp",
      "8920:8920/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Emby",
    "type": 1,
    "volumes": [
      {
        "bind": "/opt/vc/lib",
        "container": "/opt/vc/lib"
      },
      {
        "bind": "/volume1/docker/emby/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/emby/data/movies",
        "container": "/data/movies"
      },
      {
        "bind": "/volume1/docker/emby/data/tvshows",
        "container": "/data/tvshows"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
    "image": "linuxserver/embystat:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/embystat.png",
    "name": "embystat",
    "note": "Access the ui at your-ip:6555. Follow the setup wizard on initial install. Then configure the required services.",
    "platform": "linux",
    "ports": [
      "6555:6555/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "EmbyStat",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/EmbyStat",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Emulatorjs](https://github.com/linuxserver/emulatorjs) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
    "env": [
      {
        "default": "/",
        "description": "Specify a subfolder for reverse proxies IE '/FOLDER/'",
        "label": "SUBFOLDER",
        "name": "SUBFOLDER"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/emulatorjs:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png",
    "name": "Emulatorjs",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emulatorjs/config<br>mkdir -p /volume1/docker/emulatorjs/data</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp",
      "4001:4001/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Emulatorjs",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/emulatorjs/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/emulatorjs/data",
        "container": "/data"
      }
    ]
  },
  {
    "description": "[Endlessh](https://github.com/skeeto/endlessh) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
    "env": [
      {
        "default": "",
        "description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both.",
        "label": "BINDFAMILY",
        "name": "BINDFAMILY"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "10000",
        "description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines.",
        "label": "MSDELAY",
        "name": "MSDELAY"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "32",
        "description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes.",
        "label": "MAXLINES",
        "name": "MAXLINES"
      },
      {
        "default": "4096",
        "description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue.",
        "label": "MAXCLIENTS",
        "name": "MAXCLIENTS"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "false",
        "description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/config/logs/endlessh` (`/config` needs to be mapped).",
        "label": "LOGFILE",
        "name": "LOGFILE"
      }
    ],
    "image": "linuxserver/endlessh:latest",
    "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
    "name": "Endlessh",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/endlessh/config</p>",
    "platform": "linux",
    "ports": [
      "22:2222/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Endlessh",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/endlessh/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/ffmpeg:latest",
    "logo": "",
    "name": "Ffmpeg",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ffmpeg/config</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Ffmpeg",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/ffmpeg/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Web File Browser which can be used as a middleware or standalone app.",
    "image": "80x86/filebrowser:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/filebrowser.png",
    "name": "filebrowser",
    "note": "The default user and password is admin/admin.",
    "platform": "linux",
    "ports": [
      "8082:8082/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "FileBrowser",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config",
        "container": "/myfiles"
      },
      {
        "bind": "/portainer/Files/AppData/Config/FileBrowser",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Web File Browser which can be used as a middleware or standalone app.",
    "image": "filebrowser/filebrowser:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filebrowser.png",
    "name": "filebrowser-latest",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://filebrowser.org/\" target=\"_blank\">https://filebrowser.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://filebrowser.org/installation#docker\" target=\"_blank\">https://filebrowser.org/installation#docker</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4 target=\"_blank\">Novaspirit Tech - Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>The default user and password is admin/admin.",
    "platform": "linux",
    "ports": [
      "8082:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "FileBrowser latest",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/srv"
      },
      {
        "bind": "/portainer/Files/AppData/Config/filebrowser/filebrowser.db",
        "container": "/database/filebrowser.db"
      },
      {
        "bind": "/portainer/Files/AppData/Config/filebrowser/settings.json",
        "container": "/config/settings.json"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "[arm][s6-version] Web File Browser which can be used as a middleware or standalone app.",
    "image": "filebrowser/filebrowser:s6",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/filebrowser.png",
    "name": "filebrowser",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://filebrowser.org/\" target=\"_blank\">https://filebrowser.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://filebrowser.org/installation#docker\" target=\"_blank\">https://filebrowser.org/installation#docker</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4 target=\"_blank\">Novaspirit Tech - Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>The default user and password is admin/admin.",
    "platform": "linux",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "ports": [
      "8082:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "FileBrowser S6",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/srv"
      },
      {
        "bind": "/portainer/Files/AppData/Config/filebrowser/filebrowser.db",
        "container": "/database/filebrowser.db"
      },
      {
        "bind": "/portainer/Files/AppData/Config/filebrowser/settings.json",
        "container": "/config/settings.json"
      }
    ]
  },
  {
    "description": "[FIleZilla](https://filezilla-project.org/) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/filezilla:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
    "name": "Filezilla",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/filezilla/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Filezilla",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/filezilla/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Firefox](https://www.mozilla.org/en-US/firefox/) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/firefox:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
    "name": "Firefox",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/firefox/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Firefox",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/firefox/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
    "env": [
      {
        "default": "",
        "label": "Flame Password",
        "name": "PASSWORD"
      }
    ],
    "image": "pawelmalak/flame:multiarch",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/flame.png",
    "name": "Flame",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/flame\" target=\"_blank\">https://github.com/pawelmalak/flame</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/flame#with-docker-recommended\" target=\"_blank\">https://github.com/pawelmalak/flame#with-docker-recommended</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "5005:5005/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Flame",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Flame/data",
        "container": "/app/data"
      },
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "FlareSolverr is a proxy server to bypass Cloudflare and DDoS-GUARD protection.",
    "env": [
      {
        "default": "info",
        "label": "LOG_LEVEL",
        "name": "LOG_LEVEL"
      },
      {
        "default": "false",
        "label": "LOG_HTML",
        "name": "LOG_HTML"
      },
      {
        "default": "none",
        "label": "CAPTCHA_SOLVER",
        "name": "CAPTCHA_SOLVER"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "ghcr.io/flaresolverr/flaresolverr:latest",
    "logo": "https://raw.githubusercontent.com/FlareSolverr/FlareSolverr/c48d342b9cfb65d7696b96e9867fcff0ae87a0e2/resources/flaresolverr_logo.svg",
    "name": "FlareSolverr",
    "platform": "linux",
    "ports": [
      "8191:8191/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "FlareSolverr",
    "type": 1,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Docker Documentation: </b><a href=\"https://github.com/FlareSolverr/FlareSolverr#installation\" target=\"_blank\">https://github.com/FlareSolverr/FlareSolverr#installation</a><br><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A distraction-free, database-less note taking app that puts your content first.",
    "env": [
      {
        "default": "password",
        "label": "FLATNOTES_AUTH_TYPE",
        "name": "FLATNOTES_AUTH_TYPE"
      },
      {
        "default": "admin",
        "label": "FLATNOTES_USERNAME",
        "name": "FLATNOTES_USERNAME"
      },
      {
        "default": "changeme",
        "label": "FLATNOTES_PASSWORD",
        "name": "FLATNOTES_PASSWORD"
      },
      {
        "default": "aLongRandomSeriesOfCharacters",
        "label": "FLATNOTES_SECRET_KEY",
        "name": "FLATNOTES_SECRET_KEY"
      }
    ],
    "image": "dullage/flatnotes:latest",
    "logo": "https://raw.githubusercontent.com/spandan13/pi-hosted/master/images/flatnotes.png",
    "name": "flatnotes",
    "platform": "linux",
    "ports": [
      "8715:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "flatnotes",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/flatnotes/data",
        "container": "/app/data"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Dullage/flatnotes\" target=\"_blank\">https://github.com/Dullage/flatnotes</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/dullage/flatnotes\" target=\"_blank\">https://hub.docker.com/r/dullage/flatnotes</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_flatnotes.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_flatnotes.sh | bash</h3><br><br>"
  },
  {
    "description": "[Fleet](https://github.com/linuxserver/fleet) provides an online web interface which displays a set of maintained images from one or more owned repositories.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "DATABASE",
        "description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES.",
        "label": "fleet_admin_authentication_type",
        "name": "fleet_admin_authentication_type"
      },
      {
        "default": "dbuserpassword",
        "description": "The database user's password.",
        "label": "fleet_database_password",
        "name": "fleet_database_password"
      },
      {
        "default": "fleet_user",
        "description": "The username with the relevant GRANT permissions for the database",
        "label": "fleet_database_username",
        "name": "fleet_database_username"
      },
      {
        "default": "jdbc:mariadb://<url>:3306/fleet",
        "description": "The full JDBC connection string to the Fleet database",
        "label": "fleet_database_url",
        "name": "fleet_database_url"
      },
      {
        "default": "randomstring",
        "description": "A string used as part of the password key derivation process.",
        "label": "fleet_admin_secret",
        "name": "fleet_admin_secret"
      }
    ],
    "image": "linuxserver/fleet:latest",
    "logo": "",
    "name": "Fleet",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/fleet/config</p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Fleet",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/fleet/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Folding@home](https://foldingathome.org/) is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/foldingathome:latest",
    "logo": "https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png",
    "name": "Foldingathome",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/foldingathome/config</p>",
    "platform": "linux",
    "ports": [
      "36330:36330/tcp",
      "7396:7396/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Foldingathome",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/foldingathome/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Games",
      "Other"
    ],
    "description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
    "env": [
      {
        "default": "John",
        "label": "Foundry Account Name",
        "name": "FOUNDRY_USERNAME"
      },
      {
        "default": "changeme",
        "label": "Instance Admin Password",
        "name": "FOUNDRY_ADMIN_KEY"
      },
      {
        "default": "password",
        "label": "Foundry Password",
        "name": "FOUNDRY_PASSWORD"
      },
      {
        "default": "true",
        "label": "CONTAINER_PRESERVE_CONFIG",
        "name": "CONTAINER_PRESERVE_CONFIG"
      }
    ],
    "image": "felddy/foundryvtt:release",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/foundrylogo.png",
    "name": "FoundryVTT",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://foundryvtt.com/\" target=\"_blank\">https://foundryvtt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/felddy/foundryvtt\" target=\"_blank\">https://hub.docker.com/r/felddy/foundryvtt</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "30000:30000/tcp"
    ],
    "restart_polocy": "unless-stopped",
    "title": "FoundryVTT Server",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/foundryvtt",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "A free, self-hostable rss aggregator…",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/freshrss:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/freshrss-icon.png",
    "name": "freshrss",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "FreshRSS",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/freshrss",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Books",
      "Tools",
      "Web"
    ],
    "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/gazee:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/gazee-logo.png",
    "name": "gazee",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Gazee",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Comics",
        "container": "/comics"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Gazee",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Gazee",
        "container": "/mylar"
      }
    ]
  },
  {
    "categories": [
      "blog"
    ],
    "description": "Free and open-source blogging platform",
    "image": "ghost:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
    "note": "Access the blog management interface under <code>/ghost/</code>.",
    "platform": "linux",
    "ports": [
      "2368/tcp"
    ],
    "title": "Ghost",
    "type": 1,
    "volumes": [
      {
        "container": "/var/lib/ghost/content"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "Ghostfolio is a privacy-first, open source dashboard for your personal finances. Break down your asset allocation, know your net worth and make solid, data-driven investment decisions.",
    "env": [
      {
        "default": "ghostfolio_usr",
        "label": "POSTGRES_USER",
        "name": "POSTGRES_USER"
      },
      {
        "default": "r2sp88fzvjnj9e24maycjv6e7kukj8wurcmt",
        "label": "POSTGRES_PASSWORD",
        "name": "POSTGRES_PASSWORD"
      },
      {
        "default": "ghostfolio_db",
        "label": "POSTGRES_DB",
        "name": "POSTGRES_DB"
      },
      {
        "default": "",
        "label": "ALPHA_VANTAGE_API_KEY",
        "name": "ALPHA_VANTAGE_API_KEY"
      },
      {
        "default": "4574k48a355hkcbew7h69xazz694bd32xmze",
        "label": "ACCESS_TOKEN_SALT",
        "name": "ACCESS_TOKEN_SALT"
      },
      {
        "default": "8k8zvx2krrrh7qcsqnsn73e5bvfesupy3b75",
        "label": "JWT_SECRET_KEY",
        "name": "JWT_SECRET_KEY"
      }
    ],
    "logo": "https://ghostfol.io/assets/apple-touch-icon.png",
    "name": "ghostfolio",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/ghostfolio.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Ghostfolio",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://ghostfol.io/\" target=\"_blank\">https://ghostfol.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ghostfolio/ghostfolio#self-hosting\" target=\"_blank\">https://github.com/ghostfolio/ghostfolio#self-hosting</a><br><br><br>"
  },
  {
    "categories": [
      "SCM",
      "Tools"
    ],
    "description": "A painless self-hosted Git service.",
    "env": [
      {
        "default": "1000",
        "label": "USER_GID",
        "name": "USER_GID"
      },
      {
        "default": "1000",
        "label": "USER_UID",
        "name": "USER_UID"
      }
    ],
    "image": "gitea/gitea:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gitea.png",
    "name": "gitea",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gitea.com/\" target=\"_blank\">https://gitea.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.gitea.io/en-us/install-with-docker/\" target=\"_blank\">https://docs.gitea.io/en-us/install-with-docker/</a><br><br><br>More possible Environment Variables: https://docs.gitea.io/en-us/install-with-docker/#managing-deployments-with-environment-variables",
    "platform": "linux",
    "ports": [
      "222:22/tcp",
      "8124:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Gitea",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime:ro"
      },
      {
        "bind": "/etc/timezone",
        "container": "/etc/timezone:ro"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Gitea",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "SCM",
      "Tools"
    ],
    "description": "Gitea with Mariadb: A painless self-hosted Git service.",
    "env": [
      {
        "default": "",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "default": "1000",
        "label": "USER_GID",
        "name": "USER_GID"
      },
      {
        "default": "1000",
        "label": "USER_UID",
        "name": "USER_UID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "gitea",
        "label": "DATABASE_NAME",
        "name": "DATABASE_NAME"
      },
      {
        "default": "gitea",
        "label": "DATABASE_USER",
        "name": "DATABASE_USER"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gitea.png",
    "name": "gitea-mysql",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gitea.com/\" target=\"_blank\">https://gitea.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.gitea.io/en-us/install-with-docker/#mysql-database\" target=\"_blank\">https://docs.gitea.io/en-us/install-with-docker/#mysql-database</a><br><br><br>More possible Environment Variables: https://docs.gitea.io/en-us/install-with-docker/#managing-deployments-with-environment-variables",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/gitea-mariadb.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Gitea with Mariadb",
    "type": 3
  },
  {
    "categories": [
      "development",
      "project-management"
    ],
    "description": "Open-source end-to-end software development platform",
    "image": "gitlab/gitlab-ce:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
    "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
    "platform": "linux",
    "ports": [
      "22/tcp",
      "443/tcp",
      "80/tcp"
    ],
    "title": "Gitlab CE",
    "type": 1,
    "volumes": [
      {
        "container": "/etc/gitlab"
      },
      {
        "container": "/var/log/gitlab"
      },
      {
        "container": "/var/opt/gitlab"
      }
    ]
  },
  {
    "categories": [
      "Proxy"
    ],
    "description": "Simple socks5 server using go-socks5 with authentication options",
    "image": "serjs/go-socks5-proxy:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/socks5.png",
    "name": "socks5-proxy",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Go-Socks5-Proxy",
    "type": 1,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/serjs/go-socks5-proxy\" target=\"_blank\">https://hub.docker.com/r/serjs/go-socks5-proxy</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/serjs/go-socks5-proxy\" target=\"_blank\">https://hub.docker.com/r/serjs/go-socks5-proxy</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=IWj1-j2QWvo target=\"_blank\">Novaspirit Tech - Route Docker Traffic Through VPN Container</a><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A simple server for sending and receiving messages",
    "env": [
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "admin",
        "label": "GOTIFY_DEFAULTUSER_NAME",
        "name": "GOTIFY_DEFAULTUSER_NAME"
      },
      {
        "default": "admin123",
        "label": "GOTIFY_DEFAULTUSER_PASS",
        "name": "GOTIFY_DEFAULTUSER_PASS"
      }
    ],
    "image": "gotify/server-arm64:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gotify.png",
    "name": "gotify",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gotify.net/\" target=\"_blank\">https://gotify.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://gotify.net/docs/install\" target=\"_blank\">https://gotify.net/docs/install</a><br><br><br>ARM7 Image. Documentation is Available <a href='https://gotify.net/docs/index'>here</a>.",
    "platform": "linux",
    "ports": [
      "9008:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Gotify",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/gotify",
        "container": "/app/data"
      }
    ]
  },
  {
    "categories": [
      "Monitor",
      "Tools"
    ],
    "description": "Grafana Dashboard anything. Observe everything.  Query, visualize, alert on, and understand your data no matter where it’s stored. With Grafana you can create, explore, and share all of your data through beautiful, flexible dashboards.",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/grafana.png",
    "name": "grafana",
    "platform": "linux",
    "ports": [
      "3030:3000/tcp"
    ],
    "repository": {
      "stackfile": "stack/grafana.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Grafana",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://grafana.com/grafana/\" target=\"_blank\">https://grafana.com/grafana/</a><br><b>Official Docker Documentation: </b><a href=\"https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/\" target=\"_blank\">https://grafana.com/docs/grafana/v9.0/setup-grafana/installation/docker/</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_grafana.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_grafana.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "Web Platform"
    ],
    "description": "[Grav](https://github.com/getgrav/grav/) is a Fast, Simple, and Flexible, file-based Web-platform.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/grav:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png",
    "name": "Grav",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/grav/config</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Grav",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/grav/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Management",
      "Monitor",
      "Web",
      "Tools"
    ],
    "description": "Graylog is a centralized logging solution that allows the user to aggregate and search through logs. It provides a powerful query language, a processing pipeline for data transformation, alerting abilities, and much more.",
    "env": [
      {
        "default": "somepasswordpepper",
        "label": "GRAYLOG_PASSWORD_SECRET",
        "name": "PASSWORD_SECRET"
      },
      {
        "default": "http://192.168.0.1:7555/",
        "label": "GRAYLOG_HTTP_EXTERNAL_URI",
        "name": "HTTP_URI"
      }
    ],
    "logo": "https://assets-global.website-files.com/5e9fae47f9a5b161fc3f7024/621813dfcf02a2fcaf04b6f3_gl_logo_horiz.svg",
    "name": "graylog",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/graylog.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Graylog",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.graylog.org\" target=\"_blank\">https://www.graylog.org</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.graylog.org/docs/docker\" target=\"_blank\">https://docs.graylog.org/docs/docker</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/graylog_install.md\" target=\"_blank\">graylog_install.md</a></h3><br><br><br>"
  },
  {
    "categories": [
      "Finance",
      "Other",
      "Tools"
    ],
    "description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utulity.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "Timezone",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/grocy:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/grocy_logo.png",
    "name": "grocy",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Grocy",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Grocy",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A clientless remote desktop gateway.",
    "image": "oznu/guacamole:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/guacamole.png",
    "name": "guacamole",
    "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Guacamole",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Guacamole",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Guacd](https://guacamole.apache.org/) - Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. This container is only the backend server component needed to use The official or 3rd party HTML5 frontends.",
    "image": "linuxserver/guacd:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd.png",
    "name": "Guacd",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
    "platform": "linux",
    "ports": [
      "4822:4822/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Guacd",
    "type": 1
  },
  {
    "description": "[Habridge](http://bwssystems.com/#/habridge) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as 'On', 'Off' and 'brightness' commands of the hue protocol. This bridge can control most devices that have a distinct API. In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge. This bridge was built to help put the Internet of Things together. For more information about how to use this software have a look at their Wiki [https://github.com/bwssytems/ha-bridge/wiki](https://github.com/bwssytems/ha-bridge/wiki)",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "<Your Key To Encrypt Security Data>",
        "description": "Key used to secure communication.",
        "label": "SEC_KEY",
        "name": "SEC_KEY"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/habridge:latest",
    "logo": "https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico",
    "name": "Habridge",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/habridge/config</p>",
    "platform": "linux",
    "ports": [
      "50000:50000/tcp",
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Habridge",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/habridge/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Music"
    ],
    "description": null,
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/headphones:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/headphones-icon.png",
    "name": "headphones",
    "platform": "linux",
    "ports": [
      "8181:8181/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Headphones",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/Downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Headphones",
        "container": "/config"
      },
      {
        "bind": "/portainer/Music",
        "container": "/music"
      }
    ]
  },
  {
    "description": "[Healthchecks](https://github.com/healthchecks/healthchecks) is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "<ALLOWED_HOSTS>",
        "description": "array of valid hostnames for the server `['test.com','test2.com']` (default: `['*']`)",
        "label": "ALLOWED_HOSTS",
        "name": "ALLOWED_HOSTS"
      },
      {
        "default": "<DEFAULT_FROM_EMAIL>",
        "description": "From email for alerts",
        "label": "DEFAULT_FROM_EMAIL",
        "name": "DEFAULT_FROM_EMAIL"
      },
      {
        "default": "<EMAIL_HOST>",
        "description": "SMTP host",
        "label": "EMAIL_HOST",
        "name": "EMAIL_HOST"
      },
      {
        "default": "<EMAIL_HOST_PASSWORD>",
        "description": "SMTP password",
        "label": "EMAIL_HOST_PASSWORD",
        "name": "EMAIL_HOST_PASSWORD"
      },
      {
        "default": "<EMAIL_HOST_USER>",
        "description": "SMTP user",
        "label": "EMAIL_HOST_USER",
        "name": "EMAIL_HOST_USER"
      },
      {
        "default": "<EMAIL_PORT>",
        "description": "SMTP port",
        "label": "EMAIL_PORT",
        "name": "EMAIL_PORT"
      },
      {
        "default": "<SECRET_KEY>",
        "description": "A secret key used for cryptographic signing. docker-healthchecks will generate a secure value if one does not exist",
        "label": "SECRET_KEY",
        "name": "SECRET_KEY"
      },
      {
        "default": "<SITE_LOGO_URL>",
        "description": "Custom site logo URL",
        "label": "SITE_LOGO_URL",
        "name": "SITE_LOGO_URL"
      },
      {
        "default": "<SITE_NAME>",
        "description": "The site's name (e.g., 'Example Corp HealthChecks')",
        "label": "SITE_NAME",
        "name": "SITE_NAME"
      },
      {
        "default": "<SITE_ROOT>",
        "description": "The site's top-level URL and the port it listens to if differrent than 80 or 443 (e.g., https://healthchecks.example.com:8000)",
        "label": "SITE_ROOT",
        "name": "SITE_ROOT"
      },
      {
        "default": "<SUPERUSER_EMAIL>",
        "description": "Superuser email",
        "label": "SUPERUSER_EMAIL",
        "name": "SUPERUSER_EMAIL"
      },
      {
        "default": "<SUPERUSER_PASSWORD>",
        "description": "Superuser password",
        "label": "SUPERUSER_PASSWORD",
        "name": "SUPERUSER_PASSWORD"
      },
      {
        "default": "<True or False>",
        "description": "Use TLS for SMTP (`True` or `False`)",
        "label": "EMAIL_USE_TLS",
        "name": "EMAIL_USE_TLS"
      },
      {
        "default": "True/False",
        "description": "Defaults to False. A boolean that turns on/off the Apprise integration (https://github.com/caronc/apprise)",
        "label": "APPRISE_ENABLED",
        "name": "APPRISE_ENABLED"
      },
      {
        "default": "True/False",
        "description": "Defaults to False. Set to true to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file.",
        "label": "REGENERATE_SETTINGS",
        "name": "REGENERATE_SETTINGS"
      }
    ],
    "image": "linuxserver/healthchecks:latest",
    "logo": "https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png",
    "name": "Healthchecks",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/healthchecks/config</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Healthchecks",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/healthchecks/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Documentation"
    ],
    "description": "[HedgeDoc](https://hedgedoc.org/) gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "3000",
        "description": "If you wish to access hedgedoc at a port different than 80, 443 or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change the port mapping accordingly (5000:5000).",
        "label": "CMD_PORT",
        "name": "CMD_PORT"
      },
      {
        "default": "3306",
        "description": "Port to access mysql database default is 3306",
        "label": "DB_PORT",
        "name": "DB_PORT"
      },
      {
        "default": "<hostname or ip>",
        "description": "Host address of mysql database",
        "label": "DB_HOST",
        "name": "DB_HOST"
      },
      {
        "default": "<secret password>",
        "description": "Database password",
        "label": "DB_PASS",
        "name": "DB_PASS"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "false",
        "description": "Set to `true` if accessing over https via reverse proxy.",
        "label": "CMD_PROTOCOL_USESSL",
        "name": "CMD_PROTOCOL_USESSL"
      },
      {
        "default": "hedgedoc",
        "description": "Database name",
        "label": "DB_NAME",
        "name": "DB_NAME"
      },
      {
        "default": "hedgedoc",
        "description": "Database user",
        "label": "DB_USER",
        "name": "DB_USER"
      },
      {
        "default": "localhost",
        "description": "The address the gui will be accessed at (ie. `192.168.1.1` or `hedgedoc.domain.com`).",
        "label": "CMD_DOMAIN",
        "name": "CMD_DOMAIN"
      },
      {
        "default": "true",
        "description": "Set to `false` if accessing at port `80` or `443`.",
        "label": "CMD_URL_ADDPORT",
        "name": "CMD_URL_ADDPORT"
      }
    ],
    "image": "linuxserver/hedgedoc:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png",
    "name": "Hedgedoc",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/hedgedoc/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Hedgedoc",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/hedgedoc/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "Web"
    ],
    "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/heimdall:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/heimdall-icon.png",
    "name": "heimdall",
    "platform": "linux",
    "ports": [
      "443/tcp",
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Heimdall",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Heimdall",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Tools",
      "Web",
      "Other"
    ],
    "description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homarr.vercel.app/\" target=\"_blank\">https://homarr.vercel.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ajnart/homarr\" target=\"_blank\">https://github.com/ajnart/homarr</a><br><br><br>This version is not secured and should only be used if you want Docker integration and you don't worry about users on your network.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "ghcr.io/ajnart/homarr:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homarr.png",
    "name": "homarr",
    "platform": "linux",
    "ports": [
      "7575:7575/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Homarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Homarr/configs",
        "container": "/app/data/configs"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Homarr/icons",
        "container": "/app/public/icons"
      }
    ]
  },
  {
    "categories": [
      "Tools",
      "Web",
      "Other"
    ],
    "description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homarr.vercel.app/\" target=\"_blank\">https://homarr.vercel.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ajnart/homarr\" target=\"_blank\">https://github.com/ajnart/homarr</a><br><br><br>This version does not allow for interaction with the docker environment for security purposes.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "ghcr.io/ajnart/homarr:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homarr.png",
    "name": "homarr-secured",
    "platform": "linux",
    "ports": [
      "7575:7575/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Homarr-Secured",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Homarr/configs",
        "container": "/app/data/configs"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Homarr/icons",
        "container": "/app/public/icons"
      }
    ]
  },
  {
    "categories": [
      "Home Automation"
    ],
    "description": "[Home Assistant Core](https://www.home-assistant.io/) - Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/homeassistant:latest",
    "logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
    "name": "Homeassistant",
    "network": "host",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/homeassistant/config</p>",
    "platform": "linux",
    "ports": [
      "8123:8123/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Homeassistant",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/homeassistant/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "HomeAutomation"
    ],
    "description": "Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
    "env": [
      {
        "default": "1",
        "label": "HOMEBRIDGE_CONFIG_UI",
        "name": "HOMEBRIDGE_CONFIG_UI"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "8581",
        "label": "HOMEBRIDGE_CONFIG_UI_PORT",
        "name": "HOMEBRIDGE_CONFIG_UI_PORT"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "oznu/homebridge:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
    "name": "homebridge",
    "network": "host",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
    "platform": "linux",
    "privileged": true,
    "restart_policy": "unless-stopped",
    "title": "Homebridge",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/homebridge",
        "container": "/homebridge"
      }
    ]
  },
  {
    "categories": [
      "HomeAutomation"
    ],
    "description": "Debian Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
    "env": [
      {
        "default": "1",
        "label": "HOMEBRIDGE_CONFIG_UI",
        "name": "HOMEBRIDGE_CONFIG_UI"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "8581",
        "label": "HOMEBRIDGE_CONFIG_UI_PORT",
        "name": "HOMEBRIDGE_CONFIG_UI_PORT"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "oznu/homebridge:debian",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
    "name": "homebridge-debian",
    "network": "host",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
    "platform": "linux",
    "privileged": true,
    "restart_policy": "unless-stopped",
    "title": "Homebridge - Debian",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/debian-homebridge",
        "container": "/homebridge"
      }
    ]
  },
  {
    "categories": [
      "Dashboard"
    ],
    "description": "Homepage helps you organize your self-hosted services by making them accessible from a single place",
    "image": "ghcr.io/benphelps/homepage:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homepage.png",
    "name": "Homepage",
    "platform": "linux",
    "ports": [
      "3015:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Homepage",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Homepage/",
        "container": "/app/config"
      },
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/benphelps/homepage\" target=\"_blank\">https://github.com/benphelps/homepage</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/benphelps/homepage\" target=\"_blank\">https://github.com/benphelps/homepage</a><br><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
    "env": [
      {
        "default": "1000",
        "label": "GID",
        "name": "GID"
      },
      {
        "default": "1000",
        "label": "UID",
        "name": "UID"
      }
    ],
    "image": "b4bz/homer:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homer.png",
    "name": "homer",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/bastienwirtz/homer\" target=\"_blank\">https://github.com/bastienwirtz/homer</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/bastienwirtz/homer/blob/main/docs/configuration.md\" target=\"_blank\">https://github.com/bastienwirtz/homer/blob/main/docs/configuration.md</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=_d3J88ootYo&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=2\" target=\"_blank\">Installing and Configuring Homer Dashboard</a><br><br>This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
    "platform": "linux",
    "ports": [
      "8902:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Homer",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Homer",
        "container": "/www/config.yml"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Homer/assets",
        "container": "/www/assets"
      }
    ]
  },
  {
    "categories": [
      "Music",
      "Other",
      "Video"
    ],
    "description": "HTPC Manaager, a front end for many htpc related applications. Hellowlol version.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/htpcmanager:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/htpcmanager-icon.png",
    "name": "htpcmanager",
    "platform": "linux",
    "ports": [
      "8085:8085/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "HTPC Manager",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/HTPCmanager",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "webserver"
    ],
    "description": "Open-source HTTP server",
    "image": "httpd:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "title": "Httpd",
    "type": 1,
    "volumes": [
      {
        "container": "/usr/local/apache2/htdocs/"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Create agents that monitor and act on your behalf.",
    "image": "huginn/huginn:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/huginn.png",
    "name": "huginn",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Huginn",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/huginn",
        "container": "/var/lib/mysql"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "InfluxDB is an open source time series database for recording metrics, events, and analytics. You will need to add /portainer/Files/AppData/Config/Influxdb/config/influxdb.conf",
    "hostname": "rpi-influxdb1810",
    "image": "influxdb:1.8.10",
    "logo": "https://raw.githubusercontent.com/docker-library/docs/43d87118415bb75d7bb107683e79cd6d69186f67/influxdb/logo.png",
    "name": "influxdb1810",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.influxdata.com/\" target=\"_blank\">https://www.influxdata.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker\" target=\"_blank\">https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8086:8086/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Influxdb 1.8.10",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Influxdb/config",
        "container": "/var/lib/influxdb"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Influxdb/data",
        "container": "/var/lib/influxdb"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "InfluxDB is an open source time series database for recording metrics, events, and analytics.",
    "env": [
      {
        "default": "setup",
        "label": "DOCKER_INFLUXDB_INIT_MODE",
        "name": "DOCKER_INFLUXDB_INIT_MODE"
      },
      {
        "default": "your-initial-username",
        "label": "DOCKER_INFLUXDB_INIT_USERNAME",
        "name": "DOCKER_INFLUXDB_INIT_USERNAME"
      },
      {
        "default": "your-initial-password",
        "label": "DOCKER_INFLUXDB_INIT_PASSWORD",
        "name": "DOCKER_INFLUXDB_INIT_PASSWORD"
      },
      {
        "default": "your-initial-organisation",
        "label": "DOCKER_INFLUXDB_INIT_ORG",
        "name": "DOCKER_INFLUXDB_INIT_ORG"
      },
      {
        "default": "your-initial-bucket",
        "label": "DOCKER_INFLUXDB_INIT_BUCKET",
        "name": "DOCKER_INFLUXDB_INIT_BUCKET"
      }
    ],
    "hostname": "rpi-influxdb",
    "image": "influxdb:latest",
    "logo": "https://raw.githubusercontent.com/docker-library/docs/43d87118415bb75d7bb107683e79cd6d69186f67/influxdb/logo.png",
    "name": "influxdb",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.influxdata.com/\" target=\"_blank\">https://www.influxdata.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker\" target=\"_blank\">https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker</a><br><br><br>Set your initial organisation, bucket, username and password below. Wisit Web UI at http://your_host:8086/ for setting up a tocken.",
    "platform": "linux",
    "ports": [
      "8086:8086/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Influxdb Latest",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Influxdb2/data",
        "container": "/var/lib/influxdb2"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Influxdb2/config",
        "container": "/etc/influxdb2"
      }
    ]
  },
  {
    "categories": [
      "Videos",
      "Music"
    ],
    "description": "An open source alternative front-end to YouTube",
    "env": [
      {
        "default": "ChangeMeToASecurePassword",
        "label": "DB_PASSWORD",
        "name": "DB_PASSWORD"
      },
      {
        "default": "3693",
        "label": "PORT",
        "name": "PORT"
      },
      {
        "default": "",
        "description": "Leave it empty if not using a public instance",
        "label": "DOMAIN",
        "name": "DOMAIN"
      },
      {
        "description": "Leave false if not using a public instance",
        "label": "HTTPS_ONLY",
        "name": "HTTPS_ONLY",
        "select": [
          {
            "default": false,
            "text": "ALLOW HTTP",
            "value": "false"
          },
          {
            "text": "FORCE HTTPS (recommended for public instance)",
            "value": "true"
          }
        ]
      },
      {
        "default": "",
        "description": "Use 443 if HTTPS_ONLY is enabled or leave it blank",
        "label": "EXTERNAL_PORT",
        "name": "EXTERNAL_PORT"
      },
      {
        "label": "POPULAR_ENABLED",
        "name": "POPULAR_ENABLED",
        "select": [
          {
            "default": true,
            "text": "Enable POPULAR videos in this instance",
            "value": "true"
          },
          {
            "text": "Disable POPULAR page (better for privacy)",
            "value": "false"
          }
        ]
      },
      {
        "label": "STATISTICS_ENABLED",
        "name": "STATISTICS_ENABLED",
        "select": [
          {
            "default": true,
            "text": "Enable Statistics",
            "value": "true"
          },
          {
            "text": "Disable Statistics",
            "value": "false"
          }
        ]
      },
      {
        "label": "REGISTRATION_ENABLED",
        "name": "REGISTRATION_ENABLED",
        "select": [
          {
            "default": true,
            "text": "Allow user registration",
            "value": "true"
          },
          {
            "text": "User registration not allowed",
            "value": "false"
          }
        ]
      },
      {
        "label": "DARK_MODE",
        "name": "DARK_MODE",
        "select": [
          {
            "default": true,
            "text": "Enable Dark Mode",
            "value": "true"
          },
          {
            "text": "Disable Dark Mode",
            "value": "false"
          }
        ]
      },
      {
        "label": "LOGIN_ENABLED",
        "name": "LOGIN_ENABLED",
        "select": [
          {
            "default": true,
            "text": "Allow user to login",
            "value": "true"
          },
          {
            "text": "Only guest users",
            "value": "false"
          }
        ]
      },
      {
        "label": "CAPTCHA_ENABLED",
        "name": "CAPTCHA_ENABLED",
        "select": [
          {
            "default": true,
            "text": "Use CAPTCHA to prevent bot",
            "value": "true"
          },
          {
            "text": "Disable CAPTCHA for registration",
            "value": "false"
          }
        ]
      },
      {
        "default": "US",
        "description": "Look in the configuration example (link above) for more codes",
        "label": "REGION",
        "name": "REGION"
      },
      {
        "label": "RELATED_VIDEOS",
        "name": "RELATED_VIDEOS",
        "select": [
          {
            "default": true,
            "text": "Show related videos",
            "value": "true"
          },
          {
            "text": "Don't show related videos",
            "value": "false"
          }
        ]
      },
      {
        "label": "AUTOPLAY",
        "name": "AUTOPLAY",
        "select": [
          {
            "default": true,
            "text": "Don't play video automaticaly",
            "value": "false"
          },
          {
            "text": "Play video automaticaly",
            "value": "true"
          }
        ]
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/invidious.png",
    "name": "invidious",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://invidious.io/\" target=\"_blank\">https://invidious.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.invidious.io/installation/#docker\" target=\"_blank\">https://docs.invidious.io/installation/#docker</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_invidious.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_invidious.sh | bash</h3><br><br>Your device should have at least <b>4 GB</b> of memory.<br>If you want to customise even further, the easy way is to <b>Copy as Custom</b> and modify the stack file manually. Look at the <a href=\\\"https://github.com/iv-org/invidious/blob/master/config/config.example.yml\\\">official config example</a>.",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/invidious.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "title": "Invidious",
    "type": 3
  },
  {
    "categories": [
      "Cloud",
      "Other",
      "Productivity",
      "Tools",
      "Web"
    ],
    "description": "Invoices, Expenses and Tasks built with Laravel and Flutter.",
    "env": [
      {
        "default": "invoice.my.domain",
        "label": "URL",
        "name": "URL"
      },
      {
        "label": "APP_KEY",
        "name": "APP_KEY"
      },
      {
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "label": "PORT",
        "name": "PORT"
      },
      {
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/invoice_ninja.png",
    "name": "invoice_ninja",
    "note": "The database user is invoice_ninja and the database is ninja_db. Please generate an app key following the documentation <a href='https://github.com/invoiceninja/dockerfiles'>here</a>. ",
    "platform": "linux",
    "repository": {
      "stackfile": "Template/Stack/invoice-ninja.yml",
      "url": "https://github.com/SelfhostedPro/selfhosted_templates"
    },
    "title": "Invoice Ninja",
    "type": 3
  },
  {
    "categories": [
      "HomeAutomation"
    ],
    "description": "IoBroker is a open source IoT platform written in JavaScript that easily connects smarthome components from different manufactures. With the help of plugins (called: adapters) ioBroker is able to communicate with a big variety of IoT hardware and services using different protocols and APIs.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "buanet/iobroker:latest",
    "logo": "https://github.com/buanet/ioBroker.docker/raw/main/docs/img/iobroker_logo.png",
    "name": "iobroker",
    "platform": "linux",
    "ports": [
      "8081:8081/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "iobroker",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/iobrokerdata",
        "container": "/opt/iobroker"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/buanet/ioBroker.docker\" target=\"_blank\">https://github.com/buanet/ioBroker.docker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/buanet/ioBroker.docker\" target=\"_blank\">https://github.com/buanet/ioBroker.docker</a><br><br><br>"
  },
  {
    "categories": [
      "P2P"
    ],
    "description": "[Ipfs](https://ipfs.io/) - A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/ipfs:latest",
    "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Ipfs-logo-1024-ice-text.png/480px-Ipfs-logo-1024-ice-text.png",
    "name": "Ipfs",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ipfs/config</p>",
    "platform": "linux",
    "ports": [
      "4001:4001/tcp",
      "443:443/tcp",
      "5001:5001/tcp",
      "8080:8080/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Ipfs",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/ipfs/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "serverless"
    ],
    "description": "Open-source serverless computing platform",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
    "note": "Deploys the IronFunctions API and UI.",
    "platform": "linux",
    "repository": {
      "stackfile": "stacks/ironfunctions/docker-stack.yml",
      "url": "https://github.com/portainer/templates"
    },
    "title": "IronFunctions",
    "type": 2
  },
  {
    "categories": [
      "serverless"
    ],
    "description": "Open-source serverless computing platform",
    "image": "iron/functions:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
    "platform": "linux",
    "ports": [
      "8080/tcp"
    ],
    "privileged": true,
    "title": "IronFunctions API",
    "type": 1,
    "volumes": [
      {
        "container": "/app/data"
      }
    ]
  },
  {
    "categories": [
      "serverless"
    ],
    "description": "Open-source user interface for IronFunctions",
    "env": [
      {
        "label": "API URL",
        "name": "API_URL"
      }
    ],
    "image": "iron/functions-ui:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
    "platform": "linux",
    "ports": [
      "4000/tcp"
    ],
    "privileged": true,
    "title": "IronFunctions UI",
    "type": 1,
    "volumes": [
      {
        "container": "/app/data"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Tools"
    ],
    "description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/jackett:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jacket-icon.png",
    "name": "jackett",
    "platform": "linux",
    "ports": [
      "9117:9117/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Jackett",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Jackett",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Tools"
    ],
    "description": "JDownloader docker image",
    "env": [
      {
        "default": "",
        "label": "MYJD_DEVICE_NAME",
        "name": "MYJD_DEVICE_NAME"
      },
      {
        "default": "",
        "label": "MYJD_PASSWORD",
        "name": "MYJD_PASSWORD"
      },
      {
        "default": "",
        "label": "MYJD_USER",
        "name": "MYJD_USER"
      }
    ],
    "image": "jaymoulin/jdownloader:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/jdownloader.png",
    "name": "JDownloader",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://my.jdownloader.org/\" target=\"_blank\">https://my.jdownloader.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/jaymoulin/docker-jdownloader\" target=\"_blank\">https://github.com/jaymoulin/docker-jdownloader</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4\" target=\"_blank\">Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>",
    "platform": "linux",
    "ports": [
      "3129:3129/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "JDownloader",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/opt/JDownloader/Downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/JDownloader",
        "container": "/opt/JDownloader/cfg"
      }
    ]
  },
  {
    "categories": [
      "Music",
      "Photos",
      "Video"
    ],
    "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/jellyfin:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/jellyfin.png",
    "name": "jellyfin",
    "platform": "linux",
    "ports": [
      "8096:8096/tcp",
      "8920:8920/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Jellyfin",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Jelllyfin",
        "container": "/config"
      },
      {
        "bind": "/portainer/Movies",
        "container": "/data/movies"
      },
      {
        "bind": "/portainer/TV",
        "container": "/data/tvshows"
      }
    ]
  },
  {
    "categories": [
      "Video",
      "Music",
      "Photos",
      "Management"
    ],
    "description": "jfa-go is a user management app for Jellyfin (and now Emby) that provides invite-based account creation as well as other features that make one's instance much easier to manage.",
    "image": "hrfee/jfa-go:latest",
    "logo": "https://github.com/hrfee/jfa-go/raw/main/images/jfa-go-icon.png",
    "name": "jfa-go",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://jfa-go.com/\" target=\"_blank\">https://jfa-go.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://wiki.jfa-go.com/\" target=\"_blank\">https://wiki.jfa-go.com/</a><br><br><br>This system is setup to work with either Emby or Jellyfin out of the box.  During the initial setup the user will have the option of which server they will be administering.",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Jellyfin-Accounts",
    "type": 1,
    "network": "bridge",
    "ports": [
      "8056:8056/tcp"
    ],
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Jelllyfin",
        "container": "/jf"
      },
      {
        "bind": "/portainer/Files/AppData/Config/jfago",
        "container": "/data"
      },
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime",
        "readonly": true
      }
    ]
  },
  {
    "categories": [
      "Video",
      "Music",
      "Other"
    ],
    "description": "Jellyseerr is a free and open source software application for managing requests for your media library. It is a a fork of Overseerr built to bring support for Jellyfin & Emby media servers!",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "debug",
        "label": "LOG_LEVEL",
        "name": "LOG_LEVEL"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "fallenbagel/jellyseerr:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/jellyseerr.png",
    "name": "jellyseerr",
    "platform": "linux",
    "ports": [
      "5055:5055/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Jellyseerr",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Jellyseerr",
        "container": "/app/config"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Fallenbagel/jellyseerr\" target=\"_blank\">https://github.com/Fallenbagel/jellyseerr</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/fallenbagel/jellyseerr\" target=\"_blank\">https://hub.docker.com/r/fallenbagel/jellyseerr</a><br><br><br>"
  },
  {
    "categories": [
      "continuous-integration"
    ],
    "description": "Open-source continuous integration tool",
    "env": [
      {
        "label": "Jenkins options",
        "name": "JENKINS_OPTS"
      }
    ],
    "image": "jenkins/jenkins:lts",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
    "platform": "linux",
    "ports": [
      "50000/tcp",
      "8080/tcp"
    ],
    "title": "Jenkins",
    "type": 1,
    "volumes": [
      {
        "container": "/var/jenkins_home"
      }
    ]
  },
  {
    "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/jenkins-builder for details.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/jenkins-builder:latest",
    "logo": "",
    "name": "Jenkins-builder",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jenkins-builder/config</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Jenkins-builder",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/jenkins-builder/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "CMS"
    ],
    "description": "Another free and open-source CMS",
    "env": [
      {
        "label": "Database password",
        "name": "JOOMLA_DB_PASSWORD"
      },
      {
        "label": "MySQL database host",
        "name": "JOOMLA_DB_HOST",
        "type": "container"
      }
    ],
    "image": "joomla:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "title": "Joomla",
    "type": 1,
    "volumes": [
      {
        "container": "/var/www/html"
      }
    ]
  },
  {
    "description": "[Kanzi](https://lexigr.am/), formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "https://server.com/kanzi/",
        "description": "Specify the URL at which the webserver is reachable either `https://kanzi.server.com/` or `https://server.com/kanzi/` Note the trailing slash **MUST** be included.",
        "label": "URL_ENDPOINT",
        "name": "URL_ENDPOINT"
      },
      {
        "default": "kanzi",
        "description": "Specify an invocation name for this skill, use either kanzi or kod.",
        "label": "INVOCATION_NAME",
        "name": "INVOCATION_NAME"
      }
    ],
    "image": "linuxserver/kanzi:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi.png",
    "name": "Kanzi",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kanzi/config</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Kanzi",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/kanzi/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "3d-printers",
      "Tools"
    ],
    "description": "Klipper is a 3d-Printer firmware. It combines the power of a general purpose computer with one or more micro-controllers. See the features document for more information on why you should use Klipper.",
    "env": [
      {
        "default": "/dev/ttymxc3",
        "label": "3D_PRINTER_DEVICE",
        "name": "3D_PRINTER_DEVICE"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/drupal.png",
    "name": "klipper-mainsail-moonraker",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/mkuf/klipper\" target=\"_blank\">https://hub.docker.com/r/mkuf/klipper</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mkuf/klipper\" target=\"_blank\">https://hub.docker.com/r/mkuf/klipper</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_klipper.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_klipper.sh | bash</h3><br><br>First you will need to download a printer.conf file from https://github.com/Klipper3d/klipper/tree/master/config and copy it to ",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/klipper.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Klipper[Testing], Mainsail, Moonraker",
    "type": 3
  },
  {
    "categories": [
      "Video"
    ],
    "description": "Headless installation of Kodi™ (formerly known as XBMC™), to enable library updates.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/kodi-headless:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/kodi-icon.png",
    "name": "kodi-headless",
    "platform": "linux",
    "ports": [
      "8080/tcp",
      "9777/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Kodi Headless",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Kodi",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Books",
      "Tools"
    ],
    "description": "Komga is a free and open source comics/mangas/magazines server.",
    "image": "gotson/komga:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/komga.png",
    "name": "komga",
    "platform": "linux",
    "ports": [
      "8995:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Komga",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/komga/config",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/komga/data",
        "container": "/data"
      },
      {
        "bind": "/etc/timezone",
        "container": "/etc/timezone",
        "read_only": "true"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/gotson/komga\" target=\"_blank\">https://github.com/gotson/komga</a><br><b>Official Docker Documentation: </b><a href=\"https://komga.org/\" target=\"_blank\">https://komga.org/</a><br><br><br>"
  },
  {
    "categories": [
      "Books"
    ],
    "description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/lazylibrarian:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/lazylibrarian-icon.png",
    "name": "lazylibrarian",
    "platform": "linux",
    "ports": [
      "5299:5299/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "LazyLibrarian",
    "type": 1,
    "volumes": [
      {
        "container": "/books"
      },
      {
        "container": "/config"
      },
      {
        "container": "/downloads"
      }
    ]
  },
  {
    "description": "[Ldap-auth](https://github.com/nginxinc/nginx-ldap-auth) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
    "env": [
      {
        "default": "",
        "description": "Optionally define a custom fernet key, has to be base64-encoded 32-byte (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)",
        "label": "FERNETKEY",
        "name": "FERNETKEY"
      },
      {
        "default": "",
        "description": "Point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon",
        "label": "CERTFILE",
        "name": "CERTFILE"
      },
      {
        "default": "",
        "description": "Point this to the private key file, matching the certificate file referred to in CERTFILE",
        "label": "KEYFILE",
        "name": "KEYFILE"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/ldap-auth:latest",
    "logo": "https://jumpcloud.com/wp-content/uploads/2016/12/LDAP_Logo-1420591101.jpg",
    "name": "Ldap-auth",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
    "platform": "linux",
    "ports": [
      "8888:8888/tcp",
      "9000:9000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Ldap-auth",
    "type": 1
  },
  {
    "categories": [
      "Tools",
      "Web"
    ],
    "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "DHLEVEL",
        "name": "DHLEVEL",
        "set": "2048"
      },
      {
        "label": "DNSPLUGIN",
        "name": "DNSPLUGIN",
        "set": "http"
      },
      {
        "label": "EMAIL",
        "name": "EMAIL",
        "set": "-Xms256m -Xmx512m"
      },
      {
        "label": "ONLY_SUBDOMAINS",
        "name": "ONLY_SUBDOMAINS",
        "set": "false"
      },
      {
        "label": "SUBDOMAINS",
        "name": "SUBDOMAINS",
        "set": "www,"
      },
      {
        "label": "URL",
        "name": "URL",
        "set": "-Xms256m -Xmx512m"
      },
      {
        "label": "VALIDATION",
        "name": "VALIDATION",
        "set": "http"
      }
    ],
    "image": "linuxserver/letsencrypt:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/letsencrypt.png",
    "name": "letsencrypt",
    "platform": "linux",
    "ports": [
      "443/tcp",
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Let's Encrypt",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/LetsEncrypt",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Tools",
      "Web"
    ],
    "description": "[DEPRECATED] This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
    "env": [
      {
        "default": "-Xms256m -Xmx512m",
        "label": "EMAIL",
        "name": "EMAIL"
      },
      {
        "default": "-Xms256m -Xmx512m",
        "label": "URL",
        "name": "URL"
      },
      {
        "default": "www,",
        "label": "SUBDOMAINS",
        "name": "SUBDOMAINS"
      },
      {
        "default": "false",
        "label": "ONLY_SUBDOMAINS",
        "name": "ONLY_SUBDOMAINS"
      },
      {
        "default": "2048",
        "label": "DHLEVEL",
        "name": "DHLEVEL"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "http",
        "label": "VALIDATION",
        "name": "VALIDATION"
      },
      {
        "default": "http",
        "label": "DNSPLUGIN",
        "name": "DNSPLUGIN"
      }
    ],
    "image": "linuxserver/letsencrypt:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/letsencrypt.png",
    "name": "letsencrypt",
    "platform": "linux",
    "ports": [
      "80:80/tcp",
      "443:443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Let's Encrypt [DEPRECATED]",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/LetsEncrypt",
        "container": "/config"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://letsencrypt.org/\" target=\"_blank\">https://letsencrypt.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/linuxserver/letsencrypt\" target=\"_blank\">https://hub.docker.com/r/linuxserver/letsencrypt</a><br><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "An alternative private front-end to Reddit",
    "image": "spikecodes/libreddit:arm",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/libreddit.png",
    "name": "libreddit",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://libreddit.silkky.cloud/\" target=\"_blank\">https://libreddit.silkky.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/spikecodes/libreddit#2-docker\" target=\"_blank\">https://github.com/spikecodes/libreddit#2-docker</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8088:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "libreddit",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/libreddit",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Productivity"
    ],
    "description": "[LibreOffice](https://www.libreoffice.org/) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/libreoffice:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
    "name": "Libreoffice",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/libreoffice/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Libreoffice",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/libreoffice/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A Free and Open Source Speedtest for HTML5 and more.",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/librespeed:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest.png",
    "name": "librespeed",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://librespeed.org/\" target=\"_blank\">https://librespeed.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-librespeed\" target=\"_blank\">https://docs.linuxserver.io/images/docker-librespeed</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "83:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "LibreSpeed",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/LibreSpeed",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Music"
    ],
    "description": "Lidarr is a music collection manager for Usenet and BitTorrent users.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/lidarr:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/lidarr.png",
    "name": "lidarr",
    "platform": "linux",
    "ports": [
      "8686:8686/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "lidarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Lidarr",
        "container": "/config"
      },
      {
        "bind": "/portainer/Music",
        "container": "/music"
      }
    ]
  },
  {
    "description": "[Limnoria](https://github.com/ProgVal/limnoria) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/limnoria:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png",
    "name": "Limnoria",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/limnoria/config</p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Limnoria",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/limnoria/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Alternative front-end for Google Translate, serving as a Free and Open Source translator with over a hundred languages available",
    "env": [
      {
        "default": "true",
        "label": "dark_theme",
        "name": "dark_theme"
      },
      {
        "default": "lingva.ml",
        "label": "site_domain",
        "name": "site_domain"
      },
      {
        "default": "auto",
        "label": "default_source_lang",
        "name": "default_source_lang"
      },
      {
        "default": "en",
        "label": "default_target_lang",
        "name": "default_target_lang"
      }
    ],
    "image": "cinetube/lingva-translate:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lingva-translate.svg",
    "name": "lingva-translate",
    "platform": "linux",
    "ports": [
      "3010:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Lingva Translate",
    "type": 1,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://lingva.ml/\" target=\"_blank\">https://lingva.ml/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/TheDavidDelta/lingva-translate\" target=\"_blank\">https://github.com/TheDavidDelta/lingva-translate</a><br><br><br>"
  },
  {
    "categories": [
      "Tools",
      "Productivity"
    ],
    "description": "This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication.",
    "env": [
      {
        "default": "somesecretjwt",
        "label": "LLDAP_JWT_SECRET",
        "name": "LLDAP_JWT_SECRET"
      },
      {
        "default": "someadminpassword",
        "label": "LLDAP_LDAP_USER_PASS",
        "name": "LLDAP_LDAP_USER_PASS"
      },
      {
        "default": "dc=example,dc=com",
        "label": "LLDAP_LDAP_BASE_DN",
        "name": "LLDAP_LDAP_BASE_DN"
      }
    ],
    "image": "nitnelave/lldap:stable",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lldap.png",
    "name": "LLDAP",
    "platform": "linux",
    "ports": [
      "3890:3890/tcp",
      "17170:17170/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "LLDAP",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/lldap/data",
        "container": "/data"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/nitnelave/lldap\" target=\"_blank\">https://github.com/nitnelave/lldap</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nitnelave/lldap\" target=\"_blank\">https://github.com/nitnelave/lldap</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_lldap.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_lldap.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "Cloud",
      "Management",
      "Photos",
      "Web"
    ],
    "description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/lychee:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/lychee-icon.png",
    "name": "lychee",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Lychee",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Lychee",
        "container": "/config"
      },
      {
        "bind": "/portainer/Pictures",
        "container": "/pictures"
      }
    ]
  },
  {
    "categories": [
      "Cloud",
      "Management",
      "Photos",
      "Web"
    ],
    "description": "Lychee With Mariadb is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
    "env": [
      {
        "default": "",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "lychee",
        "label": "DATABASE_NAME",
        "name": "DATABASE_NAME"
      },
      {
        "default": "lychee",
        "label": "DATABASE_USER",
        "name": "DATABASE_USER"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lychee-icon.png",
    "name": "lychee-mariadb",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://lycheeorg.github.io/\" target=\"_blank\">https://lycheeorg.github.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-lychee\" target=\"_blank\">https://docs.linuxserver.io/images/docker-lychee</a><br><br><br>",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/lychee-mariadb.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Lychee With Mariadb",
    "type": 3
  },
  {
    "categories": [
      "CMS"
    ],
    "description": "Open-source e-commerce platform",
    "image": "alankent/gsd:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/magento.png",
    "platform": "linux",
    "ports": [
      "3000/tcp",
      "3001/tcp",
      "80/tcp"
    ],
    "title": "Magento 2",
    "type": 1,
    "volumes": [
      {
        "container": "/var/www/html/"
      }
    ]
  },
  {
    "categories": [
      "Music"
    ],
    "description": "Simple self-hosted music scrobble database to create personal listening statistics. No recommendations, no social network, no nonsense.",
    "env": [
      {
        "default": "malojapassword",
        "label": "MALOJA_FORCE_PASSWORD",
        "name": "MALOJA_FORCE_PASSWORD"
      },
      {
        "default": "/data",
        "label": "MALOJA_DATA_DIRECTORY",
        "name": "MALOJA_DATA_DIRECTORY"
      }
    ],
    "image": "krateng/maloja:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/maloja.png",
    "name": "maloja",
    "platform": "linux",
    "ports": [
      "42010:42010/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Maloja",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Maloja/Data",
        "container": "/data"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/krateng/maloja\" target=\"_blank\">https://github.com/krateng/maloja</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/krateng/maloja/blob/master/README.md\" target=\"_blank\">https://github.com/krateng/maloja/blob/master/README.md</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_maloja.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_maloja.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "An Enhanced drop in replacement for Mysql",
    "env": [
      {
        "default": "",
        "label": "MYSQL_DATABASE",
        "name": "MYSQL_DATABASE"
      },
      {
        "default": "",
        "label": "MYSQL_USER",
        "name": "MYSQL_USER"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "dbpassword",
        "label": "MYSQL_PASSWORD",
        "name": "MYSQL_PASSWORD"
      },
      {
        "default": "rootpassword",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      }
    ],
    "image": "linuxserver/mariadb:arm32v7-latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/mariadb-icon.png",
    "name": "mariadb",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mariadb.org/\" target=\"_blank\">https://mariadb.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-mariadb\" target=\"_blank\">https://docs.linuxserver.io/images/docker-mariadb</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "3306:3306/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "MariaDB",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Mariadb",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "marketing"
    ],
    "description": "Open-source marketing automation platform",
    "env": [
      {
        "label": "Database password",
        "name": "MAUTIC_DB_PASSWORD"
      },
      {
        "label": "MySQL database host",
        "name": "MAUTIC_DB_HOST",
        "type": "container"
      }
    ],
    "image": "mautic/mautic:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "title": "Mautic",
    "type": 1,
    "volumes": [
      {
        "container": "/var/www/html"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/mcmyadmin2:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mcmyadmin-icon.png",
    "name": "mcmyadmin2",
    "platform": "linux",
    "ports": [
      "25565:25565/tcp",
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "McMyAdmin 2",
    "type": 1,
    "volumes": [
      {
        "container": "/minecraft"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A self-hosted recipe manager and meal planner",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "2",
        "label": "WEB_CONCURRENCY",
        "name": "WEB_CONCURRENCY"
      },
      {
        "default": "8",
        "label": "MAX_WORKERS",
        "name": "MAX_WORKERS"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "false",
        "label": "RECIPE_DISABLE_AMOUNT",
        "name": "RECIPE_DISABLE_AMOUNT"
      },
      {
        "default": "false",
        "label": "RECIPE_DISABLE_COMMENTS",
        "name": "RECIPE_DISABLE_COMMENTS"
      },
      {
        "default": "true",
        "label": "RECIPE_LANDSCAPE_VIEW",
        "name": "RECIPE_LANDSCAPE_VIEW"
      },
      {
        "default": "true",
        "label": "RECIPE_PUBLIC",
        "name": "RECIPE_PUBLIC"
      },
      {
        "default": "true",
        "label": "RECIPE_SHOW_ASSETS",
        "name": "RECIPE_SHOW_ASSETS"
      },
      {
        "default": "true",
        "label": "RECIPE_SHOW_NUTRITION",
        "name": "RECIPE_SHOW_NUTRITION"
      }
    ],
    "image": "hkotel/mealie:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/mealie.png",
    "name": "mealie",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hay-kot.github.io/mealie/\" target=\"_blank\">https://hay-kot.github.io/mealie/</a><br><b>Official Docker Documentation: </b><a href=\"https://hay-kot.github.io/mealie/documentation/getting-started/install/\" target=\"_blank\">https://hay-kot.github.io/mealie/documentation/getting-started/install/</a><br><br><br>Default Credentials: Username: changeme@email.com Password: MyPassword. Documentation is Available <a href='https://hay-kot.github.io/mealie/documentation/getting-started/install/'>here</a>.",
    "platform": "linux",
    "ports": [
      "9925:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Mealie",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/mealie",
        "container": "/app/data"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Video"
    ],
    "description": "Medusa, automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/medusa:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/medusa-icon.png",
    "name": "medusa",
    "platform": "linux",
    "ports": [
      "8081:8081/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Medusa",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Medusa",
        "container": "/config"
      },
      {
        "bind": "/portainer/TV",
        "container": "/tv"
      }
    ]
  },
  {
    "categories": [
      "Downloader"
    ],
    "description": "Web GUI for youtube-dl (using the yt-dlp fork) with playlist support. Allows you to download videos from YouTube and dozens of other sites (https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md)",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "alexta69/metube:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/metube.png",
    "name": "MeTube",
    "platform": "linux",
    "ports": [
      "8081:8081/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "MeTube",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/alexta69/metube\" target=\"_blank\">https://hub.docker.com/r/alexta69/metube</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/alexta69/metube\" target=\"_blank\">https://github.com/alexta69/metube</a><br><br><br>"
  },
  {
    "categories": [
      "OPS"
    ],
    "description": "Microsoft Operations Management Suite Linux agent.",
    "env": [
      {
        "description": "Azure Workspace ID",
        "label": "Workspace ID",
        "name": "AZURE_WORKSPACE_ID"
      },
      {
        "description": "Azure primary key",
        "label": "Primary key",
        "name": "AZURE_PRIMARY_KEY"
      }
    ],
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
    "platform": "linux",
    "repository": {
      "stackfile": "stacks/microsoft-oms/docker-stack.yml",
      "url": "https://github.com/portainer/templates"
    },
    "title": "Microsoft OMS Agent",
    "type": 2
  },
  {
    "categories": [
      "Games",
      "Other",
      "Tools"
    ],
    "description": "This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot. See the Versions section below for more information.",
    "env": [
      {
        "default": "TRUE",
        "label": "EULA",
        "name": "EULA"
      }
    ],
    "image": "itzg/minecraft-server:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/minecraft.png",
    "name": "minecraft",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.minecraft.net/en-us\" target=\"_blank\">https://www.minecraft.net/en-us</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/itzg/docker-minecraft-server#using-docker-compose\" target=\"_blank\">https://github.com/itzg/docker-minecraft-server#using-docker-compose</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "25565:25565/tcp"
    ],
    "restart_polocy": "unless-stopped",
    "title": "Minecraft Server",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Minecraft-data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "Server version of minetest, a free, open source alternative to minecraft.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/minetest:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
    "name": "minetest",
    "platform": "linux",
    "ports": [
      "30000:30000/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Minetest",
    "type": 1,
    "volumes": [
      {
        "container": "/config/.minetest"
      }
    ]
  },
  {
    "categories": [
      "storage"
    ],
    "command": "server /data",
    "description": "A distributed object storage server built for cloud applications and devops",
    "env": [
      {
        "label": "Minio access key",
        "name": "MINIO_ACCESS_KEY"
      },
      {
        "label": "Minio secret key",
        "name": "MINIO_SECRET_KEY"
      }
    ],
    "image": "minio/minio:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
    "platform": "linux",
    "ports": [
      "9000/tcp"
    ],
    "title": "Minio",
    "type": 1,
    "volumes": [
      {
        "container": "/data"
      },
      {
        "container": "/root/.minio"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "Video"
    ],
    "description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.\n\n  The application is designed to stream the requested data to multiple clients (even with one dvb card) at the same time while opening different pids.\n  ",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/minisatip:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/minisatip-icon.png",
    "name": "minisatip",
    "platform": "linux",
    "ports": [
      "1900:1900/udp",
      "554:554/tcp",
      "8875:8875/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Minisatip",
    "type": 1
  },
  {
    "categories": [
      "database"
    ],
    "description": "Open-source document-oriented database",
    "image": "mongo:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
    "platform": "linux",
    "ports": [
      "27017/tcp"
    ],
    "title": "Mongo",
    "type": 1,
    "volumes": [
      {
        "container": "/data/db"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Monica is a great open source personal relationship management system.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "REPLACEMEWITHAWORDOF32CHARACTERS",
        "label": "APP_KEY",
        "name": "APP_KEY"
      },
      {
        "default": "development",
        "label": "APP_ENV",
        "name": "APP_ENV"
      },
      {
        "default": "panda",
        "label": "DATABASE_USER",
        "name": "DATABASE_USER"
      },
      {
        "default": "o8x&max8yt4h@v$q#orvx@72$",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      }
    ],
    "logo": "https://avatars0.githubusercontent.com/u/25832602",
    "name": "monica",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/monica.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "title": "Monica",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.monicahq.com/\" target=\"_blank\">https://www.monicahq.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/monicahq/docker#use-monica-docker-image\" target=\"_blank\">https://github.com/monicahq/docker#use-monica-docker-image</a><br><br><br>"
  },
  {
    "categories": [
      "Music",
      "Other"
    ],
    "description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone..",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/mstream:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/mstream.png",
    "name": "mstream",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mstream.io/\" target=\"_blank\">https://mstream.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-mstream\" target=\"_blank\">https://docs.linuxserver.io/images/docker-mstream</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "3200:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Mstream",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/music"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Mstream",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Chat",
      "Other",
      "Voice"
    ],
    "description": "Mumble is a voicechat program for gamers written on top of Qt and Opus. Murmur is the server backend for Mumble.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "goofball222/murmur:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/Mumble-logo.png",
    "name": "murmur",
    "platform": "linux",
    "ports": [
      "64738:64738/tcp",
      "64738:64738/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Murmur",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/localtime:ro",
        "container": "/etc/localtime"
      },
      {
        "bind": "/portainer/Files/Config/Murmur",
        "container": "/opt/murmur/config"
      },
      {
        "bind": "/portainer/Files/Murmur/data",
        "container": "/opt/murmur/data"
      },
      {
        "bind": "/portainer/Files/Murmur/log",
        "container": "/opt/murmur/log"
      }
    ]
  },
  {
    "categories": [
      "Music",
      "Other",
      "Tools"
    ],
    "description": " MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
    "env": [
      {
        "default": "",
        "label": "BRAINZCODE",
        "name": "BRAINZCODE"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/musicbrainz:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/musicbrainz-icon.png",
    "name": "musicbrainz",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://musicbrainz.org/\" target=\"_blank\">https://musicbrainz.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/linuxserver-archive/docker-musicbrainz\" target=\"_blank\">https://github.com/linuxserver-archive/docker-musicbrainz</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "5000:5000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "MusicBrainz",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/MusicBrainz",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/MusicBrainz",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Proxy",
      "Tools",
      "Web"
    ],
    "description": "A lightweight portal to view, manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/muximux:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/muximux-icon.png",
    "name": "muximux",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Muximux",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Muximux",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Books",
      "Downloaders"
    ],
    "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/mylar:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/mylar-icon.png",
    "name": "mylar",
    "platform": "linux",
    "ports": [
      "8090:8090/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Mylar",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Comics",
        "container": "/comics"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Mylar",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Mylar3](https://github.com/mylar3/mylar3) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/mylar3:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
    "name": "Mylar3",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mylar3/config<br>mkdir -p /volume1/docker/mylar3/comics<br>mkdir -p /volume1/docker/mylar3/downloads</p>",
    "platform": "linux",
    "ports": [
      "8090:8090/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Mylar3",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/mylar3/comics",
        "container": "/comics"
      },
      {
        "bind": "/volume1/docker/mylar3/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/mylar3/downloads",
        "container": "/downloads"
      }
    ]
  },
  {
    "categories": [
      "database"
    ],
    "description": "The most popular open-source database",
    "env": [
      {
        "label": "Root password",
        "name": "MYSQL_ROOT_PASSWORD"
      }
    ],
    "image": "mysql:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
    "platform": "linux",
    "ports": [
      "3306/tcp"
    ],
    "title": "MySQL",
    "type": 1,
    "volumes": [
      {
        "container": "/var/lib/mysql"
      }
    ]
  },
  {
    "description": "[MySQL Workbench](https://www.mysql.com/products/workbench/) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/mysql-workbench:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
    "name": "Mysql-workbench",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mysql-workbench/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Mysql-workbench",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/mysql-workbench/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "n8n is an extendable workflow automation tool.",
    "env": [
      {
        "default": "admin",
        "label": "N8N_BASIC_AUTH_PASSWORD",
        "name": "N8N_BASIC_AUTH_PASSWORD"
      },
      {
        "default": "admin",
        "label": "N8N_BASIC_AUTH_USER",
        "name": "N8N_BASIC_AUTH_USER"
      },
      {
        "default": "true",
        "label": "N8N_BASIC_AUTH_ACTIVE",
        "name": "N8N_BASIC_AUTH_ACTIVE"
      }
    ],
    "image": "n8nio/n8n:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/n8n.jpg",
    "name": "n8n",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://n8n.io/\" target=\"_blank\">https://n8n.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.n8n.io/getting-started/installation/#docker\" target=\"_blank\">https://docs.n8n.io/getting-started/installation/#docker</a><br><br><br>Documentation is Available <a href='https://docs.n8n.io/'>here</a>",
    "platform": "linux",
    "ports": [
      "5678:5678/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "n8n",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/n8n",
        "container": "/home/node/.n8n"
      }
    ]
  },
  {
    "description": "[Nano](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.",
    "env": [
      {
        "default": "--config node.enable_voting=true",
        "description": "Node run command cli args",
        "label": "CLI_OPTIONS",
        "name": "CLI_OPTIONS"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "BLOCK_SIGNATURE",
        "description": "Genesis block signature",
        "label": "LIVE_GENESIS_SIG",
        "name": "LIVE_GENESIS_SIG"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "GENESIS_PUBLIC",
        "description": "Genesis block public key",
        "label": "LIVE_GENESIS_PUB",
        "name": "LIVE_GENESIS_PUB"
      },
      {
        "default": "WORK_FOR_BLOCK",
        "description": "Genesis block proof of work",
        "label": "LIVE_GENESIS_WORK",
        "name": "LIVE_GENESIS_WORK"
      },
      {
        "default": "http://example.com/Nano_64_version_20.7z",
        "description": "HTTP/HTTPS endpoint to download a 7z file with the data.ldb to bootstrap to this node",
        "label": "LMDB_BOOTSTRAP_URL",
        "name": "LMDB_BOOTSTRAP_URL"
      },
      {
        "default": "localhost",
        "description": "Default peer host (can be overidden with an array by command line options)",
        "label": "PEER_HOST",
        "name": "PEER_HOST"
      },
      {
        "default": "nano_xxxxxx",
        "description": "Genesis block account",
        "label": "LIVE_GENESIS_ACCOUNT",
        "name": "LIVE_GENESIS_ACCOUNT"
      }
    ],
    "image": "linuxserver/nano:latest",
    "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
    "name": "Nano",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nano/config</p>",
    "platform": "linux",
    "ports": [
      "7076:3000/tcp",
      "7077:3001/tcp",
      "8075:8075/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Nano",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/nano/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Nano-wallet](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions. This container is a simple nginx wrapper for the light wallet located [here](https://github.com/linuxserver/nano-wallet). You will need to pass a valid RPC host when accessing this container.",
    "image": "linuxserver/nano-wallet:latest",
    "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
    "name": "Nano-wallet",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Nano-wallet",
    "type": 1
  },
  {
    "description": "[Netbootxyz](https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
    "env": [
      {
        "default": "/",
        "description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)",
        "label": "SUBFOLDER",
        "name": "SUBFOLDER"
      },
      {
        "default": "1.9.9",
        "description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)",
        "label": "MENU_VERSION",
        "name": "MENU_VERSION"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "30000:30010",
        "description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)",
        "label": "PORT_RANGE",
        "name": "PORT_RANGE"
      }
    ],
    "image": "linuxserver/netbootxyz:latest",
    "logo": "https://netboot.xyz/images/netboot.xyz.gif",
    "name": "Netbootxyz",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbootxyz/config<br>mkdir -p /volume1/docker/netbootxyz/assets</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp",
      "69:69/udp",
      "8080:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Netbootxyz",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/netbootxyz/assets",
        "container": "/assets"
      },
      {
        "bind": "/volume1/docker/netbootxyz/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Netbox](https://github.com/netbox-community/netbox) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "<ALLOWED_HOST>",
        "description": "The hostname you will use to access the app (i.e., netbox.example.com)",
        "label": "ALLOWED_HOST",
        "name": "ALLOWED_HOST"
      },
      {
        "default": "<BASE_PATH>",
        "description": "The path you will use to access the app (i.e., /netbox, optional, default: none)",
        "label": "BASE_PATH",
        "name": "BASE_PATH"
      },
      {
        "default": "<DB_HOST>",
        "description": "Database host (default: postgres)",
        "label": "DB_HOST",
        "name": "DB_HOST"
      },
      {
        "default": "<DB_NAME>",
        "description": "Database name (default: netbox)",
        "label": "DB_NAME",
        "name": "DB_NAME"
      },
      {
        "default": "<DB_PASSWORD>",
        "description": "Database password",
        "label": "DB_PASSWORD",
        "name": "DB_PASSWORD"
      },
      {
        "default": "<DB_PORT>",
        "description": "Database port (defaul: 5432)",
        "label": "DB_PORT",
        "name": "DB_PORT"
      },
      {
        "default": "<DB_USER>",
        "description": "Database user",
        "label": "DB_USER",
        "name": "DB_USER"
      },
      {
        "default": "<REDIS_DB_CACHE>",
        "description": "Redis database ID for caching (default: 1)",
        "label": "REDIS_DB_CACHE",
        "name": "REDIS_DB_CACHE"
      },
      {
        "default": "<REDIS_DB_TASK>",
        "description": "Redis database ID for tasks (default: 0)",
        "label": "REDIS_DB_TASK",
        "name": "REDIS_DB_TASK"
      },
      {
        "default": "<REDIS_HOST>",
        "description": "Redis host (default: redis)",
        "label": "REDIS_HOST",
        "name": "REDIS_HOST"
      },
      {
        "default": "<REDIS_PASSWORD>",
        "description": "Redis password (default: none)",
        "label": "REDIS_PASSWORD",
        "name": "REDIS_PASSWORD"
      },
      {
        "default": "<REDIS_PORT>",
        "description": "Redis port number (default: 6379)",
        "label": "REDIS_PORT",
        "name": "REDIS_PORT"
      },
      {
        "default": "<REMOTE_AUTH_AUTO_CREATE_USER>",
        "description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False)",
        "label": "REMOTE_AUTH_AUTO_CREATE_USER",
        "name": "REMOTE_AUTH_AUTO_CREATE_USER"
      },
      {
        "default": "<REMOTE_AUTH_BACKEND>",
        "description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend)",
        "label": "REMOTE_AUTH_BACKEND",
        "name": "REMOTE_AUTH_BACKEND"
      },
      {
        "default": "<REMOTE_AUTH_DEFAULT_GROUPS>",
        "description": "The list of groups to assign a new user account when created using remote authentication (optional, default: [])",
        "label": "REMOTE_AUTH_DEFAULT_GROUPS",
        "name": "REMOTE_AUTH_DEFAULT_GROUPS"
      },
      {
        "default": "<REMOTE_AUTH_DEFAULT_PERMISSIONS>",
        "description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {})",
        "label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
        "name": "REMOTE_AUTH_DEFAULT_PERMISSIONS"
      },
      {
        "default": "<REMOTE_AUTH_ENABLED>",
        "description": "Enable remote authentication (optional, default: False)",
        "label": "REMOTE_AUTH_ENABLED",
        "name": "REMOTE_AUTH_ENABLED"
      },
      {
        "default": "<REMOTE_AUTH_HEADER>",
        "description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER)",
        "label": "REMOTE_AUTH_HEADER",
        "name": "REMOTE_AUTH_HEADER"
      },
      {
        "default": "<SUPERUSER_EMAIL>",
        "description": "Email address for `admin` account",
        "label": "SUPERUSER_EMAIL",
        "name": "SUPERUSER_EMAIL"
      },
      {
        "default": "<SUPERUSER_PASSWORD>",
        "description": "Password for `admin` account",
        "label": "SUPERUSER_PASSWORD",
        "name": "SUPERUSER_PASSWORD"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/netbox:latest",
    "logo": "https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg",
    "name": "Netbox",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbox/config</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Netbox",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/netbox/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Troubleshoot slowdowns and anomalies in your infrastructure with thousands of per-second metrics, meaningful visualizations, and insightful health alarms with zero configuration.",
    "env": [
      {
        "default": "1000",
        "label": "DOCKER_GRP",
        "name": "DOCKER_GRP"
      },
      {
        "default": "1000",
        "label": "DOCKER_USR",
        "name": "DOCKER_USR"
      }
    ],
    "image": "netdata/netdata:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/netdata.png",
    "name": "netdata",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.netdata.cloud/\" target=\"_blank\">https://www.netdata.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://learn.netdata.cloud/docs/agent/packaging/docker\" target=\"_blank\">https://learn.netdata.cloud/docs/agent/packaging/docker</a><br><br><br>Documentation is Available <a href='https://learn.netdata.cloud/'>here</a>.",
    "platform": "linux",
    "ports": [
      "19999:19999/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Netdata",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/group",
        "container": "/host/etc/group:ro"
      },
      {
        "bind": "/etc/os-release",
        "container": "/host/etc/os-release:ro"
      },
      {
        "bind": "/etc/passwd",
        "container": "/host/etc/passwd:ro"
      },
      {
        "bind": "/portainer/Files/AppData/Config/netdata/netdataconfig",
        "container": "/etc/netdata"
      },
      {
        "bind": "/portainer/Files/AppData/Config/netdata/netdatalib",
        "container": "/var/lib/netdata"
      },
      {
        "bind": "/proc",
        "container": "/host/proc:ro"
      },
      {
        "bind": "/sys",
        "container": "/host/sys:ro"
      }
    ]
  },
  {
    "categories": [
      "Cloud",
      "Other",
      "Productivity",
      "Tools",
      "Web"
    ],
    "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "label": "PORT",
        "name": "PORT"
      },
      {
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nextcloud-icon.png",
    "name": "nextcloud",
    "note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
    "platform": "linux",
    "repository": {
      "stackfile": "Template/Stack/nextcloud.yml",
      "url": "https://github.com/SelfhostedPro/selfhosted_templates"
    },
    "title": "Nextcloud",
    "type": 3
  },
  {
    "categories": [
      "Cloud",
      "Other",
      "Productivity",
      "Tools",
      "Web"
    ],
    "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "ownyourbits/nextcloudpi",
    "name": "nextcloudpi",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://ownyourbits.com/nextcloudpi/\" target=\"_blank\">https://ownyourbits.com/nextcloudpi/</a><br><b>Official Docker Documentation: </b><a href=\"https://ownyourbits.com/2017/06/08/nextcloudpi-docker-for-raspberry-pi/\" target=\"_blank\">https://ownyourbits.com/2017/06/08/nextcloudpi-docker-for-raspberry-pi/</a><br><br><b>Extra useful script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/reset_premissions_nextcloud.sh\" target=\"_blank\">reset_premissions_nextcloud.sh</a><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=E6IrT3g5Gqc&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=9\" target=\"_blank\">Installing Nextcloud on Raspberry Pi Docker</a><br><br>The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
    "platform": "linux",
    "ports": [
      "4444:4443/tcp",
      "8443:443/tcp",
      "8480:8480/tcp"
    ],
    "title": "NextcloudPi",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/ncdata",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Proxy",
      "Web"
    ],
    "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/nginx:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nginx-icon.png",
    "name": "nginx",
    "platform": "linux",
    "ports": [
      "443/tcp",
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Nginx",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Nginx",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Proxy",
      "Tools"
    ],
    "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "password",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "password",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
    "name": "nginx-proxy-manager",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#using-mysql-mariadb-database\" target=\"_blank\">https://nginxproxymanager.com/setup/#using-mysql-mariadb-database</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/nginx-proxy-manager.sh\" target=\"_blank\">nginx-proxy-manager.sh</a><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10\" target=\"_blank\">Installing Nginx Proxy Manager on Docker</a><br><br>",
    "platform": "linux",
    "ports": [
      "443:443/tcp",
      "80:80/tcp",
      "81:81/tcp"
    ],
    "repository": {
      "stackfile": "stack/nginx-proxy-manager.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Nginx Proxy Manager",
    "type": 3
  },
  {
    "categories": [
      "Proxy",
      "Tools"
    ],
    "description": "[DEPRECATED] Nginx Proxy Manager Version 2 with Mysql enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "password",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "password",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
    "name": "nginx-proxy-manager-mysql",
    "platform": "linux",
    "ports": [
      "80:80/tcp",
      "81:81/tcp",
      "443:443/tcp"
    ],
    "repository": {
      "stackfile": "stack/nginx-proxy-manager.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Nginx Proxy Manager v2 with Mysql [DEPRECATED]",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#using-mysql-mariadb-database\" target=\"_blank\">https://nginxproxymanager.com/setup/#using-mysql-mariadb-database</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/nginx-proxy-manager.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/nginx-proxy-manager.sh | bash</h3><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
  },
  {
    "categories": [
      "Proxy",
      "Tools"
    ],
    "description": "[DEPRECATED] Nginx Proxy Manager v2 with mysql and Goaccess Charts enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "password",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "password",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "default": "false",
        "label": "SKIP_ARCHIVED_LOGS",
        "name": "SKIP_ARCHIVED_LOGS",
        "description": "Defaults to false. Set to true to skip archived logs, i.e. proxy-host*.gz"
      },
      {
        "default": "false",
        "label": "BASIC_AUTH",
        "name": "BASIC_AUTH",
        "description": "Defaults to false. Set to true to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
      },
      {
        "default": "user",
        "label": "BASIC_AUTH_USERNAME Ignore if Basic Auth set to false",
        "name": "BASIC_AUTH_USERNAME",
        "description": "(Optional) Requires BASIC_AUTH to bet set to true. Username for basic authentication."
      },
      {
        "default": "Password",
        "label": "BASIC_AUTH_PASSWORD Ignore if Basic Auth set to false",
        "name": "BASIC_AUTH_PASSWORD",
        "description": "(Optional) Requires BASIC_AUTH to bet set to true. Password for basic authentication."
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
    "name": "nginx-proxy-manager-mysql-goaccess",
    "platform": "linux",
    "ports": [
      "80:80/tcp",
      "81:81/tcp",
      "443:443/tcp",
      "7880:7880/tcp"
    ],
    "repository": {
      "stackfile": "stack/nginx-proxy-manager-goaccess.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Nginx Proxy Manager v2 with Mysql and Goaccess Charts [DEPRECATED]",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#using-mysql-mariadb-database\" target=\"_blank\">https://nginxproxymanager.com/setup/#using-mysql-mariadb-database</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/nginx-proxy-manager.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/nginx-proxy-manager.sh | bash</h3><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
  },
  {
    "categories": [
      "Proxy",
      "Tools"
    ],
    "description": "Nginx Proxy Manager v2 with sqlite and Goaccess Charts enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "false",
        "label": "SKIP_ARCHIVED_LOGS",
        "name": "SKIP_ARCHIVED_LOGS",
        "description": "Defaults to false. Set to true to skip archived logs, i.e. proxy-host*.gz"
      },
      {
        "default": "false",
        "label": "BASIC_AUTH",
        "name": "BASIC_AUTH",
        "description": "Defaults to false. Set to true to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
      },
      {
        "default": "user",
        "label": "BASIC_AUTH_USERNAME Ignore if Basic Auth set to false",
        "name": "BASIC_AUTH_USERNAME",
        "description": "(Optional) Requires BASIC_AUTH to bet set to true. Username for basic authentication."
      },
      {
        "default": "Password",
        "label": "BASIC_AUTH_PASSWORD Ignore if Basic Auth set to false",
        "name": "BASIC_AUTH_PASSWORD",
        "description": "(Optional) Requires BASIC_AUTH to bet set to true. Password for basic authentication."
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
    "name": "nginx-proxy-manager-sqllite-goaccess",
    "platform": "linux",
    "ports": [
      "80:80/tcp",
      "81:81/tcp",
      "443:443/tcp",
      "7880:7880/tcp"
    ],
    "repository": {
      "stackfile": "stack/nginx-proxy-manager-sqlite-goaccess.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Nginx Proxy Manager v2 with Sqlite and Goaccess Charts",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#running-the-app\" target=\"_blank\">https://nginxproxymanager.com/setup/#running-the-app</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
  },
  {
    "categories": [
      "Proxy",
      "Tools"
    ],
    "description": "Nginx Proxy Manager v2 with Sqlite enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "jc21/nginx-proxy-manager:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
    "name": "nginx-proxy-manager-sqlite",
    "platform": "linux",
    "ports": [
      "80:80/tcp",
      "81:81/tcp",
      "443:443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Nginx Proxy Manager v2 with Sqllite",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/nginx-proxy-manager/data",
        "container": "/data"
      },
      {
        "bind": "/portainer/Files/AppData/Config/nginx-proxy-manager/letsencrypt",
        "container": "/etc/letsencrypt"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/\" target=\"_blank\">https://nginxproxymanager.com/setup/</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
  },
  {
    "categories": [
      "Proxy",
      "Tools"
    ],
    "description": "[DEVEL] Not ready for production.  Nginx Proxy Manager v3 Develop enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/pi-hosted/pi-hosted/tree/master/docs installing the template",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "jc21/nginx-proxy-manager:v3-develop",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/proxy_mgr.png",
    "name": "nginx-proxy-manager-v3",
    "platform": "linux",
    "ports": [
      "80:80/tcp",
      "81:81/tcp",
      "443:443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Nginx Proxy Manager v3 [DEVEL] NOT READY FOR USE",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/nginx-proxy-manager-v3/data",
        "container": "/data"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/\" target=\"_blank\">https://nginxproxymanager.com/setup/</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/nginx_proxy_manager.md\" target=\"_blank\">nginx_proxy_manager.md</a></h3><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=yl2Laxbqvo8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=10 target=\"_blank\">Novaspirit Tech - Installing Nginx Proxy Manager on Docker</a><br><br>"
  },
  {
    "description": "[Ngircd](https://ngircd.barton.de/) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/ngircd:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
    "name": "Ngircd",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ngircd/config</p>",
    "platform": "linux",
    "ports": [
      "6667:6667/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Ngircd",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/ngircd/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "Web"
    ],
    "description": "A free and open source alternative Twitter front-end focused on privacy and performance.",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/nitter.png",
    "name": "nitter",
    "repository": {
      "stackfile": "stack/nitter.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Nitter",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nitter.net/\" target=\"_blank\">https://nitter.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/zedeus/nitter\" target=\"_blank\">https://github.com/zedeus/nitter</a><br><br><br>"
  },
  {
    "description": "[Nntp2nntp](https://github.com/linuxserver/nntp2nntp) proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast. ## Warning Whilst we know of no nntp2nntp security issues the [upstream code](https://github.com/linuxserver/nntp2nntp) for this project has received no changes since 06.08.15 and is likely abandoned permanently. For this reason we strongly recommend you do not make this application public facing and if you must do so other layers of security and SSL should be considered an absolute bare minimum requirement. We see this proxy being used primarily on a LAN so that all the users NNTP applications can share a common set of internal credentials allowing for central managment of the upstream account e.g change provider, server, thread limits for all applications with one global config change.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "<yourGID>",
        "description": "specify your GID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "<yourUID>",
        "description": "specify your UID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/nntp2nntp:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png",
    "name": "Nntp2nntp",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nntp2nntp/config</p>",
    "platform": "linux",
    "ports": [
      "1563:1563/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Nntp2nntp",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/nntp2nntp/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "Web"
    ],
    "description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.  It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
    "env": [
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "your_secret_goes_here",
        "label": "NODE_RED_CREDENTIAL_SECRET",
        "name": "NODE_RED_CREDENTIAL_SECRET"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/node-red.png",
    "name": "node-red",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nodered.org/\" target=\"_blank\">https://nodered.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://nodered.org/docs/getting-started/docker\" target=\"_blank\">https://nodered.org/docs/getting-started/docker</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "1880:1880/tcp"
    ],
    "repository": {
      "stackfile": "stack/node-red.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Node Red",
    "type": 3
  },
  {
    "categories": [
      "Other"
    ],
    "description": "This is an OpenVPN client docker container that uses recommended NordVPN server. It makes routing containers traffic through OpenVPN easy.",
    "env": [
      {
        "default": "user@email.com",
        "label": "NordVPN user",
        "name": "USER"
      },
      {
        "default": "password",
        "label": "NordVPN password",
        "name": "PASS"
      },
      {
        "default": "Spain;Hong Kong;IE;131",
        "label": "Countries to connect to (see webpage readme)",
        "name": "COUNTRY"
      },
      {
        "default": "Standard VPN servers",
        "label": "Group name filter to which to connect to",
        "name": "GROUP"
      },
      {
        "default": "10",
        "label": "Range of servers to pick from the top",
        "name": "RANDOM_TOP"
      },
      {
        "default": "5 */3 * * *",
        "label": "Define when to look again for new defined servers",
        "name": "RECREATE_VPN_CRON"
      },
      {
        "default": "https://www.google.com",
        "label": "URL to check internet connection is working to",
        "name": "CHECK_CONNECTION_URL"
      },
      {
        "default": "192.168.1.0/24;192.168.2.0/24",
        "label": "Subnet to define network access (read Local Network access to services connecting to the internet through the VPN readme to get the right subnet!)",
        "name": "NETWORK"
      },
      {
        "default": "--mute-replay-warnings",
        "label": "Used to pass extra parameters to openvpn",
        "name": "OPENVPN_OPTS"
      }
    ],
    "image": "azinchen/nordvpn:latest",
    "logo": "https://s3.us-east-2.amazonaws.com/ccp-prd-s3-uploads/2022/3/8/03500108885898f010e823eeb284e393b99e1ad5.png",
    "name": "nord-vpn",
    "platform": "linux",
    "ports": [
      "8080:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "nord-vpn",
    "type": 1,
    "privileged": true,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/azinchen/nordvpn\" target=\"_blank\">https://github.com/azinchen/nordvpn</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/azinchen/nordvpn\" target=\"_blank\">https://hub.docker.com/r/azinchen/nordvpn</a><br><br><br>"
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "The purpose of NUT Server is to monitor a UPS attached device",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "none",
        "label": "SERIAL",
        "name": "SERIAL"
      },
      {
        "default": "none",
        "label": "NAME",
        "name": "NAME"
      },
      {
        "default": "none",
        "label": "VENDOR ID",
        "name": "VENDOR ID"
      },
      {
        "default": "none",
        "label": "API_PASSWORD",
        "name": "API_PASSWORD"
      },
      {
        "default": "none",
        "label": "DESCRIPTION",
        "name": "DESCRIPTION"
      }
    ],
    "image": "instantlinux/nut-upsd:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/nut-server.png",
    "name": "NUT Server",
    "platform": "linux",
    "ports": [
      "3493:3493/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "NUT Server",
    "type": 1,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://networkupstools.org\" target=\"_blank\">https://networkupstools.org</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/instantlinux/nut-upsd\" target=\"_blank\">https://hub.docker.com/r/instantlinux/nut-upsd</a><br><br><br>"
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources. It supports all platforms including Windows, Mac, Linux and works on all devices including PC, NAS, WLAN routers and media players",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/nzbget:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nzbget-icon.png",
    "name": "nzbget",
    "platform": "linux",
    "ports": [
      "6789:6789/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "NZBGet",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Nzbget",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Other",
      "Tools"
    ],
    "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/nzbhydra2:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/hydra-icon.png",
    "name": "nzbhydra2",
    "platform": "linux",
    "ports": [
      "5076:5076/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "NZBHydra 2",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Nzbhydra2",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "OctoPrint is an open source 3D printer controller application, which provides a web interface for the connected printers.",
    "env": [
      {
        "default": "development ",
        "label": "NODE_ENV",
        "name": "NODE_ENV"
      },
      {
        "default": "true",
        "label": "ENABLE_MJPG_STREAMER",
        "name": "ENABLE_MJPG_STREAMER"
      }
    ],
    "image": "octoprint/octoprint:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/octoprint.png",
    "name": "octoprint",
    "platform": "linux",
    "ports": [
      "8051:80/tcp"
    ],
    "privileged": true,
    "restart_policy": "unless-stopped",
    "title": "OctoPrint",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/OctoPrint",
        "container": "/octoprint"
      },
      {
        "bind": "/dev",
        "container": "/dev"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://octoprint.org/\" target=\"_blank\">https://octoprint.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/octoprint/octoprint\" target=\"_blank\">https://hub.docker.com/r/octoprint/octoprint</a><br><br><br>"
  },
  {
    "categories": [
      "project-management"
    ],
    "description": "Open-source business apps",
    "env": [
      {
        "label": "Database password",
        "name": "PASSWORD"
      },
      {
        "label": "Database user",
        "name": "USER"
      },
      {
        "label": "PostgreSQL database host",
        "name": "HOST",
        "type": "container"
      }
    ],
    "image": "odoo:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/odoo.png",
    "platform": "linux",
    "ports": [
      "8069/tcp"
    ],
    "title": "Odoo",
    "type": 1,
    "volumes": [
      {
        "container": "/mnt/extra-addons"
      },
      {
        "container": "/var/lib/odoo"
      }
    ]
  },
  {
    "categories": [
      "Management",
      "Tools"
    ],
    "description": "TP-Link Omada is a software-defined network solution. The EAP Controller is used to manage multiple EAPs. Raspberry Pi 1 and Zero are not supported.",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "mbentley/omada-controller:latest-arm64",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/omada.png",
    "name": "omada-controller",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.tp-link.com/us/business-networking/omada-sdn-controller/\" target=\"_blank\">https://www.tp-link.com/us/business-networking/omada-sdn-controller/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mbentley/omada-controller\" target=\"_blank\">https://hub.docker.com/r/mbentley/omada-controller</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "27001:27001/udp",
      "27002:27002/tcp",
      "29810:29810/udp",
      "29811:29811/tcp",
      "29812:29812/tcp",
      "29813:29813/tcp",
      "8043:8043/tcp",
      "8088:8088/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Omada EAP Controller",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Omada",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Other",
      "Tools",
      "Video"
    ],
    "description": "Ombi allows you to host your own Plex Request and user management system. ",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/ombi:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ombi.png",
    "name": "ombi",
    "platform": "linux",
    "ports": [
      "3579:3579/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Ombi",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Ombi",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "serverless"
    ],
    "description": "Serverless functions made simple",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
    "name": "func",
    "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
    "platform": "linux",
    "repository": {
      "stackfile": "docker-compose.yml",
      "url": "https://github.com/openfaas/faas"
    },
    "title": "OpenFaaS",
    "type": 2
  },
  {
    "description": "[Openssh-server](https://www.openssh.com/) is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.",
    "env": [
      {
        "default": "/path/to/directory/containing/_only_/pubkeys",
        "description": "Optionally specify a directory containing the public keys (works with docker secrets).",
        "label": "PUBLIC_KEY_DIR",
        "name": "PUBLIC_KEY_DIR"
      },
      {
        "default": "/path/to/file",
        "description": "Optionally specify a file containing the public key (works with docker secrets).",
        "label": "PUBLIC_KEY_FILE",
        "name": "PUBLIC_KEY_FILE"
      },
      {
        "default": "/path/to/file",
        "description": "Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets).",
        "label": "USER_PASSWORD_FILE",
        "name": "USER_PASSWORD_FILE"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "false",
        "description": "Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access.",
        "label": "SUDO_ACCESS",
        "name": "SUDO_ACCESS"
      },
      {
        "default": "false",
        "description": "Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well.",
        "label": "PASSWORD_ACCESS",
        "name": "PASSWORD_ACCESS"
      },
      {
        "default": "https://github.com/username.keys",
        "description": "Optionally specify a URL containing the public key.",
        "label": "PUBLIC_KEY_URL",
        "name": "PUBLIC_KEY_URL"
      },
      {
        "default": "linuxserver.io",
        "description": "Optionally specify a user name (Default:`linuxserver.io`)",
        "label": "USER_NAME",
        "name": "USER_NAME"
      },
      {
        "default": "password",
        "description": "Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access.",
        "label": "USER_PASSWORD",
        "name": "USER_PASSWORD"
      },
      {
        "default": "yourpublickey",
        "description": "Optional ssh public key, which will automatically be added to authorized_keys.",
        "label": "PUBLIC_KEY",
        "name": "PUBLIC_KEY"
      }
    ],
    "image": "linuxserver/openssh-server:latest",
    "logo": "https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png",
    "name": "Openssh-server",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openssh-server/config</p>",
    "platform": "linux",
    "ports": [
      "2222:2222/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Openssh-server",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/openssh-server/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "INTERFACE",
        "name": "INTERFACE",
        "set": "eth0"
      }
    ],
    "image": "linuxserver/openvpn-as:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/openvpn-as-icon.png",
    "name": "openvpn-as",
    "platform": "linux",
    "ports": [
      "1194:1194/udp",
      "943:943/tcp",
      "9443:9443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "OpenVPN Access Server",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Openvscode-server](https://github.com/gitpod-io/openvscode-server) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
    "env": [
      {
        "default": "",
        "description": "Optional path to a file inside the container that contains the security token for accessing the Web UI (ie. `/path/to/file`). Overrides `CONNECTION_TOKEN`.",
        "label": "CONNECTION_SECRET",
        "name": "CONNECTION_SECRET"
      },
      {
        "default": "",
        "description": "Optional security token for accessing the Web UI (ie. `supersecrettoken`).",
        "label": "CONNECTION_TOKEN",
        "name": "CONNECTION_TOKEN"
      },
      {
        "default": "",
        "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`.",
        "label": "SUDO_PASSWORD_HASH",
        "name": "SUDO_PASSWORD_HASH"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "password",
        "description": "If this optional variable is set, user will have sudo access in the openvscode-server terminal with the specified password.",
        "label": "SUDO_PASSWORD",
        "name": "SUDO_PASSWORD"
      }
    ],
    "image": "linuxserver/openvscode-server:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
    "name": "Openvscode-server",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openvscode-server/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Openvscode-server",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/openvscode-server/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "organizrtools/organizr-v2:php-fpm",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/organizr-icon.png",
    "name": "organizr-v2",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Organizr v2",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Organizr",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "OScam is a softcam, software to be used to decrypt digital television channels on a settopbox (receiver), as an alternative for a conditional access module\n  (CAM). OScam is, compared with other softcams (CCcam, mgcamd, etc.), open source. Hence, the name Open Source Conditional Access Module (OScam). OScam is based on the\n  not so well known softcam MpCS. The main features of OSCam are next to its softcam capabilities, that it is able to function as a cardserver.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/oscam:latest",
    "logo": "http://i.imgur.com/8LadrLg.png",
    "name": "oscam",
    "platform": "linux",
    "ports": [
      "10000:10000/tcp",
      "8888:8888/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "OScam",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/OScam",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Media"
    ],
    "description": "[Overseerr](https://overseerr.dev/) is a request management and media discovery tool built to work with your existing Plex ecosystem.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/overseerr:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png",
    "name": "Overseerr",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/overseerr/config</p>",
    "platform": "linux",
    "ports": [
      "5055:5055/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Overseerr",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/overseerr/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Cloud",
      "Management",
      "Productivity"
    ],
    "description": "Paperless is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents. https://github.com/jonaswinkler/paperless-ng",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/paperless-ng",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/paperless.png",
    "name": "paperless",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/jonaswinkler/paperless-ng\" target=\"_blank\">https://github.com/jonaswinkler/paperless-ng</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-paperless-ng\" target=\"_blank\">https://docs.linuxserver.io/images/docker-paperless-ng</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8005:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Paperless",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/paperless/config",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/paperless/data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Cloud",
      "Management",
      "Productivity"
    ],
    "description": "Paperless-ngx is a document management system that transforms your physical documents into a searchable online archive so you can keep, well, less paper.  Paperless-ngx forked from paperless-ng to continue the great work and distribute responsibility of supporting and advancing the project among a team of people. Consider joining us! Discussion of this transition can be found in issues #1599 and #1632.  A demo is available at demo.paperless-ngx.com using login demo / demo. Note: demo content is reset frequently and confidential information should not be uploaded.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID",
        "description": "for UserID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID",
        "description": "for GroupID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ",
        "description": "Specify a timezone to use for example America/New_York"
      },
      {
        "default": "",
        "label": "PAPERLESS_URL",
        "name": "PAPERLESSURL",
        "description": "Example https://paperless.example.com.  It would be best to run this behind a reverse proxy"
      },
      {
        "default": "",
        "label": "Administrator username",
        "name": "ADMIN_USER",
        "description": "Set the name of the default admin user."
      },
      {
        "default": "",
        "label": "Administrator password",
        "name": "ADMIN_PASS",
        "description": "Set the password of the default admin user."
      },
      {
        "default": "",
        "label": "Secret Key",
        "name": "RANDOMKEY",
        "description": "This should be a very long sequence of random characters."
      },
      {
        "default": "eng",
        "label": "OCR Language",
        "name": "LANG",
        "description": "The default language to use for OCR"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/paperless.png",
    "name": "paperless-ngx",
    "repository": {
      "stackfile": "stack/paperless-ngx.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Paperless NGX",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/paperless-ngx/paperless-ngx\" target=\"_blank\">https://github.com/paperless-ngx/paperless-ngx</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/paperless-ngx/paperless-ngx\" target=\"_blank\">https://github.com/paperless-ngx/paperless-ngx</a><br><br><br>"
  },
  {
    "description": "[Paperless-ng](https://github.com/jonaswinkler/paperless-ng) is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.'",
    "env": [
      {
        "default": "",
        "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py",
        "label": "REDIS_URL",
        "name": "REDIS_URL"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/paperless-ng:latest",
    "logo": "",
    "name": "Paperless-ng",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/paperless-ng/config<br>mkdir -p /volume1/docker/paperless-ng/data</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Paperless-ng",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/paperless-ng/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/paperless-ng/data",
        "container": "/data"
      }
    ]
  },
  {
    "description": "[Papermerge](https://www.papermerge.com/) is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.'",
    "env": [
      {
        "default": "",
        "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py",
        "label": "REDIS_URL",
        "name": "REDIS_URL"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/papermerge:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png",
    "name": "Papermerge",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/papermerge/config<br>mkdir -p /volume1/docker/papermerge/data</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Papermerge",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/papermerge/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/papermerge/data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Management",
      "Other",
      "Tools"
    ],
    "description": "Peppermint is a free and open source tickeg management solution with a range of features",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1234",
        "label": "DB_PASSWORD",
        "name": "DB_PASSWORD"
      },
      {
        "default": "5001",
        "label": "PORT",
        "name": "PORT"
      },
      {
        "default": "peppermint",
        "label": "DB_USERNAME",
        "name": "DB_USERNAME"
      },
      {
        "default": "postgres",
        "label": "DB_HOST",
        "name": "DB_HOST"
      }
    ],
    "image": "pepperlabs/peppermint:latest",
    "logo": "https://raw.githubusercontent.com/Peppermint-Lab/peppermint/master/public/logo.svg",
    "name": "Peppermint",
    "platform": "linux",
    "ports": [
      "5001:5001/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Peppermint",
    "type": 1,
    "volumes": [
      {
        "bind": "/srv/dev-disk-by-label-media/Files/AppData/Config/peppermint",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "PGAdmin is a web-based GUI tool used to interact with the Postgres database sessions, both locally and remote servers as well. You can use PGAdmin to perform any sort of database administration required for a Postgres database.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "",
        "label": "PGADMIN_DEFAULT_EMAIL",
        "name": "PGADMIN_DEFAULT_EMAIL"
      },
      {
        "default": "",
        "label": "PGADMIN_DEFAULT_PASSWORD",
        "name": "PGADMIN_DEFAULT_PASSWORD"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "dpage/pgadmin4:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pgadmin.png",
    "name": "pgadmin",
    "platform": "linux",
    "ports": [
      "5050:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "pgAdmin",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/pgAdmin",
        "container": "/var/lib/pgadmin"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.pgadmin.org/\" target=\"_blank\">https://www.pgadmin.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html\" target=\"_blank\">https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html</a><br><br><br>"
  },
  {
    "categories": [
      "Photos"
    ],
    "description": "PhotoPrism® is an AI-powered app for browsing, organizing & sharing your photo collection. It makes use of the latest technologies to tag and find pictures automatically without getting in your way. You can run it at home, on a private server, or in the cloud.",
    "env": [
      {
        "default": "/portainer/PhotoPrism",
        "label": "HOST_MEDIA_PATH",
        "name": "HOST_MEDIA_PATH"
      },
      {
        "default": "change me to a secure password",
        "label": "MYSQL_PASSWORD",
        "name": "MYSQL_PASSWORD"
      },
      {
        "default": "change me to a secure password",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "default": "change me to a secure password",
        "label": "PHOTOPRISM_ADMIN_PASSWORD",
        "name": "PHOTOPRISM_ADMIN_PASSWORD"
      },
      {
        "default": "http://localhost:2342/",
        "label": "PHOTOPRISM_SITE_URL",
        "name": "PHOTOPRISM_SITE_URL"
      },
      {
        "label": "PHOTOPRISM_DISABLE_FACES",
        "name": "PHOTOPRISM_DISABLE_FACES",
        "select": [
          {
            "default": true,
            "text": "Enable facial recognition",
            "value": "false"
          },
          {
            "text": "Disable facial recognition",
            "value": "true"
          }
        ]
      },
      {
        "label": "PHOTOPRISM_PUBLIC",
        "name": "PHOTOPRISM_PUBLIC",
        "select": [
          {
            "default": true,
            "text": "Enable Password Protection",
            "value": "false"
          },
          {
            "text": "No authentication required",
            "value": "true"
          }
        ]
      },
      {
        "label": "PHOTOPRISM_READONLY",
        "name": "PHOTOPRISM_READONLY",
        "select": [
          {
            "default": true,
            "text": "Photo folder in Read/Write mode",
            "value": "false"
          },
          {
            "text": "Don't modify originals directory (reduced functionality)",
            "value": "true"
          }
        ]
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/photoprism.png",
    "name": "PhotoPrism",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://photoprism.app/\" target=\"_blank\">https://photoprism.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.photoprism.app/getting-started/docker-compose/\" target=\"_blank\">https://docs.photoprism.app/getting-started/docker-compose/</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/photoprism.md\" target=\"_blank\">photoprism.md</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_photoprism.sh\" target=\"_blank\">install_photoprism.sh</a><br><br>Your device should have at least <b>4 GB</b> of memory. Running PhotoPrism on a server with less than 4 GB of swap space or setting a memory/swap limit can cause unexpected restarts, especially when the indexer temporarily needs more memory to process large files.<br>It's important to boot your Rapsberry Pi 3/4 with the parameter <b>arm_64bit=1</b> in <b>config.txt</b> to use ARM64 image.<br>If you see Docker errors related to <b>\\\"cgroups\\\"</b>, it may help to add the following to <b>/boot/firmware/cmdline.txt</b>:<br><br><b>cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1</b><br><br>User pi needs to have access to <b>HOST_MEDIA_PATH</b>, you can force it with:<br><br><b>sudo chown -R pi:pi /path/to/media</b><br><br>Run <b>install_photoprism.sh</b> before deploying this container.",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/photoprism.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "title": "PhotoPrism",
    "type": 3
  },
  {
    "categories": [
      "Photos"
    ],
    "description": "A simple, easy way to turn a photo album into a webgallery",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/photoshow:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/photoshow-icon.png",
    "name": "photoshow",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "PhotoShow",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/PhotoShow",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Photoshow/Thumbs",
        "container": "/Thumbs"
      },
      {
        "bind": "/portainer/Pictures",
        "container": "/Pictures"
      }
    ]
  },
  {
    "categories": [
      "System Tools"
    ],
    "description": "[Phpmyadmin](https://github.com/phpmyadmin/phpmyadmin/) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
    "env": [
      {
        "default": "1",
        "description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup)",
        "label": "PMA_ARBITRARY",
        "name": "PMA_ARBITRARY"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "https://phpmyadmin.example.com",
        "description": "Set the URL you will use to access the web frontend",
        "label": "PMA_ABSOLUTE_URI",
        "name": "PMA_ABSOLUTE_URI"
      }
    ],
    "image": "linuxserver/phpmyadmin:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
    "name": "Phpmyadmin",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/phpmyadmin/config</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Phpmyadmin",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/phpmyadmin/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
    "image": "pihole/pihole:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/pihole.png",
    "name": "pihole",
    "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
    "platform": "linux",
    "ports": [
      "1010:80/tcp",
      "4443:443/tcp",
      "53:53/tcp",
      "53:53/udp",
      "67:67/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pi-Hole",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/PiHole",
        "container": "/etc/pihole"
      },
      {
        "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
        "container": "/etc/dnsmasq.d"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole with both DoH (DNS over HTTPS) and DoT (DNS over TLS) clients.",
    "image": "oijkn/pihole-doh-dot:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole_doh-dot.png",
    "name": "pihole DoH/DoT",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/oijkn/pihole-doh-dot\" target=\"_blank\">https://hub.docker.com/r/oijkn/pihole-doh-dot</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
    "platform": "linux",
    "ports": [
      "1010:80/tcp",
      "4443:443/tcp",
      "53:53/tcp",
      "53:53/udp",
      "67:67/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pi-Hole DoH/DoT",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT",
        "container": "/etc/pihole"
      },
      {
        "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT/DNS",
        "container": "/etc/dnsmasq.d"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole. This version has Ubound software installed on it so you don't need to rely on external DNS providers.",
    "env": [
      {
        "default": "127.0.0.1#5335",
        "label": "DNS1",
        "name": "DNS1",
        "preset": true
      },
      {
        "default": "127.0.0.1#5335",
        "label": "DNS2",
        "name": "DNS2",
        "preset": true
      },
      {
        "default": "192.168.0.X",
        "description": "Insert the Raspberry Pi IP here",
        "label": "ServerIP",
        "name": "ServerIP"
      },
      {
        "default": "Europe\\London",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "label": "DNSSEC",
        "name": "DNSSEC",
        "select": [
          {
            "default": true,
            "text": "Enable DNSSEC",
            "value": "true"
          },
          {
            "text": "Disable DNSSEC",
            "value": "false"
          }
        ]
      }
    ],
    "image": "cbcrowe/pihole-unbound:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole-unbound.png",
    "name": "pihole-unbound",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container\" target=\"_blank\">https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53. For extra information on this container visit the mainteiner <a href='https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container'>GitHub Page</a>. You can add ports: 5335 to access Ubound externally; 22 to enable SSH; 67 to use DHCP Server. Add those ports in Show advanced options.",
    "platform": "linux",
    "ports": [
      "1010:80/tcp",
      "4443:443/tcp",
      "53:53/tcp",
      "53:53/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pi-Hole-Unbound",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/PiHole-Unbound",
        "container": "/etc/pihole"
      },
      {
        "bind": "/portainer/Files/AppData/Config/PiHole-Unbound/DNS",
        "container": "/etc/dnsmasq.d"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "This is a weather station designed to be used with a Raspberry Pi on the official 7 800x480 touchscreen. The weather station will require you to have API keys from Mapbox and ClimaCell (v4). Optionally, you can use an API key from LocationIQ to preform reverse geocoding.",
    "image": "seanriggs/pi-weather-station:arm64",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/weather.png",
    "name": "pi-weather-station",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/SeanRiggs/pi-weather-station\" target=\"_blank\">https://github.com/SeanRiggs/pi-weather-station</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/SeanRiggs/pi-weather-station/blob/master/Docker%20Image/Docker-ReadMe.md\" target=\"_blank\">https://github.com/SeanRiggs/pi-weather-station/blob/master/Docker%20Image/Docker-ReadMe.md</a><br><br><br>MUST DO FIRST! - create volume call weatherdata",
    "platform": "linux",
    "ports": [
      "8888:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "pi-weather-station",
    "type": 1,
    "volumes": [
      {
        "bind": "weatherdata",
        "container": "/app"
      }
    ]
  },
  {
    "description": "[Pidgin](https://pidgin.im/) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/pidgin:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
    "name": "Pidgin",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pidgin/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pidgin",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/pidgin/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Photos"
    ],
    "description": "Piwigo is photo gallery software for the web, built by an active community of users and developers.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/piwigo:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/piwigo-icon.png",
    "name": "piwigo",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Piwigo",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/PiWigo",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Productivity"
    ],
    "description": "[Pixapop](https://github.com/bierdok/pixapop) is an open-source single page application to view your photos in the easiest way possible.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "admin",
        "description": "Specify a password to enable authentication.",
        "label": "APP_PASSWORD",
        "name": "APP_PASSWORD"
      },
      {
        "default": "admin",
        "description": "Specify a username to enable authentication.",
        "label": "APP_USERNAME",
        "name": "APP_USERNAME"
      }
    ],
    "image": "linuxserver/pixapop:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pixapop.png",
    "name": "Pixapop",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pixapop/config<br>mkdir -p /volume1/docker/pixapop/photos</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pixapop",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/pixapop/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/pixapop/photos",
        "container": "/photos"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "Wireless control of PixelStrips or NeoPixels using a web graphical interface running on a Raspberry Pi.",
    "image": "macley/pixel-server:latest",
    "logo": "https://lirp.cdn-website.com/c73f56a6/dms3rep/multi/opt/ir.appnice.controlpad_512x512-640w.png",
    "name": "pixel-server",
    "platform": "linux",
    "ports": [
      "85:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pixel-server",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/pixel-server/auth.cfg",
        "container": "/opt/pixel-server/auth.cfg"
      },
      {
        "bind": "/portainer/Files/AppData/Config/pixel-server/pixelserver.cfg",
        "container": "/opt/pixel-server/pixelserver.cfg"
      },
      {
        "bind": "/portainer/Files/AppData/Config/pixel-server/users.cfg",
        "container": "/opt/pixel-server/users.cfg"
      },
      {
        "container": "/etc/crontabs/"
      }
    ],
    "privileged": true,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"http://www.penguintutor.com/projects/pixel-server\" target=\"_blank\">http://www.penguintutor.com/projects/pixel-server</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Macleykun/pixel-server\" target=\"_blank\">https://github.com/Macleykun/pixel-server</a><br><h3><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pixel-server_setup.md\" target=\"_blank\">pixel-server_setup.md</a></h3><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_pixel-server.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_pixel-server.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "CMS"
    ],
    "description": "WebOps platform and hosting control panel",
    "image": "plesk/plesk:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plesk.png",
    "note": "Default credentials: admin / changeme",
    "platform": "linux",
    "ports": [
      "21/tcp",
      "443/tcp",
      "80/tcp",
      "8443/tcp",
      "8447/tcp",
      "8880/tcp"
    ],
    "title": "Plesk",
    "type": 1
  },
  {
    "categories": [
      "Music",
      "Photos",
      "Video"
    ],
    "description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "VERSION",
        "name": "VERSION",
        "set": "latest"
      }
    ],
    "image": "linuxserver/plex:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/plex-icon.png",
    "name": "plex",
    "network": "host",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Plex",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Plex",
        "container": "/config"
      },
      {
        "bind": "/portainer/Movies",
        "container": "/movies"
      },
      {
        "bind": "/portainer/TV",
        "container": "/tv"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Other",
      "Tools",
      "Video"
    ],
    "description": "Simple automated way for users to request new content for Plex.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "URL_BASE",
        "name": "URL_BASE",
        "set": ""
      }
    ],
    "image": "linuxserver/plexrequests:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
    "name": "plexrequests",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Plex Requests",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/PlexRequests",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Media Management"
    ],
    "description": "[Plex-meta-manager](https://github.com/meisnate12/Plex-Meta-Manager) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.",
    "env": [
      {
        "default": "/config/config.yml",
        "description": "Specify a custom config file to use.",
        "label": "PMM_CONFIG",
        "name": "PMM_CONFIG"
      },
      {
        "default": "03:00",
        "description": "Comma-separated list of times to update each day. Format: `HH:MM`.",
        "label": "PMM_TIME",
        "name": "PMM_TIME"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "False",
        "description": "Set to `True` to run in debug mode with only collections that have `test: true`.",
        "label": "PMM_TEST",
        "name": "PMM_TEST"
      },
      {
        "default": "False",
        "description": "Set to `True` to run without any of the missing movie/show functions.",
        "label": "PMM_NO_MISSING",
        "name": "PMM_NO_MISSING"
      },
      {
        "default": "False",
        "description": "Set to `True` to run without the scheduler.",
        "label": "PMM_RUN",
        "name": "PMM_RUN"
      }
    ],
    "image": "linuxserver/plex-meta-manager:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png",
    "name": "Plex-meta-manager",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/plex-meta-manager/config</p>",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Plex-meta-manager",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/plex-meta-manager/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "CMS"
    ],
    "description": "A free and open-source CMS built on top of Zope",
    "image": "plone:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
    "platform": "linux",
    "ports": [
      "8080/tcp"
    ],
    "title": "Plone",
    "type": 1,
    "volumes": [
      {
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "portainer"
    ],
    "description": "Manage all the resources in your Swarm cluster",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
    "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
    "platform": "linux",
    "repository": {
      "stackfile": "stacks/portainer-agent/docker-stack.yml",
      "url": "https://github.com/portainer/templates"
    },
    "title": "Portainer Agent",
    "type": 2
  },
  {
    "categories": [
      "database"
    ],
    "description": "The most advanced open-source database",
    "env": [
      {
        "label": "Superuser password",
        "name": "POSTGRES_PASSWORD"
      },
      {
        "label": "Superuser",
        "name": "POSTGRES_USER"
      }
    ],
    "image": "postgres:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
    "platform": "linux",
    "ports": [
      "5432/tcp"
    ],
    "title": "PostgreSQL",
    "type": 1,
    "volumes": [
      {
        "container": "/var/lib/postgresql/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "VPN",
      "Web"
    ],
    "description": "Pritunl container built on Alpine Linux. Supports IPv6 and running behind a reverse proxy. This container requires an external Mongo DB and should be run via Docker Compose or other orchestration.",
    "env": [
      {
        "default": "false",
        "label": "REVERSE_PROXY",
        "name": "REVERSE_PROXY"
      },
      {
        "default": "false",
        "label": "WIREGUARD",
        "name": "WIREGUARD"
      },
      {
        "default": "mongodb://mongo:27017/pritunl",
        "label": "MONGODB_URI",
        "name": "MONGODB_URI"
      },
      {
        "label": "PRITUNL_OPTS",
        "name": "PRITUNL_OPTS"
      }
    ],
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/pritunl/Images/pritunl.png",
    "name": "pritunl",
    "note": "Documentation on this containier can be found here: <a href=https://hub.docker.com/r/goofball222/pritunl>https://hub.docker.com/r/goofball222/pritunl</a>",
    "platform": "linux",
    "repository": {
      "stackfile": "Template/Stack/pritunl.yml",
      "url": "https://github.com/SelfhostedPro/selfhosted_templates"
    },
    "title": "Pritunl",
    "type": 3
  },
  {
    "categories": [
      "Cloud",
      "Productivity",
      "Tools",
      "Web"
    ],
    "description": "PrivateBin is a minimalist, open source online pastebin where the server has zero knowledge of pasted data!\n  ",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "privatebin/nginx-fpm-alpine:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/privatebin.png",
    "name": "privatebin",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://privatebin.info/\" target=\"_blank\">https://privatebin.info/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/privatebin/nginx-fpm-alpine\" target=\"_blank\">https://hub.docker.com/r/privatebin/nginx-fpm-alpine</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "privileged": true,
    "restart_policy": "unless-stopped",
    "title": "PrivateBin",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/PrivateBin",
        "container": "/srv/cfg"
      },
      {
        "bind": "/portainer/Files/AppData/PrivateBin",
        "container": "/srv/data"
      }
    ]
  },
  {
    "categories": [
      "Cloud",
      "Other",
      "Productivity",
      "Tools"
    ],
    "description": "ProjectSend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!\n  ",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/projectsend:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/projectsend-logo.png",
    "name": "projectsend",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "ProjectSend",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/ProjectSend",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/ProjectSend",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Email",
      "Other",
      "Productivity",
      "Tools"
    ],
    "description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
    "image": "shenxn/protonmail-bridge:build",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/protonmail-bridge.png",
    "name": "protonmail-bridge",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://protonmail.com/bridge/\" target=\"_blank\">https://protonmail.com/bridge/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/shenxn/protonmail-bridge\" target=\"_blank\">https://hub.docker.com/r/shenxn/protonmail-bridge</a><br><br><br>Please refer to the documentation <a href='https://hub.docker.com/r/shenxn/protonmail-bridge'/>here</a> to set this up.",
    "platform": "linux",
    "ports": [
      "143:143/tcp",
      "25:25/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "ProtonMail Bridge",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/ProtonMail-Bridge",
        "container": "/root"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "Prowlarr is an indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "Time Zone",
        "name": "TZ"
      }
    ],
    "image": "lscr.io/linuxserver/prowlarr:develop",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png",
    "name": "prowlarr",
    "platform": "linux",
    "ports": [
      "9696:9696/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "prowlarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/prowlarr",
        "container": "/config"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://prowlarr.com\" target=\"_blank\">https://prowlarr.com</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/linuxserver/prowlarr\" target=\"_blank\">https://hub.docker.com/r/linuxserver/prowlarr</a><br><br><br>"
  },
  {
    "description": "[Pwndrop](https://github.com/kgretzky/pwndrop) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
    "env": [
      {
        "default": "/pwndrop",
        "description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui.",
        "label": "SECRET_PATH",
        "name": "SECRET_PATH"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/pwndrop:latest",
    "logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
    "name": "Pwndrop",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pwndrop/config</p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pwndrop",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/pwndrop/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Cloud",
      "Other"
    ],
    "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/pydio:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/pydio-icon.png",
    "name": "pydio",
    "platform": "linux",
    "ports": [
      "443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pydio",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Pydio",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Pydio",
        "container": "/data"
      }
    ]
  },
  {
    "description": "[Pydio-cells](https://pydio.com/) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
    "env": [
      {
        "default": "0.0.0.0",
        "description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy).",
        "label": "SERVER_IP",
        "name": "SERVER_IP"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "yourdomain.url",
        "description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT).",
        "label": "EXTERNALURL",
        "name": "EXTERNALURL"
      }
    ],
    "image": "linuxserver/pydio-cells:latest",
    "logo": "https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png",
    "name": "Pydio-cells",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pydio-cells/config</p>",
    "platform": "linux",
    "ports": [
      "33060:33060/tcp",
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pydio-cells",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/pydio-cells/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[pyLoad](https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/pyload-ng:latest",
    "logo": "https://pyload.net/img/banner.png",
    "name": "Pyload-ng",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pyload-ng/config<br>mkdir -p /volume1/docker/pyload-ng/downloads</p>",
    "platform": "linux",
    "ports": [
      "8000:8000/tcp",
      "9666:9666/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pyload-ng",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/pyload-ng/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/pyload-ng/downloads",
        "container": "/downloads"
      }
    ]
  },
  {
    "description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "https://github.com/linuxserver/docker-pylon.git",
        "description": "Specify a git repo to checkout on first startup",
        "label": "GITURL",
        "name": "GITURL"
      },
      {
        "default": "mypass",
        "description": "Specify a basic auth password.",
        "label": "PYPASS",
        "name": "PYPASS"
      },
      {
        "default": "myuser",
        "description": "Specify a basic auth user.",
        "label": "PYUSER",
        "name": "PYUSER"
      }
    ],
    "image": "linuxserver/pylon:latest",
    "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
    "name": "Pylon",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pylon/config<br>mkdir -p /volume1/docker/pylon/code</p>",
    "platform": "linux",
    "ports": [
      "3131:3131/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Pylon",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/pylon/code",
        "container": "/code"
      },
      {
        "bind": "/volume1/docker/pylon/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/qbittorrent:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/qbittorrent-icon.png",
    "name": "qbittorrent",
    "platform": "linux",
    "ports": [
      "6881:6881/tcp",
      "6881:6881/udp",
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "qBittorrent",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/qBittorrent",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[QDirStat](https://github.com/shundhammer/qdirstat) Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/qdirstat:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png",
    "name": "Qdirstat",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/qdirstat/config<br>mkdir -p /volume1/docker/qdirstat/data</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Qdirstat",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/qdirstat/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/qdirstat/data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "A docker image with qBittorrent and the Flood UI, also optional WireGuard VPN support. See the official documentation for WireGuard VPN support at https://hotio.dev/containers/qflood/",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "002",
        "label": "UMASK",
        "name": "UMASK"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "false",
        "label": "FLOOD_AUTH",
        "name": "FLOOD_AUTH"
      }
    ],
    "image": "hotio/qflood:latest",
    "logo": "https://raw.githubusercontent.com/jesec/flood/master/flood.svg",
    "name": "qflood",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hotio.dev/containers/qflood/\" target=\"_blank\">https://hotio.dev/containers/qflood/</a><br><b>Official Docker Documentation: </b><a href=\"https://hotio.dev/containers/qflood/\" target=\"_blank\">https://hotio.dev/containers/qflood/</a><br><br><br>The default qBittorrent username is admin and the default password is adminadmin.",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp",
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "qFlood",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/qFlood",
        "container": "/config"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/app/qBittorrent/downloads"
      }
    ]
  },
  {
    "categories": [
      "Messenger"
    ],
    "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core -- much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/quassel-core:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/quassel-core-icon.png",
    "name": "quassel-core",
    "platform": "linux",
    "ports": [
      "4242:4242/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Quassel IRC",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Quassel-core",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Quassel-core](http://quassel-irc.org/) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.",
    "env": [
      {
        "default": "--config-from-environment",
        "description": "Custom CLI options for Quassel",
        "label": "RUN_OPTS",
        "name": "RUN_OPTS"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/quassel-core:latest",
    "logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
    "name": "Quassel-core",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-core/config</p>",
    "platform": "linux",
    "ports": [
      "113:10113/tcp",
      "4242:4242/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Quassel-core",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/quassel-core/config",
        "container": "/config"
      }
    ]
  },
  {
    "description": "[Quassel-web](https://github.com/magne4000/quassel-webserver) is a web client for Quassel. Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/)",
    "env": [
      {
        "default": "/quassel",
        "description": "Specify a url-base in reverse proxy setups ie. `/quassel`",
        "label": "URL_BASE",
        "name": "URL_BASE"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "192.168.1.10",
        "description": "specify the URL or IP address of your Quassel Core instance",
        "label": "QUASSEL_CORE",
        "name": "QUASSEL_CORE"
      },
      {
        "default": "4242",
        "description": "specify the port of your Quassel Core instance",
        "label": "QUASSEL_PORT",
        "name": "QUASSEL_PORT"
      }
    ],
    "image": "linuxserver/quassel-web:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png",
    "name": "Quassel-web",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-web/config</p>",
    "platform": "linux",
    "ports": [
      "64443:64443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Quassel-web",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/quassel-web/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "messaging"
    ],
    "description": "Highly reliable enterprise messaging system",
    "image": "rabbitmq:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
    "platform": "linux",
    "ports": [
      "5671/tcp",
      "5672/tcp"
    ],
    "title": "RabbitMQ",
    "type": 1,
    "volumes": [
      {
        "container": "/var/lib/rabbitmq"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Video"
    ],
    "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/radarr:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/radarr.png",
    "name": "radarr",
    "platform": "linux",
    "ports": [
      "7878:7878/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Radarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Radarr",
        "container": "/config"
      },
      {
        "bind": "/portainer/Movies",
        "container": "/movies"
      }
    ]
  },
  {
    "description": "[Raneto](http://raneto.com/) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/raneto:latest",
    "logo": "https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png",
    "name": "Raneto",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/raneto/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Raneto",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/raneto/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Monitor",
      "Tools"
    ],
    "description": "Monitor your Raspberry Pi and Dockers using Grafana developed by oijkn. Please download grafana configs from his git https://github.com/oijkn/Docker-Raspberry-PI-Monitoring",
    "env": [
      {
        "default": "15d",
        "label": "PROMETHEUS_RETENTION",
        "name": "PROMETHEUS_RETENTION"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rpi_monitor.png",
    "name": "RaspberryPi-Docker-Monitor",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">rpi_docker_monitor.md</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/rpi_docker_monitor.sh\" target=\"_blank\">rpi_docker_monitor.sh</a><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=IoD3vFuep64&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=8\" target=\"_blank\">Raspberry Pi Docker Monitoring</a><br><br>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "repository": {
      "stackfile": "stack/raspberrypi-monitoring.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Raspberry Pi Docker Monitor",
    "type": 3
  },
  {
    "categories": [
      "Game"
    ],
    "description": "This container lets you run a Valheim server on a Raspberry Pi.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "Raspiheim",
        "label": "SERVER_NAME",
        "name": "SERVER_NAME"
      },
      {
        "default": "Raspiworld",
        "label": "WORLD_NAME",
        "name": "WORLD_NAME"
      },
      {
        "default": "Raspipass",
        "label": "SERVER_PASS",
        "name": "SERVER_PASS"
      },
      {
        "default": "0",
        "label": "PUBLIC",
        "name": "PUBLIC"
      },
      {
        "default": "false",
        "label": "UPDATE",
        "name": "UPDATE"
      },
      {
        "default": "false",
        "label": "PAUSE",
        "name": "PAUSE"
      }
    ],
    "image": "arokan/raspiheim:latest",
    "logo": "https://static.wikia.nocookie.net/valheim/images/b/bf/Valheim-logo.png/revision/latest?cb=20210317083440&path-prefix=de",
    "name": "Raspiheim",
    "platform": "linux",
    "ports": [
      "2456:2456/udp",
      "2457:2457/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Raspiheim",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Raspiheim/data",
        "container": "/data"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Raspiheim/server",
        "container": "/valheim"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/arokan/raspiheim\" target=\"_blank\">https://hub.docker.com/r/arokan/raspiheim</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/arokan/raspiheim\" target=\"_blank\">https://hub.docker.com/r/arokan/raspiheim</a><br><br><br>"
  },
  {
    "categories": [
      "Other"
    ],
    "description": "Rdesktop is an Ubuntu based container containing full desktop environments in officially supported flavors accessible via RDP.",
    "env": [
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/rdesktop:arm64v8-latest",
    "logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/master/images/rdesktop.png",
    "name": "rdesktop",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"http://xrdp.org/\" target=\"_blank\">http://xrdp.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-rdesktop\" target=\"_blank\">https://docs.linuxserver.io/images/docker-rdesktop</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "3389:3389/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "RDesktop",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/RDesktop/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
    "image": "amruthpillai/reactive-resume:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/reactiveresume.png",
    "name": "reactive-resume",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Reactive-Resume",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/ReactiveResume",
        "container": "/usr/src/app"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Books"
    ],
    "description": "Readarr is an eBook and audiobook collection manager for Usenet and BitTorrent users.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "Time Zone",
        "name": "TZ"
      }
    ],
    "image": "lscr.io/linuxserver/readarr:develop",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/Readarr.png",
    "name": "readarr",
    "platform": "linux",
    "ports": [
      "8787:8787/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "readarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/readarr",
        "container": "/config"
      },
      {
        "bind": "/mnt/Books",
        "container": "/books"
      },
      {
        "bind": "/portainer/Files/AppData/Config/readarr/downloads",
        "container": "/downloads"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://readarr.com/\" target=\"_blank\">https://readarr.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://wiki.servarr.com/en/readarr\" target=\"_blank\">https://wiki.servarr.com/en/readarr</a><br><br><br>"
  },
  {
    "categories": [
      "database"
    ],
    "description": "Open-source in-memory data structure store",
    "image": "redis:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
    "platform": "linux",
    "ports": [
      "6379/tcp"
    ],
    "title": "Redis",
    "type": 1,
    "volumes": [
      {
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "project-management"
    ],
    "description": "Open-source project management tool",
    "env": [
      {
        "default": "",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "default": "",
        "label": "REDMINE_SECRET_KEY_BASE",
        "name": "REDMINE_SECRET_KEY_BASE"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "redmine",
        "label": "DATABASE_NAME",
        "name": "DATABASE_NAME"
      },
      {
        "default": "redmine",
        "label": "DATABASE_USER",
        "name": "DATABASE_USER"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/redmine.png",
    "name": "redmine",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.redmine.org/\" target=\"_blank\">https://www.redmine.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/redmine\" target=\"_blank\">https://hub.docker.com/_/redmine</a><br><br><br>Default user and password are admin/admin",
    "platform": "linux",
    "ports": [
      "4180:3000/tcp"
    ],
    "repository": {
      "stackfile": "stack/redmine.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "Redmine",
    "type": 3
  },
  {
    "categories": [
      "docker"
    ],
    "description": "Docker image registry",
    "image": "registry:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
    "platform": "linux",
    "ports": [
      "5000/tcp"
    ],
    "title": "Registry",
    "type": 1,
    "volumes": [
      {
        "container": "/var/lib/registry"
      }
    ]
  },
  {
    "description": "[Remmina](https://remmina.org/) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/remmina:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
    "name": "Remmina",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/remmina/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Remmina",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/remmina/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Media"
    ],
    "description": "[Requestrr](https://github.com/darkalfx/requestrr) is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/requestrr:latest",
    "logo": "https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png",
    "name": "Requestrr",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/requestrr/config</p>",
    "platform": "linux",
    "ports": [
      "4545:4545/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Requestrr",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/requestrr/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Backup",
      "Cloud",
      "Other",
      "Tools"
    ],
    "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/resilio-sync:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/resilio.png",
    "name": "resilio-sync",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Resilio Sync",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Resilio-Sync",
        "container": "/config"
      },
      {
        "container": "/sync"
      }
    ]
  },
  {
    "description": "[Rsnapshot](http://www.rsnapshot.org/) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.'",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/rsnapshot:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png",
    "name": "Rsnapshot",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/rsnapshot/config<br>mkdir -p /volume1/docker/rsnapshot/.snapshots<br>mkdir -p /volume1/docker/rsnapshot/data</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Rsnapshot",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/rsnapshot/.snapshots",
        "container": "/.snapshots"
      },
      {
        "bind": "/volume1/docker/rsnapshot/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/rsnapshot/data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A remote desktop software, the open source TeamViewer alternative, works out of the box, no configuration required. You have full control of your data, with no concerns about security.",
    "env": [
      {
        "default": "rustdesk.example.com:21117",
        "description": "Use your domain with the default 21117 port",
        "label": "RELAY",
        "name": "RELAY"
      },
      {
        "default": "1",
        "description": "if set to \"1\" unencrypted connection will not be accepted",
        "label": "ENCRYPTED_ONLY",
        "name": "ENCRYPTED_ONLY"
      }
    ],
    "image": "rustdesk/rustdesk-server-s6:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rustdesk.png",
    "name": "rustdesk",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://rustdesk.com/\" target=\"_blank\">https://rustdesk.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/rustdesk/rustdesk-server\" target=\"_blank\">https://github.com/rustdesk/rustdesk-server</a><br><br><br><b>Youtube Video: </b><a href=https://www.youtube.com/watch?v=PDnqFnnbVHg target=\"_blank\">Novaspirit Tech - Rust Desk Open Source Remote Desktop</a><br><br>Don't forget to open ports 21115 to 21119 in your router.",
    "platform": "linux",
    "ports": [
      "21115:21115/tcp",
      "21116:21116/tcp",
      "21116:21116/udp",
      "21117:21117/tcp",
      "21118:21118/tcp",
      "21119:21119/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "RustDesk",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/rustdesk",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "Popular torrent client with a webui for ease of use.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/rutorrent:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
    "name": "rutorrent",
    "platform": "linux",
    "ports": [
      "51413:51413/tcp",
      "6881:6881/udp",
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "ruTorrent",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/ruTorrent",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/sabnzbd:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sabnzbd-icon.png",
    "name": "sabnzbd",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp",
      "9090:9090/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "SABnzbd",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Downloads/incomplete",
        "container": "/incomplete-downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Sabnzbd",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "command": "",
    "description": "Samba has provided secure, stable and fast file and print services for all clients using the SMB/CIFS protocol, such as all versions of DOS and Windows, OS/2, Linux and many others.",
    "env": [
      {
        "default": "1000",
        "label": "GROUPID",
        "name": "GROUPID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "USERID",
        "name": "USERID"
      },
      {
        "default": "guest;guest",
        "label": "USER",
        "name": "USER"
      },
      {
        "default": "portainer;/share;yes;no;yes;guest",
        "label": "SHARE",
        "name": "SHARE"
      },
      {
        "default": "true",
        "label": "PERMISSIONS",
        "name": "PERMISSIONS"
      }
    ],
    "image": "dperson/samba:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/samba.png",
    "name": "Samba",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.samba.org/\" target=\"_blank\">https://www.samba.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/dperson/samba\" target=\"_blank\">https://github.com/dperson/samba</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=2zZ3_1GRWrM&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=11\" target=\"_blank\">Setting up Raspberry Pi Samba Server For File Sharing on Docker</a><br><br>",
    "platform": "linux",
    "ports": [
      "139:139/tcp",
      "445:445/tcp"
    ],
    "privileged": true,
    "restart_policy": "unless-stopped",
    "title": "Samba",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/share"
      }
    ]
  },
  {
    "categories": [
      "storage"
    ],
    "description": "Standalone AWS S3 protocol server",
    "env": [
      {
        "label": "Scality S3 access key",
        "name": "SCALITY_ACCESS_KEY"
      },
      {
        "label": "Scality S3 secret key",
        "name": "SCALITY_SECRET_KEY"
      }
    ],
    "image": "scality/s3server",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
    "platform": "linux",
    "ports": [
      "8000/tcp"
    ],
    "title": "Scality S3",
    "type": 1,
    "volumes": [
      {
        "container": "/usr/src/app/localData"
      },
      {
        "container": "/usr/src/app/localMetadata"
      }
    ]
  },
  {
    "description": "[Scrutiny](https://github.com/AnalogJ/scrutiny) WebUI for smartd S.M.A.R.T monitoring. Scrutiny is a Hard Drive Health Dashboard & Monitoring solution, merging manufacturer provided S.M.A.R.T metrics with real-world failure rates from Backblaze.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "http://localhost:8080",
        "description": "# optional - API endpoint of the scrutiny UI. Do not change unless using as a remote collector",
        "label": "SCRUTINY_API_ENDPOINT",
        "name": "SCRUTINY_API_ENDPOINT"
      },
      {
        "default": "true",
        "description": "# optional - Run the metrics collector.",
        "label": "SCRUTINY_COLLECTOR",
        "name": "SCRUTINY_COLLECTOR"
      },
      {
        "default": "true",
        "description": "# optional - Run the web service.",
        "label": "SCRUTINY_WEB",
        "name": "SCRUTINY_WEB"
      }
    ],
    "image": "linuxserver/scrutiny:latest",
    "logo": "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/docs/dashboard.png",
    "name": "Scrutiny",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/scrutiny/config<br></p>",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Scrutiny",
    "type": 1,
    "volumes": [
      {
        "bind": "/run/udev:ro",
        "container": "/run/udev:ro"
      },
      {
        "bind": "/volume1/docker/scrutiny/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Open-Source Privacy-respecting metasearch engine",
    "env": [
      {
        "default": "http://localhost:9017",
        "label": "BASE_URL",
        "name": "BASE_URL"
      },
      {
        "default": "my-instance",
        "label": "INSTANCE_NAME",
        "name": "INSTANCE_NAME"
      }
    ],
    "image": "searxng/searxng:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/searx.png",
    "name": "SearXNG",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.searxng.org/\" target=\"_blank\">https://docs.searxng.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.searxng.org/admin/installation-docker.html\" target=\"_blank\">https://docs.searxng.org/admin/installation-docker.html</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/searxng.md\" target=\"_blank\">searxng.md</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "9017:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "SearXNG",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/searxng",
        "container": "/etc/searxng"
      }
    ]
  },
  {
    "categories": [
      "Log Management",
      "Monitoring"
    ],
    "description": "Collect logs, metrics and docker events",
    "env": [
      {
        "label": "Logs token",
        "name": "LOGSENE_TOKEN"
      },
      {
        "label": "SPM monitoring token",
        "name": "SPM_TOKEN"
      }
    ],
    "image": "sematext/sematext-agent-docker:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
    "name": "sematext-agent",
    "platform": "linux",
    "privileged": true,
    "title": "Sematext Docker Agent",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
    "image": "nicholaswilde/shiori:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/shiori-icon.png",
    "name": "shiori",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/go-shiori/shiori\" target=\"_blank\">https://github.com/go-shiori/shiori</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nicholaswilde/docker-shiori\" target=\"_blank\">https://github.com/nicholaswilde/docker-shiori</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "7564:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Shiori",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Shiori",
        "container": "/srv/shiori"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Video"
    ],
    "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/sickchill:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sickchill-icon.png",
    "name": "sickchill",
    "platform": "linux",
    "ports": [
      "8081:8081/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "SickChill",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/SickChill",
        "container": "/config"
      },
      {
        "bind": "/portainer/TV",
        "container": "/tv"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Video"
    ],
    "description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/sickgear:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sickgear-icon.png",
    "name": "sickgear",
    "platform": "linux",
    "ports": [
      "8081:8081/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "SickGear",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/SickGear",
        "container": "/config"
      },
      {
        "bind": "/portainer/TV",
        "container": "/tv"
      }
    ]
  },
  {
    "categories": [
      "Management"
    ],
    "description": null,
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/smokeping:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/smokeping-icon.png",
    "name": "smokeping",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "SmokePing",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Smokeping",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Smokeping",
        "container": "/data"
      }
    ]
  },
  {
    "description": "[Snapdrop](https://github.com/RobinLinus/snapdrop) A local file sharing in your browser. Inspired by Apple's Airdrop.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/snapdrop:latest",
    "logo": "https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png",
    "name": "Snapdrop",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snapdrop/config</p>",
    "platform": "linux",
    "ports": [
      "443:443/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Snapdrop",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/snapdrop/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Self-hosted snippet manager.",
    "image": "snowmean/snibox-sqlite:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/snibox.png",
    "name": "snibox",
    "note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
    "platform": "linux",
    "ports": [
      "3010:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Snibox",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Snibox",
        "container": "/app/db/database"
      }
    ]
  },
  {
    "description": "[Snipe-it](https://github.com/snipe/snipe-it) makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "<hostname or ip>",
        "description": "Hostname or IP and port if applicable IE <ip or hostname>:8080",
        "label": "NGINX_APP_URL",
        "name": "NGINX_APP_URL"
      },
      {
        "default": "<mysql database>",
        "description": "Mysql database to use",
        "label": "MYSQL_DATABASE",
        "name": "MYSQL_DATABASE"
      },
      {
        "default": "<mysql host>",
        "description": "Mysql hostname or IP to use",
        "label": "MYSQL_PORT_3306_TCP_ADDR",
        "name": "MYSQL_PORT_3306_TCP_ADDR"
      },
      {
        "default": "<mysql pass>",
        "description": "Mysql user to use",
        "label": "MYSQL_USER",
        "name": "MYSQL_USER"
      },
      {
        "default": "<mysql port>",
        "description": "Mysql port to use",
        "label": "MYSQL_PORT_3306_TCP_PORT",
        "name": "MYSQL_PORT_3306_TCP_PORT"
      },
      {
        "default": "changeme",
        "description": "Mysql password to use",
        "label": "MYSQL_PASSWORD",
        "name": "MYSQL_PASSWORD"
      }
    ],
    "image": "linuxserver/snipe-it:latest",
    "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png",
    "name": "Snipe-it",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snipe-it/config</p>",
    "platform": "linux",
    "ports": [
      "8080:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Snipe-it",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/snipe-it/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Snippet Box is a simple self-hosted app for organizing your code snippets.",
    "image": "pawelmalak/snippet-box:arm",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/snibox.png",
    "name": "Snippet-box",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/snippet-box\" target=\"_blank\">https://github.com/pawelmalak/snippet-box</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/snippet-box#with-docker\" target=\"_blank\">https://github.com/pawelmalak/snippet-box#with-docker</a><br><br><br>Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
    "platform": "linux",
    "ports": [
      "5010:5000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Snippet-box",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Snippet-box",
        "container": "/app/data"
      }
    ]
  },
  {
    "categories": [
      "search-engine"
    ],
    "description": "Open-source enterprise search platform",
    "image": "solr:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
    "platform": "linux",
    "ports": [
      "8983/tcp"
    ],
    "title": "Solr",
    "type": 1,
    "volumes": [
      {
        "container": "/opt/solr/mydata"
      }
    ]
  },
  {
    "categories": [
      "Downloaders",
      "Video"
    ],
    "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/sonarr:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/sonarr-icon.png",
    "name": "sonarr",
    "platform": "linux",
    "ports": [
      "8989:8989/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Sonarr",
    "type": 1,
    "volumes": [
      {
        "bind": "/dev/rtc",
        "container": "/dev/rtc"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/downloads"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Sonarr",
        "container": "/config"
      },
      {
        "bind": "/portainer/TV",
        "container": "/tv"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "Web"
    ],
    "description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
    "env": [
      {
        "default": "latest-arm",
        "label": "arch",
        "name": "arch"
      },
      {
        "default": "true",
        "label": "OOKLA_EULA_GDPR",
        "name": "OOKLA_EULA_GDPR"
      }
    ],
    "image": "henrywhitaker3/speedtest-tracker:dev-arm",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
    "name": "speedtest-tracker",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8765:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Speedtest Tracker",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/speedtest-tracker",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "database"
    ],
    "description": "Microsoft SQL Server Developer for Windows containers",
    "env": [
      {
        "label": "SA password",
        "name": "sa_password"
      },
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      }
    ],
    "image": "microsoft/mssql-server-windows-developer:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "platform": "windows",
    "ports": [
      "1433/tcp"
    ],
    "title": "SQL Server",
    "type": 1,
    "volumes": [
      {
        "container": "C:/temp/"
      }
    ]
  },
  {
    "categories": [
      "database"
    ],
    "description": "Microsoft SQL Server Express for Windows containers",
    "env": [
      {
        "label": "SA password",
        "name": "sa_password"
      },
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      }
    ],
    "image": "microsoft/mssql-server-windows-express:latest",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "platform": "windows",
    "ports": [
      "1433/tcp"
    ],
    "title": "SQL Server Express",
    "type": 1,
    "volumes": [
      {
        "container": "C:/temp/"
      }
    ]
  },
  {
    "description": "[DB Browser for SQLite](https://sqlitebrowser.org/) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/sqlitebrowser:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
    "name": "Sqlitebrowser",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sqlitebrowser/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Sqlitebrowser",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/sqlitebrowser/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Tools",
      "Web"
    ],
    "description": "Sshwifty is a SSH and Telnet connector made for the Web. It can be deployed on your computer or server to provide SSH and Telnet access interface for any compatible (standard) web browser.",
    "image": "niruix/sshwifty:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/sshwifty-icon.png",
    "name": "Sshwifty",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://sshwifty.herokuapp.com/\" target=\"_blank\">https://sshwifty.herokuapp.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nirui/sshwifty#docker-image\" target=\"_blank\">https://github.com/nirui/sshwifty#docker-image</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8182:8182/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Sshwifty",
    "type": 1
  },
  {
    "categories": [
      "Other",
      "Tool"
    ],
    "description": "SurrealDB is an end-to-end cloud native database for web, mobile, serverless, jamstack, backend, and traditional applications.",
    "image": "surrealdb/surrealdb:latest",
    "logo": "",
    "name": "SurrealDB",
    "env": [
      {
        "default": "default_username",
        "label": "SDB_USERNAME",
        "name": "SDB_USERNAME"
      },
      {
        "default": "default_password",
        "label": "SDB_PASSWORD",
        "name": "SDB_PASSWORD"
      }
    ],
    "platform": "linux",
    "ports": [
      "8020:8000/tcp"
    ],
    "command": "start --user ${SDB_USERNAME} --pass ${SDB_PASSWORD} file:/data/database.db",
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/surrealdb/data",
        "container": "/data"
      }
    ],
    "restart_policy": "unless-stopped",
    "title": "SurrealDB",
    "type": 1,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://surrealdb.com/\" target=\"_blank\">https://surrealdb.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/surrealdb/surrealdb\" target=\"_blank\">https://hub.docker.com/r/surrealdb/surrealdb</a><br><br><br>"
  },
  {
    "description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
    "env": [
      {
        "default": "",
        "description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`",
        "label": "EXTRA_DOMAINS",
        "name": "EXTRA_DOMAINS"
      },
      {
        "default": "",
        "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).",
        "label": "EMAIL",
        "name": "EMAIL"
      },
      {
        "default": "",
        "description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt.",
        "label": "CERTPROVIDER",
        "name": "CERTPROVIDER"
      },
      {
        "default": "",
        "description": "Optionally override (in seconds) the default propagation time for the dns plugins.",
        "label": "PROPAGATION",
        "name": "PROPAGATION"
      },
      {
        "default": "",
        "description": "Required if `VALIDATION` is set to `duckdns`. Retrieve your token from https://www.duckdns.org",
        "label": "DUCKDNSTOKEN",
        "name": "DUCKDNSTOKEN"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "cloudflare",
        "description": "Required if `VALIDATION` is set to `dns`. Options are `aliyun`, `cloudflare`, `cloudxns`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `domeneshop`, `gandi`, `gehirn`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `rfc2136`, `route53`, `sakuracloud`, `transip` and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`.",
        "label": "DNSPLUGIN",
        "name": "DNSPLUGIN"
      },
      {
        "default": "false",
        "description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`",
        "label": "ONLY_SUBDOMAINS",
        "name": "ONLY_SUBDOMAINS"
      },
      {
        "default": "false",
        "description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes.",
        "label": "STAGING",
        "name": "STAGING"
      },
      {
        "default": "http",
        "description": "Certbot validation method to use, options are `http`, `dns` or `duckdns` (`dns` method also requires `DNSPLUGIN` variable set) (`duckdns` method requires `DUCKDNSTOKEN` variable set, and the `SUBDOMAINS` variable must be either empty or set to `wildcard`).",
        "label": "VALIDATION",
        "name": "VALIDATION"
      },
      {
        "default": "www,",
        "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this _exactly_ to `wildcard` (wildcard cert is available via `dns` and `duckdns` validation only)",
        "label": "SUBDOMAINS",
        "name": "SUBDOMAINS"
      },
      {
        "default": "yourdomain.url",
        "description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns).",
        "label": "URL",
        "name": "URL"
      }
    ],
    "image": "linuxserver/swag:latest",
    "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif",
    "name": "Swag",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/swag/config</p>",
    "platform": "linux",
    "ports": [
      "443:443/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Swag",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/swag/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Tools",
      "Web"
    ],
    "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it swag htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
    "env": [
      {
        "default": "abc@example.com",
        "label": "EMAIL",
        "name": "EMAIL"
      },
      {
        "default": "-Xms256m -Xmx512m",
        "label": "URL",
        "name": "URL"
      },
      {
        "default": "www,",
        "label": "SUBDOMAINS",
        "name": "SUBDOMAINS"
      },
      {
        "default": "false",
        "label": "ONLY_SUBDOMAINS",
        "name": "ONLY_SUBDOMAINS"
      },
      {
        "default": "2048",
        "label": "DHLEVEL",
        "name": "DHLEVEL"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "http",
        "label": "VALIDATION",
        "name": "VALIDATION"
      },
      {
        "default": "http",
        "label": "DNSPLUGIN",
        "name": "DNSPLUGIN"
      }
    ],
    "image": "linuxserver/swag:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/swag.png",
    "name": "swag",
    "platform": "linux",
    "ports": [
      "80:80/tcp",
      "443:443/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "SWAG - Secure Web Application Gateway",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/swag",
        "container": "/config"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/linuxserver/docker-swag\" target=\"_blank\">https://github.com/linuxserver/docker-swag</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/general/swag\" target=\"_blank\">https://docs.linuxserver.io/general/swag</a><br><br><br>"
  },
  {
    "description": "[Synclounge](https://github.com/samcm/synclounge) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
    "env": [
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "false",
        "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set to `true` to let users autojoin the server and a room (specified by the `AUTOJOIN_ROOM` var).",
        "label": "AUTOJOIN_ENABLED",
        "name": "AUTOJOIN_ENABLED"
      },
      {
        "default": "plexuser1,plexuser2,email1,machineid1",
        "description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces.",
        "label": "AUTH_LIST",
        "name": "AUTH_LIST"
      },
      {
        "default": "roomname",
        "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set the room name for auto joining (requires `AUTOJOIN_ENABLED` set to `true`).",
        "label": "AUTOJOIN_ROOM",
        "name": "AUTOJOIN_ROOM"
      }
    ],
    "image": "linuxserver/synclounge:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png",
    "name": "Synclounge",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
    "platform": "linux",
    "ports": [
      "8088:8088/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Synclounge",
    "type": 1
  },
  {
    "categories": [
      "Backup",
      "Cloud",
      "Other",
      "Tools"
    ],
    "description": null,
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/syncthing:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/syncthing-icon.png",
    "name": "syncthing",
    "platform": "linux",
    "ports": [
      "21027:21027/udp",
      "22000:22000/tcp",
      "8384:8384/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "SyncThing",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Syncthing",
        "container": "/config"
      },
      {
        "container": "/sync"
      }
    ]
  },
  {
    "categories": [
      "System Tools"
    ],
    "description": "[syslog-ng](https://www.syslog-ng.com/products/open-source-log-management/) allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/syslog-ng:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png",
    "name": "Syslog-ng",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/syslog-ng/config<br></p>",
    "platform": "linux",
    "ports": [
      "514:5514/udp",
      "601:6601/tcp",
      "6514:6514/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Syslog-ng",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/log",
        "container": "/var/log"
      },
      {
        "bind": "/volume1/docker/syslog-ng/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Monitor",
      "Other"
    ],
    "description": "A quick way to display system stats on a 128x64 I2C OLED display.",
    "env": [
      {
        "default": "8",
        "label": "start displaying screen",
        "name": "start"
      },
      {
        "default": "23",
        "label": "end displaying screen",
        "name": "end"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.the-diy-life.com/\" target=\"_blank\">https://www.the-diy-life.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/mklements/OLED_Stats_Docker\" target=\"_blank\">https://github.com/mklements/OLED_Stats_Docker</a><br><br><br>Run this command first to enable is2 communication! \\nsudo raspi-config nonint do_i2c 0\\nsudo /DietPi/dietpi/func/dietpi-set_hardware i2c enable || sudo /boot/dietpi/func/dietpi-set_hardware i2c enable\\n",
    "image": "mklements/oled_stats:latest",
    "logo": "https://camo.githubusercontent.com/4cf4aaa1e53612347e4d48f152d6d4eea0ce93a6ecacacaa9d44061d0994b408/68747470733a2f2f7777772e7468652d6469792d6c6966652e636f6d2f77702d636f6e74656e742f75706c6f6164732f323032322f30392f3138373137323831322d64653264653635632d626433302d343065372d613835322d3264343234656463323761622e6a7067",
    "name": "OLED_Stats",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "System Stats OLED display",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/timezone",
        "container": "/etc/timezone"
      },
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime"
      }
    ],
    "network": "host",
    "privileged": true
  },
  {
    "categories": [
      "Other",
      "VPN"
    ],
    "command": "tailscale up --authkey=$AUTH_KEY",
    "description": "Connect your devices and users together in your own secure Zero config virtual private network. ",
    "env": [
      {
        "default": "",
        "description": "Get AUTH KEY from your tailscale.com user panel",
        "label": "AUTH_KEY",
        "name": "AUTH_KEY"
      }
    ],
    "image": "tailscale/tailscale:stable",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/tailscale-icon.png",
    "name": "tailscale",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Tailscale",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/tailscale",
        "container": "/var/lib/tailscale"
      },
      {
        "bind": "/dev/net/tun",
        "container": "/dev/net/tun"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://tailscale.com/\" target=\"_blank\">https://tailscale.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/tailscale/tailscale\" target=\"_blank\">https://hub.docker.com/r/tailscale/tailscale</a><br><br><br>"
  },
  {
    "description": "[Taisun](https://www.taisun.io/) is an application for a Docker enabled device with an emphasis on providing a web based interface for managing a single server. Taisun allows you to: - Deploy and manage web based virtual desktops. - Deploy Taisun specific stacks of applications - Browse available images on popular Docker repositories - Import a Docker project from any git repository and start developing on your choice of web based IDE or full Linux desktop - Spinup a developer container based on popular frameworks and work from a web based IDE - Single click remote server access to Taisun and your Docker applications",
    "image": "linuxserver/taisun:latest",
    "logo": "https://raw.githubusercontent.com/Taisun-Docker/taisun/master/public/favicon/apple-icon-180x180.png",
    "name": "Taisun",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p></p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Taisun",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Tautulli is a 3rd party application that you can run along side your Plex Media Server to monitor activity and track various statistics. Most importantly, these statistics include what has been watched, who watched it, when and where they watched it, and how it was watched. All statistics are presented in a nice and clean interface with many tables and graphs, which makes it easy to brag about your server to everyone else.[br][br]\r\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\r\n  [b]8181[/b] The webui for Tautulli's webui [br]\r\n  [b]/config[/b] Storing Configuration and the Tautulli database[br]\r\n[b]/logs[/b] Map to you plex logs (required for IP logging)[br]\r\n\r\n",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/tautulli:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tautulli-icon.png",
    "name": "tautulli",
    "platform": "linux",
    "ports": [
      "8181:8181/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Tautulli",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Tautulli",
        "container": "/config"
      },
      {
        "bind": "/portainer/Logs",
        "container": "/logs"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "Minecraft"
    ],
    "env": [
      {
        "name": "TZ",
        "label": "TZ",
        "default": "America/New_York",
        "description": "Specify a timezone to use for example Europe/London"
      }
    ],
    "description": "[Thanos](https://github.com/aternosorg/thanos) is a tool that allows you to shrink your minecraft worlds by deleting unused chuncks.",
    "image": "cristianeduardmihai/thanos:arm64",
    "logo": "https://raw.githubusercontent.com/novaspirit/pi-hosted/images/aternos-thanos.png",
    "name": "Thanos",
    "platform": "linux",
    "restart_policy": "never",
    "title": "Thanos",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/mc/output",
        "container": "/output"
      },
      {
        "bind": "/portainer/mc/input",
        "container": "/watch"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/aternosorg/thanos\" target=\"_blank\">https://github.com/aternosorg/thanos</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/aternosorg/thanos\" target=\"_blank\">https://github.com/aternosorg/thanos</a><br><br><br>"
  },
  {
    "categories": [
      "Messenger"
    ],
    "description": "A self-hosted web IRC client",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/thelounge:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/community-templates/master/lsiocommunity/img/shout-icon.png",
    "name": "thelounge",
    "platform": "linux",
    "ports": [
      "9000:9000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "TheLounge",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/TheLounge",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A unique, non-linear notebook wiki.",
    "image": "mazzolino/tiddlywiki:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tiddlywiki.png",
    "name": "tiddlywiki",
    "platform": "linux",
    "ports": [
      "8080:8080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "TiddlyWiki",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/TiddlyWiki",
        "container": "/var/lib/tiddlywiki"
      }
    ]
  },
  {
    "categories": [
      "Other"
    ],
    "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "lunik1/tt-rss:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/tt-rss-icon.png",
    "name": "tt-rss",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Tiny Tiny RSS",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/tt-rss",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Proxy",
      "Security",
      "Tools"
    ],
    "description": "Cloud-Native Networking Stack That Just Works.",
    "image": "traefik:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/traefik.png",
    "name": "traefik",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://doc.traefik.io/traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/</a><br><b>Official Docker Documentation: </b><a href=\"https://doc.traefik.io/traefik/getting-started/install-traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/getting-started/install-traefik/</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/traefik.sh\" target=\"_blank\">traefik.sh</a><br><br>A simple and lightweight reverse proxy",
    "platform": "linux",
    "ports": [
      "443:443/tcp",
      "8080:8080/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Traefik",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/traefik/acme.json",
        "container": "/acme.json"
      },
      {
        "bind": "/portainer/Files/AppData/Config/traefik/config.yml",
        "container": "/config.yml"
      },
      {
        "bind": "/portainer/Files/AppData/Config/traefik/traefik.yml",
        "container": "/traefik.yml"
      },
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/transmission:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/transmission-icon.png",
    "name": "transmission",
    "platform": "linux",
    "ports": [
      "51413:51413/tcp",
      "9091:9091/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Transmission",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Transmission",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/Downloads",
        "container": "/downloads"
      },
      {
        "container": "/watch"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "VPN"
    ],
    "description": "This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
    "env": [
      {
        "default": "",
        "description": "Optional. Mostly used to narrow down what location to use by the provider",
        "label": "OPENVPN_CONFIG",
        "name": "OPENVPN_CONFIG"
      },
      {
        "default": "",
        "label": "OPENVPN_PASSWORD",
        "name": "OPENVPN_PASSWORD"
      },
      {
        "default": "",
        "label": "OPENVPN_USERNAME",
        "name": "OPENVPN_USERNAME"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "192.168.0.0/24",
        "label": "LOCAL_NETWORK",
        "name": "LOCAL_NETWORK"
      },
      {
        "default": "MULLVAD",
        "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
        "label": "OPENVPN_PROVIDER",
        "name": "OPENVPN_PROVIDER"
      },
      {
        "default": "true",
        "label": "watch-dir-enabled",
        "name": "TRANSMISSION_WATCH_DIR_ENABLED"
      }
    ],
    "image": "haugene/transmission-openvpn:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/transmission-icon.png",
    "name": "transmission-openvpn-v4",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://transmissionbt.com/\" target=\"_blank\">https://transmissionbt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://haugene.github.io/docker-transmission-openvpn/run-container/\" target=\"_blank\">https://haugene.github.io/docker-transmission-openvpn/run-container/</a><br><br><br>List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
    "platform": "linux",
    "ports": [
      "9091:9091/tcp"
    ],
    "privileged": true,
    "restart_policy": "unless-stopped",
    "title": "Transmission OpenVPN Version 4",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools",
      "VPN"
    ],
    "description": "This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
    "env": [
      {
        "default": "",
        "description": "Optional. Mostly used to narrow down what location to use by the provider",
        "label": "OPENVPN_CONFIG",
        "name": "OPENVPN_CONFIG"
      },
      {
        "default": "",
        "label": "OPENVPN_PASSWORD",
        "name": "OPENVPN_PASSWORD"
      },
      {
        "default": "",
        "label": "OPENVPN_USERNAME",
        "name": "OPENVPN_USERNAME"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "192.168.0.0/24",
        "label": "LOCAL_NETWORK",
        "name": "LOCAL_NETWORK"
      },
      {
        "default": "MULLVAD",
        "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
        "label": "OPENVPN_PROVIDER",
        "name": "OPENVPN_PROVIDER"
      },
      {
        "default": "true",
        "label": "watch-dir-enabled",
        "name": "TRANSMISSION_WATCH_DIR_ENABLED"
      }
    ],
    "image": "haugene/transmission-openvpn:3.7.1",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/transmission-icon.png",
    "name": "transmission-openvpn",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://transmissionbt.com/\" target=\"_blank\">https://transmissionbt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://haugene.github.io/docker-transmission-openvpn/run-container/\" target=\"_blank\">https://haugene.github.io/docker-transmission-openvpn/run-container/</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=tGLVEq913_4&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=5\" target=\"_blank\">Torrent with Docker and OPENVPN with Transmission and PIA</a><br><br>List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
    "platform": "linux",
    "ports": [
      "9091:9091/tcp"
    ],
    "privileged": true,
    "restart_policy": "unless-stopped",
    "title": "Transmission-OpenVPN",
    "type": 1,
    "volumes": [
      {
        "bind": "/etc/localtime",
        "container": "/etc/localtime"
      },
      {
        "bind": "/portainer/Downloads",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Video"
    ],
    "description": "Tvheadend is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT&gt;IP and HDHomeRun as input sources.\r\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT&gt;IP streaming.\r\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/tvheadend:latest",
    "logo": "http://i.imgur.com/zGSUAT4.png",
    "name": "tvheadend",
    "platform": "linux",
    "ports": [
      "9981:9981/tcp",
      "9982:9982/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Tvheadend",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/TVHeadend",
        "container": "/config"
      },
      {
        "container": "/recordings"
      }
    ]
  },
  {
    "categories": [
      "Books",
      "Cloud"
    ],
    "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "MAXMEM",
        "name": "MAXMEM",
        "set": "512"
      }
    ],
    "image": "linuxserver/ubooquity:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ubooquity-icon.png",
    "name": "ubooquity",
    "platform": "linux",
    "ports": [
      "2202:2202/tcp",
      "2203:2203/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Ubooquity",
    "type": 1,
    "volumes": [
      {
        "container": "/books"
      },
      {
        "container": "/comics"
      },
      {
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Management",
      "Tools"
    ],
    "description": null,
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/unifi-controller:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/unifi-icon.png",
    "name": "unifi-controller",
    "platform": "linux",
    "ports": [
      "10001:10001/udp",
      "3478:3478/udp",
      "6789:6789/tcp",
      "8080:8080/tcp",
      "8081:8081/tcp",
      "8443:8443/tcp",
      "8843:8843/tcp",
      "8880:8880/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "UniFi Controller",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Unifi",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "CCTV"
    ],
    "description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti’s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature‑packed user interface with advanced features such as motion detection, auto‑discovery, user‑level security, storage management, reporting, and mobile device support.",
    "env": [
      {
        "default": "002",
        "label": "UMASK",
        "name": "UMASK"
      },
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "99",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "label": "CONTEXT_PATH",
        "name": "CONTEXT_PATH",
        "set": "UniFi Video"
      }
    ],
    "image": "pducharme/unifi-video-controller:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/UniFiVideo-logo.png",
    "name": "UniFi Video",
    "platform": "linux",
    "ports": [
      "1935:1935/tcp",
      "6666:6666/tcp",
      "7080:7080/tcp",
      "7442:7442/tcp",
      "7443:7443/tcp",
      "7444:7444/tcp",
      "7445:7445/tcp",
      "7446:7446/tcp",
      "7447:7447/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "UniFi Video",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/UniFiVideo/",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/UnifFiVideo/Recordings/",
        "container": "/recordings"
      }
    ]
  },
  {
    "categories": [
      "Tools"
    ],
    "description": "Unmanic is a simple tool for optimising your file library. You can use it to convert your files into a single, uniform format, manage file movements based on timestamps, or execute custom commands against a file based on its file size.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      }
    ],
    "image": "josh5/unmanic:latest",
    "logo": "https://docs.unmanic.app/img/icon.png",
    "name": "unmanic",
    "platform": "linux",
    "ports": [
      "8888:8888/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Unmanic",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/unmanic/config",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/unmanic/library",
        "container": "/library"
      },
      {
        "bind": "/portainer/Files/AppData/Config/unmanic/tmp",
        "container": "/tmp/unmanic"
      }
    ],
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.unmanic.app/\" target=\"_blank\">https://docs.unmanic.app/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.unmanic.app/docs/installation/docker\" target=\"_blank\">https://docs.unmanic.app/docs/installation/docker</a><br><br><br>"
  },
  {
    "categories": [
      "Monitor",
      "Tools"
    ],
    "description": "Monitor your Unifi Controller using Grafana developed by oijkn for the Raspberry Pi Monitor.",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/unpoller-logo.png",
    "name": "UnPoller Unifi Controller Monitor",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://unpoller.com/\" target=\"_blank\">https://unpoller.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/novaspirit/pi-hosted/blob/master/docs/UnPoller-Monitor.md\" target=\"_blank\">https://github.com/novaspirit/pi-hosted/blob/master/docs/UnPoller-Monitor.md</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/UnPoller-Monitor.md\" target=\"_blank\">UnPoller-Monitor.md</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/unpoller-install.sh\" target=\"_blank\">unpoller-install.sh</a><br><br>",
    "platform": "linux",
    "ports": [
      "8086:8086/tcp"
    ],
    "repository": {
      "stackfile": "stack/unpoller-stack.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "restart_policy": "unless-stopped",
    "title": "UnPoller Monitor",
    "type": 3
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "It is a self-hosted monitoring tool like 'Uptime Robot'.",
    "image": "louislam/uptime-kuma:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/uptime-kuma.png",
    "name": "uptime-kuma",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/louislam/uptime-kuma\" target=\"_blank\">https://github.com/louislam/uptime-kuma</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install#-docker\" target=\"_blank\">https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install#-docker</a><br><br><br>A fancy self-hosted monitoring tool.",
    "platform": "linux",
    "ports": [
      "3001:3001/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Uptime Kuma",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/uptime-kuma",
        "container": "/app/data"
      }
    ]
  },
  {
    "categories": [
      "backup"
    ],
    "description": "Open-source network backup",
    "image": "cfstras/urbackup",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/urbackup.png",
    "note": "This application web interface is exposed on the port 55414 inside the container.",
    "platform": "linux",
    "ports": [
      "35622/tcp",
      "55413/tcp",
      "55414/tcp",
      "55415/tcp"
    ],
    "title": "Urbackup",
    "type": 1,
    "volumes": [
      {
        "container": "/var/urbackup"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
    "image": "vaultwarden/server:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/bitwarden.png",
    "name": "vaultwarden",
    "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
    "platform": "linux",
    "ports": [
      "80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Vaultwarden",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Vaultwarden",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Cloud",
      "Management",
      "Web",
      "todo"
    ],
    "description": "Vikunja With Frontend.  The to-do app to organize your life.  Must run tools/install_vikunja.sh before installing the template.  More informantion at https://vikunja.io/",
    "env": [
      {
        "default": "",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "vikunja",
        "label": "DATABASE_NAME",
        "name": "DATABASE_NAME"
      },
      {
        "default": "vikunja",
        "label": "DATABASE_USER",
        "name": "DATABASE_USER"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/vikunja.png",
    "name": "vikunja",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://vikunja.io/\" target=\"_blank\">https://vikunja.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://vikunja.io/docs/full-docker-example/#example-with-nginx-as-proxy\" target=\"_blank\">https://vikunja.io/docs/full-docker-example/#example-with-nginx-as-proxy</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_vikunja.sh\" target=\"_blank\">install_vikunja.sh</a><br><br>",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/vikunja.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Vikunja With Frontend",
    "type": 3
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "This is a replacement for Microsoft's KMS server.",
    "image": "mikolatero/vlmcsd:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/vlmcsd.png",
    "name": "vlmcsd-kms",
    "platform": "linux",
    "ports": [
      "1688:1688/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Vlmcsd - KMS",
    "type": 1,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hub.docker.com/r/mikolatero/vlmcsd\" target=\"_blank\">https://hub.docker.com/r/mikolatero/vlmcsd</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/mikolatero/docker-vlmcsd\" target=\"_blank\">https://github.com/mikolatero/docker-vlmcsd</a><br><br><br>"
  },
  {
    "categories": [
      "Maintenance",
      "Other",
      "Tools"
    ],
    "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
    "image": "containrrr/watchtower:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/watchtower.png",
    "name": "watchtower",
    "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Watchtower",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      }
    ]
  },
  {
    "categories": [
      "Downloaders"
    ],
    "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.[br]\r\n\t\tOptional postprocessors to add IMDb data or to customize your xmltv listing.[br]\r\n\t\thttp://www.webgrabplus.com/[br]\r\n\t\t[b][span style='color: #E80000;']Directions:[/span][/b][br]\r\n\t\t[b]/config[/b] : This is where WebGrab+Plus will store it's configuration.[br][br]\r\n\t\t[b]/data[/b] : This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.[br][br]",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/webgrabplus:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/webgrabplus.png",
    "name": "webgrabplus",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "WebGrab+Plus",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/WebGrabPlus",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/WebGrabPlus",
        "container": "/data"
      }
    ]
  },
  {
    "description": "[Webgrabplus](http://www.webgrabplus.com) is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/webgrabplus:latest",
    "logo": "http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg",
    "name": "Webgrabplus",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webgrabplus/config<br>mkdir -p /volume1/docker/webgrabplus/data</p>",
    "platform": "linux",
    "restart_policy": "unless-stopped",
    "title": "Webgrabplus",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/webgrabplus/config",
        "container": "/config"
      },
      {
        "bind": "/volume1/docker/webgrabplus/data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Utilities"
    ],
    "description": "[Webtop](https://github.com/linuxserver/gclient) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
    "env": [
      {
        "default": "/",
        "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
        "label": "SUBFOLDER",
        "name": "SUBFOLDER"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "en-us-qwerty",
        "description": "See the keyboard layouts section for more information and options.",
        "label": "KEYBOARD",
        "name": "KEYBOARD"
      }
    ],
    "image": "linuxserver/webtop:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
    "name": "Webtop",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webtop/config<br></p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Webtop",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      },
      {
        "bind": "/volume1/docker/webtop/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
    "image": "benbusby/whoogle-search:0.6.0",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/whoogle.png",
    "name": "whoogle",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/benbusby/whoogle-search\" target=\"_blank\">https://github.com/benbusby/whoogle-search</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/benbusby/whoogle-search#g-manual-docker\" target=\"_blank\">https://github.com/benbusby/whoogle-search#g-manual-docker</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=j3ZGxo3ibUs&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=12\" target=\"_blank\">How to Install Whoogle to replace using Google and repo notes</a><br><br>",
    "platform": "linux",
    "ports": [
      "5001:5000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Whoogle",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Whoogle",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
    "image": "linuxserver/wikijs:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/wikijs.png",
    "name": "wikijs",
    "platform": "linux",
    "ports": [
      "3100:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Wikijs",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Wikijs",
        "container": "/config"
      },
      {
        "bind": "/portainer/Files/AppData/Config/Wikijs/data",
        "container": "/data"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A Docker image for Windows 2000 Advanced Server with SP4.",
    "image": "hectormolinero/qemu-win2000:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/win2000.png",
    "name": "win2000",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/hectorm/docker-qemu-win2000\" target=\"_blank\">https://github.com/hectorm/docker-qemu-win2000</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/hectorm/docker-qemu-win2000#start-an-instance\" target=\"_blank\">https://github.com/hectorm/docker-qemu-win2000#start-an-instance</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=57Gnp0424Qc&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=13\" target=\"_blank\">Checking out Windows 2000 Docker</a><br><br>Why? Your scientists were so preoccupied with whether or not they could, that they didn't stop to think if they should. -- Dr. Ian Malcolm",
    "platform": "linux",
    "ports": [
      "3389:3389/tcp",
      "5900:5900/tcp",
      "6080:6080/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Windows 2000",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/Win2000/zdrive",
        "container": "/mnt"
      }
    ]
  },
  {
    "description": "[WireGuard®](https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
    "env": [
      {
        "default": "0.0.0.0/0",
        "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1.",
        "label": "ALLOWEDIPS",
        "name": "ALLOWEDIPS"
      },
      {
        "default": "1",
        "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)",
        "label": "PEERS",
        "name": "PEERS"
      },
      {
        "default": "10.13.13.0",
        "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode.",
        "label": "INTERNAL_SUBNET",
        "name": "INTERNAL_SUBNET"
      },
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "51820",
        "description": "External port for docker host. Used in server mode.",
        "label": "SERVERPORT",
        "name": "SERVERPORT"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "auto",
        "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward.",
        "label": "PEERDNS",
        "name": "PEERDNS"
      },
      {
        "default": "wireguard.domain.com",
        "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically",
        "label": "SERVERURL",
        "name": "SERVERURL"
      }
    ],
    "image": "linuxserver/wireguard:latest",
    "logo": "https://www.wireguard.com/img/wireguard.svg",
    "name": "Wireguard",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireguard/config<br></p>",
    "platform": "linux",
    "ports": [
      "51820:51820/udp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Wireguard",
    "type": 1,
    "volumes": [
      {
        "bind": "/lib/modules",
        "container": "/lib/modules"
      },
      {
        "bind": "/volume1/docker/wireguard/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "VPN"
    ],
    "description": "Fast VPN Server with easy to use User Interface",
    "env": [
      {
        "default": "0.0.0.0/0, ::/0",
        "label": "WG_ALLOWED_IPS",
        "name": "WG_ALLOWED_IPS"
      },
      {
        "default": "1.1.1.1",
        "label": "WG_DEFAULT_DNS",
        "name": "WG_DEFAULT_DNS"
      },
      {
        "default": "51820",
        "label": "WG_PORT",
        "name": "WG_PORT"
      },
      {
        "default": "ENTER AN ADMIN PASSWORD",
        "description": "Leave blank to access WebUI without loggin",
        "label": "PASSWORD",
        "name": "PASSWORD"
      },
      {
        "default": "example.domain.com",
        "description": "Set here your DDNS domain",
        "label": "WG_HOST",
        "name": "WG_HOST"
      }
    ],
    "image": "weejewel/wg-easy:latest",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wireguard.png",
    "name": "wg-easy",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/WeeJeWel/wg-easy/\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/WeeJeWel/wg-easy/#1-install-docker\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/#1-install-docker</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wireguard-install.md\" target=\"_blank\">wireguard-install.md</a><br><br><br>",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/wireguard-easy.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "title": "Wireguard Server",
    "type": 3
  },
  {
    "description": "[Wireshark](https://www.wireshark.org/) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/wireshark:latest",
    "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
    "name": "Wireshark",
    "network": "host",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireshark/config</p>",
    "platform": "linux",
    "ports": [
      "3000:3000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Wireshark",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/wireshark/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "CMS"
    ],
    "description": "Wordpress setup with a MySQL database",
    "env": [
      {
        "description": "Password used by the MySQL root user.",
        "label": "Database root password",
        "name": "MYSQL_DATABASE_PASSWORD"
      }
    ],
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
    "note": "Deploys a Wordpress instance connected to a MySQL database.",
    "platform": "linux",
    "repository": {
      "stackfile": "stacks/wordpress/docker-compose.yml",
      "url": "https://github.com/portainer/templates"
    },
    "title": "Wordpress",
    "type": 3
  },
  {
    "categories": [
      "streaming"
    ],
    "description": "Streaming media server",
    "env": [
      {
        "label": "Agree to Wowza EULA",
        "name": "WOWZA_ACCEPT_LICENSE",
        "set": "yes"
      },
      {
        "label": "License key",
        "name": "WOWZA_KEY"
      }
    ],
    "image": "sameersbn/wowza:4.1.2-8",
    "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wowza.png",
    "platform": "linux",
    "ports": [
      "1935/tcp",
      "8086/tcp",
      "8087/tcp",
      "8088/tcp"
    ],
    "title": "Wowza",
    "type": 1,
    "volumes": [
      {
        "container": "/var/lib/wowza"
      }
    ]
  },
  {
    "description": "[Xbackbone](https://github.com/SergiX44/XBackBone) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/xbackbone:latest",
    "logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
    "name": "Xbackbone",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/xbackbone/config</p>",
    "platform": "linux",
    "ports": [
      "443:443/tcp",
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Xbackbone",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/xbackbone/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Other",
      "Tools"
    ],
    "description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
    "image": "selfhostedpro/yacht:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
    "name": "yacht",
    "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://yacht.sh/\" target=\"_blank\">https://yacht.sh/</a><br><b>Official Docker Documentation: </b><a href=\"https://yacht.sh/docs/Installation/Install#via-docker-compose\" target=\"_blank\">https://yacht.sh/docs/Installation/Install#via-docker-compose</a><br><br><br>",
    "platform": "linux",
    "ports": [
      "8001:8000/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Yacht",
    "type": 1,
    "volumes": [
      {
        "bind": "/var/run/docker.sock",
        "container": "/var/run/docker.sock"
      },
      {
        "bind": "yacht",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Music"
    ],
    "description": "Self hosted Spotify tracking dashboard.",
    "env": [
      {
        "default": "3081",
        "label": "API Port",
        "name": "__api_port__"
      },
      {
        "default": "3080",
        "label": "Client Port",
        "name": "__client_port__"
      },
      {
        "default": "http://192.168.X.Y:3080",
        "label": "Client Endpoint",
        "name": "__client_endpoint__",
        "description": "If you have changed the default client port don't forget to change it here too."
      },
      {
        "default": "http://192.168.X.Y:3081",
        "label": "API Endpoint",
        "name": "__api_endpoint__",
        "description": "If you have changed the default API port don't forget to change it here too."
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "description": "Create a Spotify App and copy the Client ID: https://developer.spotify.com/dashboard/applications",
        "label": "Spotify Client ID",
        "name": "__your_spotify_client_id__"
      },
      {
        "description": "Copy the Client Secret: https://developer.spotify.com/dashboard/applications",
        "label": "Spotify Client Secret",
        "name": "__your_spotify_secret__"
      }
    ],
    "name": "Your Spotify",
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/your-spotify.png",
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/Yooooomi/your_spotify\" target=\"_blank\">https://github.com/Yooooomi/your_spotify</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Yooooomi/your_spotify#readme\" target=\"_blank\">https://github.com/Yooooomi/your_spotify#readme</a><br><br><br>Create a Spotify App here: https://developer.spotify.com/dashboard/applications. Don't forget adding Redirect URL: http://192.168.X.Y:3081/oauth/spotify/callback under edit settings of the dashboard.",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/your-spotify.yml",
      "url": "https://github.com/pi-hosted/pi-hosted"
    },
    "title": "your-spotify",
    "type": 3
  },
  {
    "categories": [
      "Other",
      "CMD",
      "Web",
      "Tools"
    ],
    "description": "YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener.",
    "env": [
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "1000",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "America/New_York",
        "label": "TZ",
        "name": "TZ"
      },
      {
        "default": "https://example.com",
        "label": "YOURLS_SITE",
        "name": "YOURLS_SITE"
      },
      {
        "default": "admin",
        "label": "YOURLS_USERNAME",
        "name": "YOURLS_USERNAME"
      },
      {
        "default": "",
        "label": "YOURLS_PASSWORD",
        "name": "YOURLS_PASSWORD"
      },
      {
        "default": "yourls",
        "label": "DATABASE_NAME",
        "name": "DATABASE_NAME"
      },
      {
        "default": "yourls",
        "label": "DATABASE_USER",
        "name": "DATABASE_USER"
      },
      {
        "default": "",
        "label": "DATABASE_PASSWORD",
        "name": "DATABASE_PASSWORD"
      },
      {
        "default": "",
        "label": "MYSQL_ROOT_PASSWORD",
        "name": "MYSQL_ROOT_PASSWORD"
      }
    ],
    "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/yourls-logo.png",
    "name": "yourls",
    "platform": "linux",
    "repository": {
      "stackfile": "stack/yourls.yml",
      "url": "https://github.com/pi-hosted/pi-hosted/"
    },
    "restart_policy": "unless-stopped",
    "title": "Yourls",
    "type": 3,
    "note": "<b>Template created by Pi-Hosted Series</b><br><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://yourls.org/\" target=\"_blank\">https://yourls.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://yourls.org/#Install\" target=\"_blank\">https://yourls.org/#Install</a><br><br><h3><b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_yourls.sh\" target=\"_blank\">Pre-installation script</a> must be RAN before you install: </b>wget -qO- https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/tools/install_yourls.sh | bash</h3><br><br>"
  },
  {
    "categories": [
      "Downloaders",
      "Other"
    ],
    "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
    "image": "tzahi12345/youtubedl-material:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ytdlm.png",
    "name": "youtubedl-material",
    "platform": "linux",
    "ports": [
      "17442:17442/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "YouTubeDL-Material",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/YTDLM",
        "container": "/app/appdata"
      },
      {
        "bind": "/portainer/Files/AppData/Youtube/Audio",
        "container": "/app/audio"
      },
      {
        "bind": "/portainer/Files/AppData/Youtube/Subscriptions",
        "container": "/app/subscriptions"
      },
      {
        "bind": "/portainer/Files/AppData/Youtube/Users",
        "container": "/app/users"
      },
      {
        "bind": "/portainer/Files/AppData/Youtube/Video",
        "container": "/app/video"
      }
    ]
  },
  {
    "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/yq for details.",
    "env": [
      {
        "default": "100",
        "description": "for UserID",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1024",
        "description": "for GroupID",
        "label": "PUID",
        "name": "PUID"
      },
      {
        "default": "America/Chicago",
        "description": "Specify a timezone to use for example America/Chicago",
        "label": "TZ",
        "name": "TZ"
      }
    ],
    "image": "linuxserver/yq:latest",
    "logo": "",
    "name": "Yq",
    "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/yq/config</p>",
    "platform": "linux",
    "ports": [
      "80:80/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "Yq",
    "type": 1,
    "volumes": [
      {
        "bind": "/volume1/docker/yq/config",
        "container": "/config"
      }
    ]
  },
  {
    "categories": [
      "Messenger"
    ],
    "description": "ZNC is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
    "env": [
      {
        "default": "100",
        "label": "PGID",
        "name": "PGID"
      },
      {
        "default": "1000",
        "label": "PUID",
        "name": "PUID"
      }
    ],
    "image": "linuxserver/znc:latest",
    "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/znc-icon.png",
    "name": "znc",
    "platform": "linux",
    "ports": [
      "6501:6501/tcp"
    ],
    "restart_policy": "unless-stopped",
    "title": "ZNC",
    "type": 1,
    "volumes": [
      {
        "bind": "/portainer/Files/AppData/Config/ZNC",
        "container": "/config"
      }
    ]
  }
],
"version": "2"
}